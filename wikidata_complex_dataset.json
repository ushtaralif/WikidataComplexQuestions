[
    {
        "Question": "What is the birth date of the spouse of the predecessor of the current President of the United States?",
        "SPARQL": "SELECT ?birthDate WHERE {\n  ?currentPresident p:P39 ?posStatement .\n  ?posStatement ps:P39 wd:Q11696 .\n  FILTER NOT EXISTS { ?posStatement pq:P582 ?endtime. }\n  ?posStatement pq:P1365 ?predecessor .\n  ?predecessor wdt:P26 ?spouse .\n  ?spouse wdt:P569 ?birthDate .\n}",
        "Answer": "April 26, 1970"
    },
    {
        "Question": "Which political party did the spouse of Barack Obama's predecessor as U.S. President belong to?",
        "SPARQL": "SELECT ?partyLabel WHERE {\n  wd:Q76 p:P39 ?st .\n  ?st ps:P39 wd:Q11696 ;\n      pq:P1365 ?pred .\n  ?pred wdt:P26 ?spouse .\n  ?spouse wdt:P102 ?party .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Republican Party (United States)"
    },
    {
        "Question": "Which Prime Minister of India had a mother who also served as Prime Minister of India?",
        "SPARQL": "SELECT ?pm ?pmLabel WHERE {\n  ?pm wdt:P39 wd:Q11696 ;\n      wdt:P25 ?mother .\n  ?mother wdt:P39 wd:Q11696 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Rajiv Gandhi"
    },
    {
        "Question": "Who composed the national anthem of the country where Marie Curie died?",
        "SPARQL": "SELECT DISTINCT ?composer ?composerLabel WHERE { wd:Q7186 wdt:P20 ?placeOfDeath . ?placeOfDeath wdt:P17 ?country . ?country wdt:P85 ?anthem . ?anthem wdt:P86 ?composer . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Claude Joseph Rouget de Lisle"
    },
    {
        "Question": "Which former spouse of the first woman to win the Academy Award for Best Director also won that award, and for which film?",
        "SPARQL": "SELECT ?spouseLabel ?workLabel WHERE { wd:Q175901 wdt:P26 ?spouse . ?spouse p:P166 ?awardStmt . ?awardStmt ps:P166 wd:Q103360 . OPTIONAL { ?awardStmt pq:P1686 ?work . } SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "James Cameron — Titanic"
    },
    {
        "Question": "Who succeeded the only British Prime Minister to have won the Nobel Prize in Literature in his final term?",
        "SPARQL": "SELECT ?successor ?successorLabel WHERE {\n  BIND(wd:Q145 AS ?country)\n  ?country p:P6 ?stmt .\n  ?stmt ps:P6 ?pm .\n  ?pm wdt:P166 wd:Q37922 .\n  ?stmt pq:P582 ?end .\n  ?stmt pq:P1366 ?successor .\n  {\n    SELECT ?pm (MAX(?end1) AS ?maxEnd)\n    WHERE {\n      BIND(wd:Q145 AS ?country)\n      ?country p:P6 ?stmt1 .\n      ?stmt1 ps:P6 ?pm .\n      ?pm wdt:P166 wd:Q37922 .\n      ?stmt1 pq:P582 ?end1 .\n    }\n    GROUP BY ?pm\n  }\n  FILTER(?end = ?maxEnd)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Anthony Eden"
    },
    {
        "Question": "What is the capital city of the country where Barack Obama's spouse was educated?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE { wd:Q76 wdt:P26 ?spouse . ?spouse wdt:P69 ?school . ?school wdt:P17 ?country . ?country wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Washington, D.C."
    },
    {
        "Question": "Which Nobel Prize laureate is the child of two other Nobel Prize laureates?",
        "SPARQL": "SELECT DISTINCT ?personLabel WHERE { ?person wdt:P166 ?nobel . ?nobel wdt:P361* wd:Q7191 . ?person wdt:P22 ?father ; wdt:P25 ?mother . ?father wdt:P166 ?fnobel . ?fnobel wdt:P361* wd:Q7191 . ?mother wdt:P166 ?mnobel . ?mnobel wdt:P361* wd:Q7191 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. } }",
        "Answer": "Irène Joliot-Curie"
    },
    {
        "Question": "What is the country of citizenship of the Fields Medalist who was a doctoral student of Alexander Grothendieck?",
        "SPARQL": "SELECT DISTINCT ?countryLabel WHERE {\n  ?advisor rdfs:label \"Alexander Grothendieck\"@en .\n  ?award rdfs:label \"Fields Medal\"@en .\n  ?person wdt:P184 ?advisor ;\n          wdt:P166 ?award ;\n          wdt:P27 ?country .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Belgium"
    },
    {
        "Question": "What is the capital of the country where Albert Einstein died?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE { wd:Q937 wdt:P20/wdt:P17/wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Washington, D.C."
    },
    {
        "Question": "What is the capital of the country that contains the birthplace of Albert Einstein's first wife?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE { { SELECT ?spouse WHERE { wd:Q937 p:P26 ?st . ?st ps:P26 ?spouse ; pq:P580 ?start . } ORDER BY ?start LIMIT 1 } ?spouse wdt:P19 ?birthplace . ?birthplace (wdt:P131*)/wdt:P17 ?country . ?country wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Belgrade"
    },
    {
        "Question": "Which Nobel Prize did the husband of Marie Curie's elder daughter receive?",
        "SPARQL": "SELECT ?awardLabel WHERE {\n  {\n    SELECT ?daughter WHERE {\n      wd:Q7186 wdt:P40 ?daughter .\n      ?daughter wdt:P21 wd:Q6581072 .\n      ?daughter wdt:P569 ?bdate .\n    }\n    ORDER BY ?bdate\n    LIMIT 1\n  }\n  ?daughter wdt:P26 ?husband .\n  ?husband wdt:P166 ?award .\n  ?award wdt:P31/wdt:P279* wd:Q7191 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Nobel Prize in Chemistry"
    },
    {
        "Question": "What is the capital of the country where the author of 'One Hundred Years of Solitude' was born?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q208460 wdt:P50 ?author .\n  ?author wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Bogotá"
    },
    {
        "Question": "What is the capital city of the country whose head of state was the person who replaced John F. Kennedy as President of the United States?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE {\n  ?succ p:P39 ?posStmt .\n  ?posStmt ps:P39 wd:Q11696 ;  # President of the United States\n           pq:P1365 wd:Q9696 .  # replaces John F. Kennedy\n  ?country p:P35 ?hosStmt .\n  ?hosStmt ps:P35 ?succ .       # country where that successor was head of state\n  ?country wdt:P36 ?capital .   # capital of that country\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Washington, D.C."
    },
    {
        "Question": "What is the capital of the country where Vincent van Gogh died?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE { wd:Q5582 wdt:P20 ?deathPlace . ?deathPlace wdt:P17 ?country . ?country wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Paris"
    },
    {
        "Question": "What writing system is used by the official language of the country where Yuri Gagarin died?",
        "SPARQL": "SELECT DISTINCT ?script ?scriptLabel WHERE {\n  wd:Q41352 wdt:P20 ?place .\n  ?place (wdt:P17|wdt:P131*/wdt:P17) ?country .\n  ?country wdt:P37 ?language .\n  ?language wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Cyrillic script"
    },
    {
        "Question": "What is the capital of the country where Alan Turing died?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE { wd:Q7251 wdt:P20 ?deathPlace . ?deathPlace wdt:P17 ?country . ?country wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "London"
    },
    {
        "Question": "Who preceded the spouse of Cristina Fernández de Kirchner as President of Argentina?",
        "SPARQL": "SELECT ?predecessor ?predecessorLabel WHERE { wd:Q312394 wdt:P26 ?spouse . ?spouse p:P39 ?positionStatement . ?positionStatement ps:P39 wd:Q191650 . ?positionStatement pq:P1365 ?predecessor . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Eduardo Duhalde"
    },
    {
        "Question": "What is the first given name of the spouse of the U.S. president who succeeded John F. Kennedy?",
        "SPARQL": "SELECT DISTINCT ?givenNameLabel WHERE {\n  ?president p:P39 ?st .\n  ?st ps:P39 wd:Q11696 ;\n      pq:P1365 wd:Q9696 .\n  ?president wdt:P26 ?spouse .\n  ?spouse p:P735 ?gnStmt .\n  ?gnStmt ps:P735 ?givenName ;\n          pq:P1545 \"1\" .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Claudia"
    },
    {
        "Question": "Who succeeded the Secretary-General of the United Nations who received the Nobel Peace Prize in 2001?",
        "SPARQL": "SELECT ?successor ?successorLabel WHERE {\n  ?sg wdt:P31 wd:Q5 ;\n      wdt:P39 wd:Q4830453 .\n  ?sg p:P166 ?awardStmt .\n  ?awardStmt ps:P166 wd:Q35637 ;\n             pq:P585 ?awardDate .\n  FILTER(YEAR(?awardDate) = 2001)\n  ?sg wdt:P1366 ?successor .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Ban Ki-moon"
    },
    {
        "Question": "In which city was the wife of the first U.S. president who was the son of a U.S. president born?",
        "SPARQL": "SELECT ?birthPlaceLabel WHERE {\n  # Presidents of the United States (Q11696) with recorded start time\n  ?pres p:P39 ?posStmt .\n  ?posStmt ps:P39 wd:Q11696 ;\n           pq:P580 ?start .\n  # Their father is also a U.S. president\n  ?pres wdt:P22 ?father .\n  ?father p:P39/ps:P39 wd:Q11696 .\n  # Take the president's wife and her birthplace\n  ?pres wdt:P26 ?spouse .\n  ?spouse wdt:P21 wd:Q6581072 ;  # female (wife)\n          wdt:P19 ?birthPlace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ASC(?start)\nLIMIT 1",
        "Answer": "London"
    },
    {
        "Question": "Who succeeded the first female Prime Minister of the United Kingdom?",
        "SPARQL": "SELECT ?successor ?successorLabel WHERE {\n  {\n    SELECT ?pmStatement WHERE {\n      ?pm wdt:P21 wd:Q6581072 .\n      ?pm p:P39 ?pmStatement .\n      ?pmStatement ps:P39 wd:Q14211 ;\n                   pq:P580 ?start .\n    }\n    ORDER BY ?start\n    LIMIT 1\n  }\n  ?pmStatement pq:P1366 ?successor .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "John Major"
    },
    {
        "Question": "What writing system is used by the official language of the country whose capital is the birthplace of António Guterres?",
        "SPARQL": "SELECT ?script ?scriptLabel WHERE {\n  wd:Q311 wdt:P19 ?birthplace .\n  ?country wdt:P36 ?birthplace .\n  ?country wdt:P37 ?language .\n  ?language wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the capital of the German federal state where Pope John Paul II's successor was born?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q8818 wdt:P156 ?successor .\n  ?successor wdt:P19 ?birthplace .\n  ?birthplace wdt:P131* ?region .\n  ?region wdt:P31 wd:Q1221156 .\n  ?region wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Munich"
    },
    {
        "Question": "What is the official language of the country in which Marie Curie's spouse died?",
        "SPARQL": "SELECT ?language ?languageLabel WHERE {\n  wd:Q7186 wdt:P26/wdt:P20/wdt:P17/wdt:P37 ?language .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "French"
    },
    {
        "Question": "Who succeeded the first female President of India?",
        "SPARQL": "SELECT ?successor ?successorLabel WHERE {\n  # Identify the office by its English label\n  ?position rdfs:label \"President of India\"@en.\n\n  # Get the first female officeholder (earliest start time)\n  {\n    SELECT ?ff ?ffStart ?ffEnd WHERE {\n      ?position rdfs:label \"President of India\"@en.\n      ?ff p:P39 ?ffStmt.\n      ?ffStmt ps:P39 ?position;\n              pq:P580 ?ffStart.\n      OPTIONAL { ?ffStmt pq:P582 ?ffEnd. }\n      ?ff wdt:P21 wd:Q6581072.  # female\n    }\n    ORDER BY ASC(?ffStart)\n    LIMIT 1\n  }\n\n  # Find the immediate successor: next officeholder to start after her term\n  ?successor p:P39 ?succStmt.\n  ?succStmt ps:P39 ?position;\n            pq:P580 ?succStart.\n  FILTER( IF(BOUND(?ffEnd), ?succStart >= ?ffEnd, ?succStart > ?ffStart) )\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ASC(?succStart)\nLIMIT 1",
        "Answer": "Pranab Mukherjee"
    },
    {
        "Question": "Which children of a President of the United States also later served as President themselves?",
        "SPARQL": "SELECT ?child ?childLabel WHERE { ?parent wdt:P39 wd:Q11696 . ?parent wdt:P40 ?child . ?child wdt:P39 wd:Q11696 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }} ORDER BY ?childLabel",
        "Answer": "George W. Bush; John Quincy Adams"
    },
    {
        "Question": "Who succeeded the first female Prime Minister of the United Kingdom?",
        "SPARQL": "SELECT ?successor ?successorLabel WHERE {\n  ?femalePM wdt:P21 wd:Q6581072 .\n  ?femalePM p:P39 ?pmStmt .\n  ?pmStmt ps:P39 wd:Q14211 ;\n          pq:P580 ?start ;\n          pq:P1366 ?successor .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ASC(?start)\nLIMIT 1",
        "Answer": "John Major"
    },
    {
        "Question": "Which political party did Nelson Mandela's predecessor as President of South Africa belong to at the time Mandela took office?",
        "SPARQL": "SELECT ?partyLabel WHERE { wd:Q8023 p:P39 ?ps . ?ps ps:P39 wd:Q347413 ; pq:P1365 ?predecessor ; pq:P580 ?mandelaStart . ?predecessor p:P102 ?partyStmt . ?partyStmt ps:P102 ?party . OPTIONAL { ?partyStmt pq:P580 ?partyStart . } OPTIONAL { ?partyStmt pq:P582 ?partyEnd . } FILTER((!BOUND(?partyStart) || ?partyStart <= ?mandelaStart) && (!BOUND(?partyEnd) || ?partyEnd >= ?mandelaStart)) SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "National Party (South Africa)"
    },
    {
        "Question": "Which college of the University of Cambridge did the Nobel Prize in Physics laureate who discovered the electron and served as President of the Royal Society attend?",
        "SPARQL": "SELECT DISTINCT ?collegeLabel WHERE {\n  wd:Q36496 wdt:P61 ?person .               # electron -> discoverer\n  ?person wdt:P166 wd:Q38104 .              # award received: Nobel Prize in Physics\n  ?person wdt:P39 wd:Q1289089 .             # position held: President of the Royal Society\n  ?person wdt:P69 ?college .                # educated at -> college\n  ?college wdt:P361 wd:Q35794 .             # college is part of the University of Cambridge\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Trinity College, Cambridge"
    },
    {
        "Question": "In which city is the headquarters of the university where Albert Einstein earned his PhD?",
        "SPARQL": "SELECT ?city ?cityLabel WHERE {\n  wd:Q937 p:P69 ?eduStatement .\n  ?eduStatement ps:P69 ?university .\n  ?eduStatement pq:P512 wd:Q752297 .\n  ?university wdt:P159 ?city .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Zürich"
    },
    {
        "Question": "What is the birthplace of the immediate successor of the first female Prime Minister of the United Kingdom?",
        "SPARQL": "SELECT ?birthplace ?birthplaceLabel WHERE {\n  {\n    SELECT ?femalePM WHERE {\n      ?femalePM wdt:P21 wd:Q6581072;        # female\n                p:P39 ?stmt.\n      ?stmt ps:P39 wd:Q14211;               # position held: Prime Minister of the UK\n            pq:P580 ?start.                 # start time of that term\n    }\n    ORDER BY ?start\n    LIMIT 1                                  # earliest female PM (Margaret Thatcher)\n  }\n  ?successor p:P39 ?succStmt.\n  ?succStmt ps:P39 wd:Q14211;                # successor's PM statement\n            pq:P1365 ?femalePM.              # replaces = the first female PM\n  ?successor wdt:P19 ?birthplace.            # birthplace of the successor (John Major)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nLIMIT 1",
        "Answer": "Carshalton"
    },
    {
        "Question": "Which Nobel Prize in Physics laureate who shared the 1915 prize had a son who also won the Nobel Prize in Physics?",
        "SPARQL": "SELECT DISTINCT ?laureate ?laureateLabel WHERE { ?laureate p:P166 ?awardStmt . ?awardStmt ps:P166 wd:Q38104 ; pq:P585 ?awardTime . FILTER(YEAR(?awardTime) = 1915) ?laureate wdt:P40 ?child . ?child wdt:P166 wd:Q38104 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "William Henry Bragg"
    },
    {
        "Question": "What is the currency used in the country where the creator of the Mona Lisa was born?",
        "SPARQL": "SELECT DISTINCT ?currency ?currencyLabel WHERE {\n  wd:Q12418 wdt:P170 ?creator .\n  ?creator wdt:P19 ?birthplace .\n  ?birthplace (wdt:P131*)/wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "euro"
    },
    {
        "Question": "What is the capital of the country whose head of state is a child of Queen Margrethe II?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE {\n  wd:Q773 wdt:P40 ?child .\n  ?country wdt:P35 ?child .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Copenhagen"
    },
    {
        "Question": "Who wrote the lyrics of the national anthem of the country where Marie Curie was born?",
        "SPARQL": "SELECT ?lyricist ?lyricistLabel WHERE {\n  wd:Q7186 wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P85 ?anthem .\n  ?anthem wdt:P676 ?lyricist .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Józef Wybicki"
    },
    {
        "Question": "What is the birth year of the person who succeeded the first female Prime Minister of the United Kingdom?",
        "SPARQL": "SELECT ?year WHERE {\n  ?pm p:P39 ?st .\n  ?st ps:P39 ?position .\n  ?position rdfs:label \"Prime Minister of the United Kingdom\"@en .\n  ?pm wdt:P21 wd:Q6581072 .\n  ?st pq:P580 ?start .\n  ?st pq:P1366 ?successor .\n  ?successor wdt:P569 ?dob .\n  BIND(YEAR(?dob) AS ?year)\n}\nORDER BY ?start\nLIMIT 1",
        "Answer": "1943"
    },
    {
        "Question": "Who composed the national anthem of the country where Albert Einstein died?",
        "SPARQL": "SELECT ?composer ?composerLabel WHERE { wd:Q937 wdt:P20/wdt:P17/wdt:P85/wdt:P86 ?composer . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "John Stafford Smith"
    },
    {
        "Question": "In which country is the employer of the doctoral advisor of the first woman to win the Nobel Prize in Physics located?",
        "SPARQL": "SELECT DISTINCT ?country ?countryLabel WHERE {\n  {\n    SELECT ?person WHERE {\n      ?person wdt:P166 wd:Q38104; wdt:P21 wd:Q6581072.\n      ?person p:P166 ?st.\n      ?st ps:P166 wd:Q38104; pq:P585 ?awardTime.\n    }\n    ORDER BY ?awardTime\n    LIMIT 1\n  }\n  ?person wdt:P184 ?advisor.\n  ?advisor wdt:P108 ?employer.\n  ?employer wdt:P17 ?country.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "France"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-2 code of the country where the author of 'The Trial' died?",
        "SPARQL": "SELECT DISTINCT ?code WHERE {\n  wd:Q128781 wdt:P50 ?author .\n  ?author wdt:P20 ?deathPlace .\n  ?deathPlace (wdt:P17|wdt:P131*/wdt:P17) ?country .\n  ?country wdt:P297 ?code .\n}",
        "Answer": "AT"
    },
    {
        "Question": "What is the ISO 4217 currency code of the currency used by the country for which Margaret Thatcher's successor served as prime minister?",
        "SPARQL": "SELECT ?code WHERE {\n  wd:Q33027 p:P39 ?thatcherStmt .\n  ?thatcherStmt ps:P39 wd:Q14211 ;\n                 pq:P1366 ?successor .\n  ?successor p:P39 ?succStmt .\n  ?succStmt ps:P39 wd:Q14211 .\n  wd:Q14211 wdt:P1001 ?country .\n  ?country wdt:P38 ?currency .\n  ?currency wdt:P498 ?code .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "GBP"
    },
    {
        "Question": "What is the highest mountain of the country where J. R. R. Tolkien died?",
        "SPARQL": "SELECT ?highestPoint ?highestPointLabel WHERE {\n  wd:Q892 wdt:P20 ?deathPlace .\n  ?deathPlace wdt:P17 ?country .\n  ?country wdt:P610 ?highestPoint .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Ben Nevis"
    },
    {
        "Question": "Which college at the University of Oxford did the first female Prime Minister of the United Kingdom attend?",
        "SPARQL": "SELECT ?college ?collegeLabel WHERE {\n  {\n    SELECT ?pm WHERE {\n      ?pm wdt:P21 wd:Q6581072 .\n      ?pm p:P39 ?stmt .\n      ?stmt ps:P39 wd:Q14211 ; pq:P580 ?start .\n    }\n    ORDER BY ?start\n    LIMIT 1\n  }\n  ?pm wdt:P69 ?college .\n  ?college wdt:P361 wd:Q34433 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Somerville College, Oxford"
    },
    {
        "Question": "Which city is the capital of the country of citizenship of the author of 'Crime and Punishment'?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE {\n  ?work rdfs:label \"Crime and Punishment\"@en ;\n        wdt:P31/wdt:P279* wd:Q8261 ;     # novel\n        wdt:P50 ?author .                 # author of the work\n  ?author wdt:P27 ?country .              # country of citizenship of the author\n  ?country wdt:P36 ?capital .             # capital of that country\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Saint Petersburg"
    },
    {
        "Question": "Who succeeded the Nobel Peace Prize laureate who served as Secretary-General of the United Nations during 2006?",
        "SPARQL": "SELECT ?successor ?successorLabel WHERE {\n  # Find a Nobel Peace Prize laureate\n  ?sg p:P166 ?prizeStmt .\n  ?prizeStmt ps:P166 ?prize .\n  # Match either the generic prize or a specific edition (part of the Nobel Peace Prize)\n  ?prize (wdt:P361*) wd:Q35637 .\n  \n  # Served as UN Secretary-General and held office at some time in 2006\n  ?sg p:P39 ?sgStmt .\n  ?sgStmt ps:P39 wd:Q4830453 .  # Secretary-General of the United Nations\n  OPTIONAL { ?sgStmt pq:P580 ?start . }\n  OPTIONAL { ?sgStmt pq:P582 ?end . }\n  FILTER((!BOUND(?start) || ?start <= \"2006-12-31T23:59:59Z\"^^xsd:dateTime) &&\n         (!BOUND(?end)   || ?end   >= \"2006-01-01T00:00:00Z\"^^xsd:dateTime))\n  \n  # Get the successor in that office\n  ?sgStmt pq:P1366 ?successor .\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Ban Ki-moon"
    },
    {
        "Question": "Who succeeded the successor of Margaret Thatcher as Prime Minister of the United Kingdom?",
        "SPARQL": "SELECT ?successor2 ?successor2Label WHERE { wd:Q43499 p:P39 ?st1 . ?st1 ps:P39 wd:Q14211 ; pq:P1366 ?successor1 . ?successor1 p:P39 ?st2 . ?st2 ps:P39 wd:Q14211 ; pq:P1366 ?successor2 . SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }}",
        "Answer": "Tony Blair"
    },
    {
        "Question": "What is the capital of the country of the university that Malala Yousafzai attended?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE {\n  ?person rdfs:label \"Malala Yousafzai\"@en ;\n          wdt:P31 wd:Q5 ;\n          wdt:P69 ?inst .\n  OPTIONAL { ?inst wdt:P361 ?partOf . }\n  BIND(COALESCE(?partOf, ?inst) AS ?univ)\n  ?univ wdt:P31/wdt:P279* wd:Q3918 .\n  ?univ wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "London"
    },
    {
        "Question": "What is the birthplace of the Prime Minister of the United Kingdom who succeeded Margaret Thatcher?",
        "SPARQL": "SELECT ?birthPlace ?birthPlaceLabel WHERE {\n  wd:Q18076 p:P39 ?statement .\n  ?statement ps:P39 wd:Q14211 ;\n             pq:P1366 ?successor .\n  ?successor wdt:P19 ?birthPlace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Carshalton"
    },
    {
        "Question": "Which U.S. President succeeded the first U.S. President who received the Nobel Peace Prize?",
        "SPARQL": "SELECT ?successor ?successorLabel WHERE {\n  {\n    SELECT ?earliestPres WHERE {\n      ?earliestPres p:P166 ?aStmt .\n      ?aStmt ps:P166 wd:Q35637 .        # Nobel Peace Prize\n      ?aStmt pq:P585 ?awardDate .        # award date\n      ?earliestPres wdt:P39 wd:Q11696 .  # President of the United States\n    }\n    ORDER BY ASC(?awardDate)\n    LIMIT 1\n  }\n  {\n    SELECT ?successor WHERE {\n      ?earliestPres p:P39 ?posStmt .\n      ?posStmt ps:P39 wd:Q11696 .\n      OPTIONAL { ?posStmt pq:P582 ?end . }\n      ?posStmt pq:P1366 ?successor .     # replaced by (successor)\n    }\n    ORDER BY DESC(?end)\n    LIMIT 1\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "William Howard Taft"
    },
    {
        "Question": "What is the capital of the country where Barack Obama’s maternal grandfather was born?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE {\n  wd:Q76 wdt:P25 ?mother .          # Barack Obama -> mother (Ann Dunham)\n  ?mother wdt:P22 ?grandfather .    # Ann Dunham -> father (maternal grandfather)\n  ?grandfather wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Washington, D.C."
    },
    {
        "Question": "Which Fields Medalists had a doctoral advisor who is an Abel Prize laureate? List the medalists with their advisor(s).",
        "SPARQL": "SELECT DISTINCT ?fieldsMedalist ?fieldsMedalistLabel (GROUP_CONCAT(DISTINCT ?advisorLabel; separator=\", \") AS ?abelAdvisors) WHERE {\n  ?fieldsMedalist wdt:P166 wd:Q7186 ;\n                   wdt:P184 ?advisor .\n  ?advisor wdt:P166 wd:Q38104 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?fieldsMedalist ?fieldsMedalistLabel\nORDER BY ?fieldsMedalistLabel",
        "Answer": "Curtis T. McMullen — Dennis Sullivan; Manjul Bhargava — Andrew Wiles; Pierre Deligne — Jean-Pierre Serre; Simon Donaldson — Michael Atiyah"
    },
    {
        "Question": "In which city is the cemetery located where the composer whose wife was Clara Schumann is buried?",
        "SPARQL": "SELECT DISTINCT ?city ?cityLabel WHERE {\n  ?composer wdt:P26 wd:Q15682 ;\n            wdt:P106/wdt:P279* wd:Q36834 ;\n            wdt:P119 ?cemetery .\n  ?cemetery wdt:P131 ?city .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Bonn"
    },
    {
        "Question": "Which U.S. state is the birthplace of the spouse of the 46th President of the United States who has held the position of First Lady of the United States?",
        "SPARQL": "SELECT ?stateLabel WHERE {\n  wd:Q6279 wdt:P26 ?spouse .\n  ?spouse wdt:P39 wd:Q131110 .\n  ?spouse wdt:P19 ?birthplace .\n  ?birthplace wdt:P131* ?state .\n  ?state wdt:P31 wd:Q35657 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "New Jersey"
    },
    {
        "Question": "What is the political party of the person who succeeded Bill Clinton's spouse as United States Secretary of State?",
        "SPARQL": "SELECT DISTINCT ?partyLabel WHERE {\n  wd:Q9682 wdt:P26 ?spouse .\n  ?spouse p:P39 ?positionStatement .\n  ?positionStatement ps:P39 wd:Q11268 .\n  ?positionStatement pq:P1366 ?successor .\n  ?successor wdt:P102 ?party .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Democratic Party (United States)"
    },
    {
        "Question": "Which city is the capital of the country that contains the birthplace of the successor to Indira Gandhi as Prime Minister following her 1984 assassination?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q801 p:P39 ?posStmt .\n  ?posStmt pq:P582 ?end ;\n           pq:P1366 ?succ .\n  FILTER(YEAR(?end) = 1984)\n  ?succ wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}\nLIMIT 1",
        "Answer": "New Delhi"
    },
    {
        "Question": "What is the headquarters city of the political party of the predecessor of the first African-American U.S. president?",
        "SPARQL": "SELECT ?hq ?hqLabel WHERE {\n  wd:Q76 p:P39 ?stmt .\n  ?stmt ps:P39 wd:Q11696 ;\n        pq:P1365 ?predecessor .\n  ?predecessor wdt:P102 ?party .\n  ?party wdt:P159 ?hq .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Washington, D.C."
    },
    {
        "Question": "Who was the head of state of the country where Albert Einstein died at the time of his death?",
        "SPARQL": "SELECT ?headLabel WHERE {\n  wd:Q937 wdt:P20 ?place ;\n          wdt:P570 ?death .\n  ?place wdt:P17 ?country .\n  ?country p:P35 ?statement .\n  ?statement ps:P35 ?head ;\n             pq:P580 ?start .\n  OPTIONAL { ?statement pq:P582 ?end . }\n  FILTER(?death >= ?start && (!BOUND(?end) || ?death < ?end))\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Dwight D. Eisenhower"
    },
    {
        "Question": "What is the capital of the country where the successor of Pope John Paul II was born?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  wd:Q17133 p:P39 ?statement .\n  ?statement ps:P39 wd:Q19546 .\n  ?statement pq:P1366 ?successor .\n  ?successor wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Berlin"
    },
    {
        "Question": "What continent is the country located in whose capital is the birthplace of the author of the novel \"The Trial\"?",
        "SPARQL": "SELECT DISTINCT ?continentLabel WHERE {\n  wd:Q131647 wdt:P50 ?author .\n  ?author wdt:P19 ?birthPlace .\n  ?country wdt:P36 ?birthPlace .\n  ?country wdt:P30 ?continent .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Europe"
    },
    {
        "Question": "Which philosopher who was a student of a student of Socrates tutored Alexander the Great?",
        "SPARQL": "SELECT ?person ?personLabel WHERE { ?person wdt:P106 wd:Q4964182 . ?person wdt:P802 wd:Q35610 . ?person wdt:P1066/wdt:P1066 wd:Q913 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Aristotle"
    },
    {
        "Question": "What is the birthplace of the current spouse of the person who succeeded Barack Obama as President of the United States?",
        "SPARQL": "SELECT ?birthPlace ?birthPlaceLabel WHERE {\n  wd:Q76 p:P39 ?pos .\n  ?pos ps:P39 wd:Q11696 ;\n       pq:P1366 ?successor .\n  FILTER(?successor != wd:Q76)\n  ?successor p:P26 ?spouseStmt .\n  ?spouseStmt ps:P26 ?spouse .\n  FILTER NOT EXISTS { ?spouseStmt pq:P582 ?end . }\n  ?spouse wdt:P19 ?birthPlace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Novo Mesto"
    },
    {
        "Question": "Which U.S. president married the niece of another U.S. president?",
        "SPARQL": "SELECT DISTINCT ?president ?presidentLabel WHERE {\n  ?president wdt:P39 wd:Q11696 ;\n             wdt:P26 ?spouse .\n  ?spouse wdt:P21 wd:Q6581072 .\n  ?spouse (wdt:P22|wdt:P25) ?parent .\n  ?parent (wdt:P22|wdt:P25) ?grandparent .\n  ?grandparent wdt:P40 ?uncle .\n  FILTER (?uncle != ?parent)\n  ?uncle wdt:P39 wd:Q11696 .\n  FILTER (?uncle != ?president)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Franklin D. Roosevelt"
    },
    {
        "Question": "What was the family name of the mother of the author of Pride and Prejudice?",
        "SPARQL": "SELECT ?familyNameLabel WHERE { wd:Q181792 wdt:P50 ?author . ?author wdt:P25 ?mother . ?mother wdt:P734 ?familyName . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Leigh"
    },
    {
        "Question": "What is the native language of the composer of the national anthem of the country whose capital is New Delhi?",
        "SPARQL": "SELECT DISTINCT ?lang ?langLabel WHERE { ?country wdt:P36 wd:Q987; wdt:P85 ?anthem. ?anthem wdt:P86 ?composer. ?composer wdt:P103 ?lang. SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Bengali"
    },
    {
        "Question": "What is the capital city of the country of citizenship of the spouse of Marie Curie's elder daughter?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  {\n    SELECT ?elderDaughter WHERE {\n      wd:Q7186 wdt:P40 ?elderDaughter .\n      ?elderDaughter wdt:P21 wd:Q6581072 ;\n                     wdt:P569 ?birth .\n    }\n    ORDER BY ?birth\n    LIMIT 1\n  }\n  ?elderDaughter wdt:P26 ?spouse .\n  ?spouse wdt:P27 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Paris"
    },
    {
        "Question": "What is the capital city of the country whose president succeeded Jair Bolsonaro?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q103551 p:P39 ?statement .\n  ?statement ps:P39 wd:Q148636 ;\n             pq:P1366 ?successor .\n  wd:Q148636 wdt:P1001|wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Brasília"
    },
    {
        "Question": "Which Nobel Prize in Physics laureate had a spouse who also won the Nobel Prize in Chemistry?",
        "SPARQL": "SELECT ?physicist ?physicistLabel WHERE {\n  ?physicist wdt:P166 wd:Q38104 .\n  ?physicist wdt:P26 ?spouse .\n  ?spouse wdt:P166 wd:Q44585 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Pierre Curie"
    },
    {
        "Question": "What was the birth name of the Nobel Prize in Physics laureate whose doctoral advisor was Max Born?",
        "SPARQL": "SELECT ?birthName WHERE { ?person wdt:P166 wd:Q38104; wdt:P184 wd:Q902; wdt:P1477 ?birthName. }",
        "Answer": "Maria Göppert"
    },
    {
        "Question": "Which mountain range contains the highest point of the country that contains Nikola Tesla's birthplace?",
        "SPARQL": "SELECT DISTINCT ?range ?rangeLabel WHERE {\n  wd:Q9036 wdt:P19/wdt:P17 ?country .\n  ?country wdt:P610 ?highest .\n  ?highest (wdt:P4552 | (wdt:P706/(wdt:P4552|wdt:P706))) ?range .\n  ?range wdt:P31 wd:Q46831 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Dinaric Alps"
    },
    {
        "Question": "Which country is the birthplace of the doctoral advisor of Andrew Wiles, the mathematician who proved Fermat's Last Theorem?",
        "SPARQL": "SELECT DISTINCT ?country ?countryLabel WHERE {\n  wd:Q44714 wdt:P184 ?advisor .\n  ?advisor wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Australia"
    },
    {
        "Question": "What is the capital of the country whose prime minister succeeded Margaret Thatcher?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE { wd:Q43361 p:P39 ?st . ?st ps:P39 wd:Q14211 ; pq:P1366 ?succ . wd:Q14211 wdt:P17 ?country . ?country wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "London"
    },
    {
        "Question": "What is the capital of the country where the site of Pluto's discovery is located?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE {\n  wd:Q339 wdt:P65 ?site .\n  ?site (wdt:P17|wdt:P131*/wdt:P17) ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Washington, D.C."
    },
    {
        "Question": "What is the capital city of the country where the university attended by the spouse of the Microsoft co-founder who served as CEO is located?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE {\n  wd:Q5284 wdt:P26 ?spouse .\n  ?spouse wdt:P69 ?university .\n  ?university wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Washington, D.C."
    },
    {
        "Question": "In which town was the successor to the United Kingdom’s first female Prime Minister born?",
        "SPARQL": "SELECT ?birthPlace ?birthPlaceLabel WHERE {\n  {\n    SELECT ?pm WHERE {\n      SELECT ?pm ?firstStart WHERE {\n        SELECT ?pm (MIN(?start_) AS ?firstStart) WHERE {\n          ?pm wdt:P21 wd:Q6581072 .\n          ?pm p:P39 ?stmt .\n          ?stmt ps:P39 wd:Q14211 ;\n                pq:P580 ?start_ .\n        } GROUP BY ?pm\n      } ORDER BY ?firstStart LIMIT 1\n    }\n  }\n  ?pm p:P39 ?stmt2 .\n  ?stmt2 ps:P39 wd:Q14211 ;\n         pq:P1366 ?succ .\n  ?succ wdt:P19 ?birthPlace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Carshalton"
    },
    {
        "Question": "What is the capital of the country where Albert Einstein died?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE { wd:Q937 wdt:P20 ?deathPlace . ?deathPlace wdt:P17 ?country . ?country wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Washington, D.C."
    },
    {
        "Question": "Which Nobel Prize category was won by both the female discoverer of polonium and her daughter?",
        "SPARQL": "SELECT DISTINCT ?category ?categoryLabel WHERE { wd:Q2034 wdt:P61 ?discoverer . ?discoverer wdt:P21 wd:Q6581072 . ?discoverer wdt:P40 ?daughter . ?daughter wdt:P21 wd:Q6581072 . ?discoverer wdt:P166 ?category . ?daughter wdt:P166 ?category . ?category wdt:P279* wd:Q7191 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. } }",
        "Answer": "Nobel Prize in Chemistry"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-3 code of the country whose head of state is a son of Norodom Sihanouk?",
        "SPARQL": "SELECT ?iso3 WHERE {\n  ?child wdt:P22 wd:Q113251 ;\n         wdt:P21 wd:Q6581097 .\n  ?country wdt:P35 ?child .\n  ?country wdt:P298 ?iso3 .\n}",
        "Answer": "KHM"
    },
    {
        "Question": "What is the capital of the country where Alan Turing earned his Doctor of Philosophy degree?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q7251 p:P69 ?stmt .\n  ?stmt ps:P69 ?institution .\n  ?stmt pq:P512 wd:Q849697 .\n  ?institution wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Washington, D.C."
    },
    {
        "Question": "What is the capital of the Croatian county in which Nikola Tesla's birth village is located?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q9036 wdt:P19 ?birthplace .\n  ?birthplace wdt:P131+ ?county .\n  ?county wdt:P31/wdt:P279* wd:Q133442 ;  # county (or subclass)\n          wdt:P17 wd:Q224 ;               # in Croatia\n          wdt:P36 ?capital .              # capital of that county\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Gospić"
    },
    {
        "Question": "Which U.S. state is the birthplace of the spouse of the author of 'The Audacity of Hope'?",
        "SPARQL": "SELECT ?state ?stateLabel WHERE { wd:Q76 wdt:P26 ?spouse . ?spouse wdt:P19 ?birthplace . ?birthplace (wdt:P131*) ?state . ?state wdt:P31 wd:Q35657 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Illinois"
    },
    {
        "Question": "What is the official currency of the country where the headquarters of the 2020 Nobel Peace Prize laureate are located?",
        "SPARQL": "SELECT DISTINCT ?currency ?currencyLabel WHERE {  ?laureate p:P166 ?stmt.  ?stmt ps:P166 wd:Q35637;        pq:P585 ?awardDate.  FILTER(YEAR(?awardDate) = 2020)  ?laureate wdt:P159 ?hq.  ?hq wdt:P17 ?country.  ?country wdt:P38 ?currency.  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } }",
        "Answer": "euro"
    },
    {
        "Question": "What city was the Turing Award laureate who co-authored the textbook 'Introduction to Algorithms' born in?",
        "SPARQL": "SELECT DISTINCT ?birthPlace ?birthPlaceLabel WHERE { wd:Q866035 wdt:P50 ?author . ?author wdt:P166 wd:Q10737 ; wdt:P19 ?birthPlace . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. } }",
        "Answer": "Schenectady"
    },
    {
        "Question": "Who succeeded the Nobel Peace Prize–winning Prime Minister of Israel who was assassinated in Tel Aviv?",
        "SPARQL": "SELECT ?successor ?successorLabel WHERE {\n  ?pm wdt:P166 wd:Q35637 ;       # Nobel Peace Prize laureate\n      wdt:P1196 wd:Q432 ;        # manner of death: assassination\n      wdt:P20 wd:Q33935 ;        # place of death: Tel Aviv\n      wdt:P570 ?deathDate .      # date of death\n  ?pm p:P39 ?pmPos .\n  ?pmPos ps:P39 wd:Q208273 .     # position held: Prime Minister of Israel\n  ?pmPos pq:P582 ?end .          # end time of that PM term\n  FILTER(?end = ?deathDate)      # ensure it’s the term that ended at death\n  ?pmPos pq:P1366 ?successor .   # successor for that specific term\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Shimon Peres"
    },
    {
        "Question": "What is the headquarters building of the political party of the successor of the first female Chancellor of Germany?",
        "SPARQL": "SELECT DISTINCT ?hq ?hqLabel WHERE {\n  ?femaleChancellor wdt:P39 wd:Q11696 ;        # Chancellor of Germany\n                     wdt:P21 wd:Q6581072 ;      # female\n                     wdt:P1366 ?successor .     # successor\n  ?successor wdt:P102 ?party .                  # political party of successor\n  ?party wdt:P159 ?hq .                         # headquarters location\n  ?hq wdt:P31/wdt:P279* wd:Q41176 .             # ensure it is a building\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Willy-Brandt-Haus"
    },
    {
        "Question": "Who was the doctoral advisor of the first woman to win the Fields Medal?",
        "SPARQL": "SELECT ?advisor ?advisorLabel WHERE {\n  {\n    SELECT ?laureate WHERE {\n      ?laureate wdt:P21 wd:Q6581072 .\n      ?laureate p:P166 ?awardStmt .\n      ?awardStmt ps:P166 wd:Q7186 .\n      ?awardStmt pq:P585 ?date .\n    }\n    ORDER BY ?date\n    LIMIT 1\n  }\n  ?laureate wdt:P184 ?advisor .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Curtis T. McMullen"
    },
    {
        "Question": "In which city was the spouse of the Prime Minister of the United Kingdom who succeeded Winston Churchill in 1955 born?",
        "SPARQL": "SELECT ?birthplace ?birthplaceLabel WHERE {\n  # Prime Minister who replaced Winston Churchill, with term starting in 1955\n  ?pm p:P39 ?pmTerm .\n  ?pmTerm ps:P39 wd:Q14211 ;\n          pq:P1365 wd:Q8016 ;\n          pq:P580 ?termStart .\n  FILTER(?termStart >= \"1955-01-01T00:00:00Z\"^^xsd:dateTime)\n  OPTIONAL { ?pmTerm pq:P582 ?termEnd . }\n\n  # Spouse during that term (overlap of marriage and term)\n  ?pm p:P26 ?marriage .\n  ?marriage ps:P26 ?spouse .\n  OPTIONAL { ?marriage pq:P580 ?marriageStart . }\n  OPTIONAL { ?marriage pq:P582 ?marriageEnd . }\n  FILTER (\n    (!BOUND(?termStart) || !BOUND(?marriageEnd) || ?marriageEnd >= ?termStart) &&\n    (!BOUND(?termEnd)   || !BOUND(?marriageStart) || ?marriageStart <= ?termEnd)\n  )\n\n  ?spouse wdt:P19 ?birthplace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "London"
    },
    {
        "Question": "Who composed the national anthem of the country where Ernest Hemingway died?",
        "SPARQL": "SELECT ?composer ?composerLabel WHERE {\n  wd:Q8259 wdt:P20 ?place .\n  ?place wdt:P17 ?country .\n  ?country wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "John Stafford Smith"
    },
    {
        "Question": "Which U.S. state is the birthplace of the spouse of the only U.S. president to resign?",
        "SPARQL": "SELECT DISTINCT ?stateLabel WHERE {\n  ?pres p:P39 ?pos.\n  ?pos ps:P39 wd:Q11696;\n       pq:P1534 wd:Q76936.\n  ?pres wdt:P26 ?spouse.\n  ?spouse wdt:P19 ?birthPlace.\n  ?birthPlace wdt:P131* ?state.\n  ?state wdt:P31 wd:Q35657.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Nevada"
    },
    {
        "Question": "What is the family name of the mother of the husband of Catherine, Princess of Wales?",
        "SPARQL": "SELECT ?familyNameLabel WHERE {\n  wd:Q104914 wdt:P26 ?husband .\n  ?husband wdt:P25 ?mother .\n  ?mother wdt:P734 ?familyName .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Spencer"
    },
    {
        "Question": "On which continent is the country located where the discoverer of penicillin died?",
        "SPARQL": "SELECT DISTINCT ?continent ?continentLabel WHERE {\n  wd:Q41269 wdt:P61 ?discoverer .\n  ?discoverer wdt:P20 ?deathPlace .\n  ?deathPlace wdt:P17 ?country .\n  ?country wdt:P30 ?continent .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Europe"
    },
    {
        "Question": "Which capital city outside the United States is named after a person who served as President of the United States?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE {\n  ?country wdt:P36 ?capital .\n  ?capital wdt:P138 ?person .\n  ?person wdt:P39 wd:Q11696 .\n  FILTER(?country != wd:Q30)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Monrovia"
    },
    {
        "Question": "Which U.S. state has a capital named after the third President of the United States?",
        "SPARQL": "SELECT ?state ?stateLabel WHERE {\n  # Find the person who is the 3rd President of the United States\n  ?person p:P39 ?ps .\n  ?ps ps:P39 wd:Q11696 ;\n      pq:P1545 \"3\" .\n  # Find the U.S. state whose capital is named after that person\n  ?state wdt:P31 wd:Q35657 ;\n         wdt:P36 ?capital .\n  ?capital wdt:P138 ?person .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Missouri"
    },
    {
        "Question": "Which Nobel Prize in Chemistry laureate has both parents who were Nobel laureates and whose spouse also won a Nobel Prize?",
        "SPARQL": "SELECT DISTINCT ?personLabel WHERE {\n  ?person wdt:P166 wd:Q44585 ;   # Nobel Prize in Chemistry\n          wdt:P22 ?father ;      # father\n          wdt:P25 ?mother ;      # mother\n          wdt:P26 ?spouse .      # spouse\n  # Father's Nobel Prize (any category)\n  ?father wdt:P166 ?fAward .\n  ?fAward wdt:P31/wdt:P279* wd:Q7191 .  # instance of (subclass of*) Nobel Prize\n  # Mother's Nobel Prize (any category)\n  ?mother wdt:P166 ?mAward .\n  ?mAward wdt:P31/wdt:P279* wd:Q7191 .\n  # Spouse's Nobel Prize (any category)\n  ?spouse wdt:P166 ?sAward .\n  ?sAward wdt:P31/wdt:P279* wd:Q7191 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Irène Joliot-Curie"
    },
    {
        "Question": "Which city has the larger population: Barack Obama's birthplace or the capital of the United States?",
        "SPARQL": "SELECT ?city ?cityLabel WHERE {\n  { wd:Q76 wdt:P19 ?city . }  # Barack Obama's birthplace\n  UNION\n  { wd:Q30 wdt:P36 ?city . }  # Capital of the United States\n  ?city wdt:P1082 ?pop .       # Population\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}\nORDER BY DESC(?pop)\nLIMIT 1",
        "Answer": "Washington, D.C."
    },
    {
        "Question": "What is the capital city of the country where the composer of The Magic Flute was born?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE {\n  wd:Q189420 wdt:P86 ?composer .\n  ?composer wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Vienna"
    },
    {
        "Question": "What is the currency of the country whose capital is the city where one of Tesla, Inc.'s founders was born?",
        "SPARQL": "SELECT DISTINCT ?currency ?currencyLabel WHERE {\n  wd:Q478214 wdt:P112 ?founder .\n  ?founder wdt:P19 ?birthPlace .\n  ?country wdt:P36 ?birthPlace .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "South African rand"
    },
    {
        "Question": "Which U.S. president who served during the 19th century had a father who was also a U.S. president?",
        "SPARQL": "SELECT ?person ?personLabel WHERE { ?person p:P39 ?statement . ?statement ps:P39 wd:Q11696 . ?statement pq:P580 ?start . FILTER (YEAR(?start) >= 1801 && YEAR(?start) < 1901) ?person wdt:P22 ?father . ?father wdt:P39 wd:Q11696 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. } }",
        "Answer": "John Quincy Adams"
    },
    {
        "Question": "Which parent of the Nobel Prize in Chemistry laureate who is a child of Pierre Curie also won two Nobel Prizes?",
        "SPARQL": "SELECT DISTINCT ?parent ?parentLabel WHERE {\n  ?child wdt:P22 wd:Q7474 ;            # child whose father is Pierre Curie\n         wdt:P166 wd:Q44585 .          # and who received the Nobel Prize in Chemistry\n  ?child (wdt:P22|wdt:P25) ?parent .   # get the child's parent (father or mother)\n  ?parent wdt:P166 wd:Q38104 ;         # parent received Nobel Prize in Physics\n          wdt:P166 wd:Q44585 .         # and Nobel Prize in Chemistry (i.e., two Nobel Prizes)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Marie Curie"
    },
    {
        "Question": "What is the capital of the country of the office held by the person who replaced Angela Merkel as Chancellor of Germany?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE { wd:Q567 p:P39 ?stmt . ?stmt ps:P39 wd:Q1524 ; pq:P1366 ?successor . wd:Q1524 wdt:P17 ?country . ?country wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Berlin"
    },
    {
        "Question": "What is the capital of the country whose head of government is the person who replaced Angela Merkel as Chancellor of Germany?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  ?person p:P39 ?posStmt .\n  ?posStmt ps:P39 wd:Q49768 ;\n           pq:P1365 wd:Q567 .\n  ?country wdt:P6 ?person ;\n           wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Berlin"
    },
    {
        "Question": "Which student of Plato taught Alexander the Great?",
        "SPARQL": "SELECT DISTINCT ?person ?personLabel WHERE { ?person wdt:P1066 wd:Q859 . wd:Q35610 wdt:P1066 ?person . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Aristotle"
    },
    {
        "Question": "Which U.S. state has a capital city named after the person who succeeded Thomas Jefferson as President of the United States?",
        "SPARQL": "SELECT ?stateLabel WHERE {\n  wd:Q11884 p:P39 ?st .\n  ?st ps:P39 wd:Q11696 ;\n      pq:P1366 ?succ .\n  ?cap wdt:P138 ?succ .\n  ?state wdt:P36 ?cap ;\n         wdt:P31 wd:Q35657 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Wisconsin"
    },
    {
        "Question": "What is the undergraduate alma mater of the person who replaced Mike Pence as Vice President of the United States?",
        "SPARQL": "SELECT DISTINCT ?almaMater ?almaMaterLabel WHERE {\n  ?vp p:P39 ?posStmt.\n  ?posStmt ps:P39 wd:Q11696;           # position held: Vice President of the United States\n           pq:P1365 ?prevVP.           # replaces (predecessor in this office)\n  ?prevVP rdfs:label \"Mike Pence\"@en.\n  ?vp p:P69 ?eduStmt.\n  ?eduStmt ps:P69 ?almaMater;          # educated at\n           pq:P512 ?degree.            # academic degree qualifier\n  ?degree wdt:P279* wd:Q163727.        # degree is a (subclass of) bachelor's degree\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Howard University"
    },
    {
        "Question": "What is the capital of the country, other than India, whose national anthem was composed by the same person who composed India's national anthem, \"Jana Gana Mana\"?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q668 wdt:P85 ?indiaAnthem .\n  ?indiaAnthem wdt:P86 ?composer .\n  ?country wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  FILTER(?country != wd:Q668)\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Dhaka"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-2 code of the country where the university attended by J. R. R. Tolkien is located?",
        "SPARQL": "SELECT DISTINCT ?code WHERE { wd:Q892 wdt:P69 ?university . ?university wdt:P17 ?country . ?country wdt:P297 ?code . }",
        "Answer": "GB"
    },
    {
        "Question": "What is the capital city of the country where the mother of the inventor of the World Wide Web was born?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q80 wdt:P25 ?mother .\n  ?mother wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "London"
    },
    {
        "Question": "What is the capital city of the country where a son of former Canadian prime minister Pierre Trudeau has held the office of Prime Minister?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  ?father wdt:P31 wd:Q5;\n          rdfs:label \"Pierre Trudeau\"@en;\n          wdt:P39 ?fOffice.\n  ?fOffice rdfs:label \"Prime Minister of Canada\"@en.\n  ?pm wdt:P22 ?father;\n      wdt:P39 ?office.\n  ?office rdfs:label \"Prime Minister of Canada\"@en;\n          wdt:P1001 ?country.\n  ?country wdt:P36 ?capital.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Ottawa"
    },
    {
        "Question": "What is the capital of the U.S. state where the U.S. President who appointed the first female Supreme Court Justice was born?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  {\n    SELECT ?appointer WHERE {\n      ?justice wdt:P21 wd:Q6581072 .\n      ?justice p:P39 ?scotusStmt .\n      ?scotusStmt ps:P39 wd:Q484876 .\n      ?scotusStmt pq:P580 ?start .\n      ?scotusStmt pq:P1037 ?appointer .\n      ?appointer wdt:P39 wd:Q11696 .\n    }\n    ORDER BY ?start\n    LIMIT 1\n  }\n  ?appointer wdt:P19 ?birthPlace .\n  ?birthPlace wdt:P131* ?state .\n  ?state wdt:P31 wd:Q35657 .\n  ?state wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Springfield"
    },
    {
        "Question": "Which institutions are the alma maters of the person who replaced Steve Jobs as CEO of Apple Inc.?",
        "SPARQL": "SELECT ?almaMater ?almaMaterLabel WHERE {\n  wd:Q312 p:P169 ?ceoStmt .\n  ?ceoStmt ps:P169 ?ceo .\n  ?ceoStmt pq:P1365 wd:Q19837 .\n  ?ceo wdt:P69 ?almaMater .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Auburn University; Fuqua School of Business"
    },
    {
        "Question": "Who succeeded the successor of Queen Victoria as monarch of the United Kingdom?",
        "SPARQL": "SELECT ?person ?personLabel WHERE {\n  wd:Q9439 wdt:P1366/wdt:P1366 ?person .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "George V"
    },
    {
        "Question": "Which city contains the place of death of the spouse of the head of state of the United Kingdom on 1 January 2000?",
        "SPARQL": "SELECT DISTINCT ?city ?cityLabel WHERE {\n  wd:Q145 p:P35 ?hsStmt.\n  ?hsStmt ps:P35 ?monarch.\n  OPTIONAL { ?hsStmt pq:P580 ?hsStart. }\n  OPTIONAL { ?hsStmt pq:P582 ?hsEnd. }\n  FILTER((!BOUND(?hsStart) || ?hsStart <= \"2000-01-01T00:00:00Z\"^^xsd:dateTime) && (!BOUND(?hsEnd) || ?hsEnd >= \"2000-01-01T00:00:00Z\"^^xsd:dateTime))\n  ?monarch wdt:P26 ?spouse.\n  ?spouse wdt:P20 ?deathPlace.\n  ?deathPlace wdt:P131 ?city.\n  ?city wdt:P31/wdt:P279* ?cityType.\n  VALUES ?cityType { wd:Q515 wd:Q3957 }  # city or town\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Windsor"
    },
    {
        "Question": "Which Nobel laureate in Physics was a doctoral advisor of the discoverer of the electron?",
        "SPARQL": "SELECT DISTINCT ?advisorLabel WHERE { wd:Q350 wdt:P61 ?discoverer . ?discoverer wdt:P184 ?advisor . ?advisor wdt:P166 wd:Q38104 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. } }",
        "Answer": "John William Strutt, 3rd Baron Rayleigh"
    },
    {
        "Question": "What is the official language of the country where Niels Bohr was born?",
        "SPARQL": "SELECT ?language ?languageLabel WHERE { wd:Q6779 wdt:P19 ?birthplace . ?birthplace wdt:P17 ?country . ?country wdt:P37 ?language . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Danish"
    },
    {
        "Question": "Which U.S. presidents are the sons of another U.S. president?",
        "SPARQL": "SELECT DISTINCT ?child ?childLabel WHERE {\n  ?child wdt:P39 wd:Q11696 .            # child is President of the United States\n  ?parent wdt:P39 wd:Q11696 .           # parent is also President of the United States\n  ?parent wdt:P40 ?child .              # parent has this child\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}\nORDER BY ?childLabel",
        "Answer": "George W. Bush; John Quincy Adams"
    },
    {
        "Question": "Which city is the capital of the country where Albert Einstein was born?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE { wd:Q937 wdt:P19/wdt:P17/wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Berlin"
    },
    {
        "Question": "What city was the spouse of the 44th President of the United States born in?",
        "SPARQL": "SELECT ?birthplace ?birthplaceLabel WHERE {\n  ?person p:P39 ?statement .\n  ?statement ps:P39 wd:Q11696 ; pq:P1545 \"44\" .\n  ?person wdt:P26 ?spouse .\n  ?spouse wdt:P19 ?birthplace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Chicago"
    },
    {
        "Question": "What is the currency of the country where Douglas Adams died?",
        "SPARQL": "SELECT ?currency ?currencyLabel WHERE { wd:Q42 wdt:P20 ?deathPlace . ?deathPlace wdt:P17 ?country . ?country wdt:P38 ?currency . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "United States dollar"
    },
    {
        "Question": "What is the birth year of the predecessor of the predecessor of Satya Nadella as CEO of Microsoft?",
        "SPARQL": "SELECT DISTINCT ?birthYear WHERE { wd:Q151803 p:P39 ?s1. ?s1 ps:P39 wd:Q484876; pq:P642 wd:Q2283; pq:P1365 ?prev1. ?prev1 p:P39 ?s2. ?s2 ps:P39 wd:Q484876; pq:P642 wd:Q2283; pq:P1365 ?prev2. ?prev2 wdt:P569 ?birthDate. BIND(YEAR(?birthDate) AS ?birthYear) }",
        "Answer": "1955"
    },
    {
        "Question": "What is the official language of the sovereign state that most recently adopted the euro as its currency?",
        "SPARQL": "SELECT ?langLabel WHERE {\n  {\n    SELECT ?country ?start WHERE {\n      ?country wdt:P31/wdt:P279* wd:Q3624078 ;\n               p:P38 ?stmt .\n      ?stmt ps:P38 wd:Q4917 ;\n            pq:P580 ?start .\n    }\n    ORDER BY DESC(?start)\n    LIMIT 1\n  }\n  ?country wdt:P37 ?lang .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Croatian"
    },
    {
        "Question": "What is the currency of the country that contains the birthplace of Albert Einstein's son Eduard Einstein?",
        "SPARQL": "SELECT ?currency ?currencyLabel WHERE {\n  wd:Q937 wdt:P40 wd:Q151973 .\n  wd:Q151973 wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Swiss franc"
    },
    {
        "Question": "What is the capital city of the country where the university attended by the author of 'One Hundred Years of Solitude' is located?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE { wd:Q205332 wdt:P50 ?author . ?author wdt:P69 ?univ . ?univ wdt:P17 ?country . ?country wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Bogotá"
    },
    {
        "Question": "In which city is the headquarters of the organization that awards the Fields Medal located?",
        "SPARQL": "SELECT ?city ?cityLabel WHERE { wd:Q7186 wdt:P1027 ?org . ?org wdt:P159 ?city . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Berlin"
    },
    {
        "Question": "What is the capital of the U.S. state that contains the University of Virginia founded by Thomas Jefferson?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q11811 wdt:P112 ?univ .\n  ?univ wdt:P31/wdt:P279* wd:Q3918 .\n  ?univ wdt:P131* ?state .\n  ?state wdt:P31 wd:Q35657 .\n  ?state wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Richmond"
    },
    {
        "Question": "Which composer wrote the national anthem of the country whose capital is the birthplace of Pericles?",
        "SPARQL": "SELECT ?composer ?composerLabel WHERE {\n  wd:Q11707 wdt:P19 ?birthplace .\n  ?country wdt:P36 ?birthplace ;\n           wdt:P31/wdt:P279* wd:Q6256 ;\n           wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Nikolaos Mantzaros"
    },
    {
        "Question": "Which city is the headquarters of the organization that awards the Nobel Prize in Literature received by Bob Dylan?",
        "SPARQL": "SELECT ?hq ?hqLabel WHERE {\n  wd:Q392 wdt:P166 wd:Q37922 .\n  wd:Q37922 wdt:P1027 ?org .\n  ?org wdt:P159 ?hq .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Stockholm"
    },
    {
        "Question": "What is the capital of the country to which the 'monarch of the United Kingdom' position—held by Prince Philip's spouse—applies?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE { wd:Q151963 ^wdt:P26 ?spouse . ?spouse wdt:P39 wd:Q11696 . wd:Q11696 wdt:P1001 ?country . ?country wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "London"
    },
    {
        "Question": "What is the capital of the country whose government was led by Margaret Thatcher's successor as Prime Minister?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q192 p:P39 ?posStmt .\n  ?posStmt ps:P39 wd:Q14213 ;\n           pq:P1366 ?successor .\n  wd:Q14213 wdt:P1001 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "London"
    },
    {
        "Question": "Which of Marie Curie's daughters won a Nobel Prize?",
        "SPARQL": "SELECT DISTINCT ?daughter ?daughterLabel WHERE { wd:Q7186 wdt:P40 ?daughter . ?daughter wdt:P21 wd:Q6581072 . ?daughter wdt:P166 ?award . ?award wdt:P279* wd:Q7191 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Irène Joliot-Curie"
    },
    {
        "Question": "Which child of Niels Bohr also won the Nobel Prize in Physics?",
        "SPARQL": "SELECT ?child ?childLabel WHERE {\n  wd:Q16989 wdt:P40 ?child .\n  ?child wdt:P166 wd:Q38104 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Aage Bohr"
    },
    {
        "Question": "What writing system is used by the official language of the smallest country by area that shares a border with France?",
        "SPARQL": "SELECT ?scriptLabel WHERE {\n  {\n    SELECT ?country WHERE {\n      wd:Q142 wdt:P47 ?country .\n      ?country wdt:P31 wd:Q6256 ;\n               wdt:P2046 ?area .\n    }\n    ORDER BY ASC(?area)\n    LIMIT 1\n  }\n  ?country wdt:P37 ?language .\n  ?language wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which sovereign state borders every sovereign state that uses the Swiss franc as its official currency?",
        "SPARQL": "SELECT ?country ?countryLabel WHERE {\n  ?country wdt:P31 wd:Q3624078 .\n  FILTER NOT EXISTS {\n    ?cc wdt:P31 wd:Q3624078 ;\n        wdt:P38 wd:Q25224 .\n    FILTER NOT EXISTS { ?country wdt:P47 ?cc }\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Austria"
    },
    {
        "Question": "Which Nobel Prize did Marie Curie's son-in-law win?",
        "SPARQL": "SELECT DISTINCT ?nobel ?nobelLabel WHERE { wd:Q7186 wdt:P40 ?child . ?child wdt:P26 ?soninlaw . ?soninlaw wdt:P166 ?nobel . ?nobel wdt:P279* wd:Q7191 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Nobel Prize in Chemistry"
    },
    {
        "Question": "In which country was the predecessor of the United Kingdom's first female Prime Minister born?",
        "SPARQL": "SELECT ?country ?countryLabel WHERE { wd:Q11994 p:P39 ?st . ?st ps:P39 wd:Q14211 ; pq:P1365 ?pred . ?pred wdt:P19 ?birthplace . ?birthplace wdt:P17 ?country . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. } }",
        "Answer": "United Kingdom"
    },
    {
        "Question": "Which Nobel Prize in Physics laureate was the doctoral advisor of the discoverer of the positron?",
        "SPARQL": "SELECT ?advisorLabel WHERE {\n  wd:Q189838 wdt:P61 ?discoverer .\n  ?discoverer wdt:P184 ?advisor .\n  ?advisor wdt:P166 wd:Q38104 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Robert Andrews Millikan"
    },
    {
        "Question": "What is the capital of the country where Albert Einstein was born?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q937 wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Berlin"
    },
    {
        "Question": "What is the highest mountain of the country whose president succeeded Nelson Mandela?",
        "SPARQL": "SELECT DISTINCT ?peakLabel WHERE {\n  wd:Q8023 p:P39 ?mandelaPos .\n  ?mandelaPos ps:P39 ?office ;\n              pq:P1366 ?successor .\n  ?office (wdt:P17|wdt:P1001) ?country .\n  ?country wdt:P610 ?peak .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Mafadi"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-2 code of the country where Barack Obama's successor as President of the United States was born?",
        "SPARQL": "SELECT DISTINCT ?alpha2 WHERE {\n  wd:Q76 p:P39 ?st .\n  ?st ps:P39 wd:Q11696 .\n  ?st pq:P1366 ?succ .\n  ?succ wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P297 ?alpha2 .\n}",
        "Answer": "US"
    },
    {
        "Question": "What was the capital of the country whose monarch was a grandchild of Queen Victoria, was born in Berlin, and reigned in 1914?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  # Monarch born in Berlin and grandchild of Queen Victoria\n  ?monarch wdt:P19 wd:Q64 .\n  ?monarch wdt:P22|wdt:P25 ?parent .\n  ?parent  wdt:P22|wdt:P25 wd:Q9439 .\n\n  # Country where this monarch was head of state, with tenure covering 1914\n  ?country p:P35 ?hs .\n  ?hs ps:P35 ?monarch .\n  OPTIONAL { ?hs pq:P580 ?start . }\n  OPTIONAL { ?hs pq:P582 ?end . }\n  FILTER ( (!BOUND(?start) || ?start <= \"1914-12-31T00:00:00Z\"^^xsd:dateTime) &&\n          (!BOUND(?end)   || ?end   >= \"1914-01-01T00:00:00Z\"^^xsd:dateTime) )\n\n  # Capital of that country\n  ?country wdt:P36 ?capital .\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Berlin"
    },
    {
        "Question": "What is the capital of the country where Isaac Newton studied?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE { wd:Q935 wdt:P69 ?uni . ?uni wdt:P17 ?country . ?country wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. } }",
        "Answer": "London"
    },
    {
        "Question": "In which year did the composer of India's national anthem receive the Nobel Prize in Literature?",
        "SPARQL": "SELECT ?year WHERE {\n  wd:Q668 wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  ?composer p:P166 ?awardStmt .\n  ?awardStmt ps:P166 wd:Q37922 ;\n             pq:P585 ?awardDate .\n  BIND(YEAR(?awardDate) AS ?year)\n}",
        "Answer": "1913"
    },
    {
        "Question": "What is the capital of the country that hosts the headquarters of the organization that presented Marie Curie's 1911 Nobel Prize?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE {\n  wd:Q7186 p:P166 ?awardStatement .\n  ?awardStatement ps:P166 ?award ;\n                  pq:P585 ?awardDate .\n  FILTER(YEAR(?awardDate) = 1911)\n  ?award wdt:P1027 ?org .\n  ?org wdt:P159 ?hq .\n  ?hq wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Stockholm"
    },
    {
        "Question": "What is the native language of the person who replaced Ban Ki-moon as Secretary-General of the United Nations?",
        "SPARQL": "SELECT DISTINCT ?languageLabel WHERE {\n  ?person p:P39 ?statement .\n  ?statement ps:P39 wd:Q33196 ;\n             pq:P1365 wd:Q48015 .\n  ?person wdt:P103 ?language .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Portuguese"
    },
    {
        "Question": "In which city did the doctoral advisor of the physicist who received the 1936 Nobel Prize in Physics for the discovery of the positron die?",
        "SPARQL": "SELECT ?place ?placeLabel WHERE {\n  wd:Q188 wdt:P61 ?physicist .\n  ?physicist p:P166 ?awardStmt .\n  ?awardStmt ps:P166 wd:Q38104 ;\n             pq:P585 ?awardDate .\n  FILTER(YEAR(?awardDate) = 1936)\n  ?physicist wdt:P184 ?advisor .\n  ?advisor wdt:P20 ?place .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "San Marino, California"
    },
    {
        "Question": "What is the official currency of the country where the owner of LinkedIn is headquartered?",
        "SPARQL": "SELECT ?currency ?currencyLabel WHERE {\n  wd:Q134204 wdt:P127 ?owner .\n  ?owner wdt:P159 ?hq .\n  ?hq wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "United States dollar"
    },
    {
        "Question": "What is the capital of the U.S. state that contains the birthplace of the 44th President of the United States?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  ?pres p:P39 ?st.\n  ?st ps:P39 wd:Q11696;  # President of the United States\n      pq:P1545 \"44\".    # series ordinal = 44th\n  ?pres wdt:P19 ?birthplace.\n  ?birthplace wdt:P131* ?state.\n  ?state wdt:P31 wd:Q35657. # U.S. state\n  ?state wdt:P36 ?capital.  # capital\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Honolulu"
    },
    {
        "Question": "Which city is the capital of the U.S. state that contains the place where Thomas Edison died?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE { wd:Q8743 wdt:P20 ?place . ?place wdt:P131+ ?state . ?state wdt:P31 wd:Q35657 . ?state wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Trenton"
    },
    {
        "Question": "Which Nobel Prize in Chemistry laureate was married to a Nobel Prize in Physics laureate?",
        "SPARQL": "SELECT DISTINCT ?personLabel WHERE { ?person wdt:P166 wd:Q44585 . ?person wdt:P26 ?spouse . ?spouse wdt:P166 wd:Q38104 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. } }",
        "Answer": "Marie Curie"
    },
    {
        "Question": "Which U.S. state is the birthplace of the spouse of the 44th President of the United States?",
        "SPARQL": "SELECT DISTINCT ?state ?stateLabel WHERE {\n  wd:Q76 wdt:P26 ?spouse .\n  ?spouse wdt:P19 ?birthplace .\n  ?birthplace (wdt:P131)* ?state .\n  ?state wdt:P31 wd:Q35657 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Illinois"
    },
    {
        "Question": "Who succeeded to the office of Prime Minister of the United Kingdom immediately after the only British prime minister to be assassinated?",
        "SPARQL": "SELECT ?successor ?successorLabel WHERE { ?pm wdt:P1196 wd:Q356241 .  # manner of death: assassination ?pm p:P39 ?pm_p39 . ?pm_p39 ps:P39 wd:Q14211 .              # office held: Prime Minister of the United Kingdom ?pm_p39 pq:P1366 ?successor .            # replaced by SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. } }",
        "Answer": "Robert Jenkinson, 2nd Earl of Liverpool"
    },
    {
        "Question": "Among the birthplaces of Apple Inc.'s founders, which city has the highest population?",
        "SPARQL": "SELECT ?cityLabel WHERE { wd:Q312 wdt:P112 ?founder . ?founder wdt:P19 ?city . ?city wdt:P1082 ?population . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. } } ORDER BY DESC(?population) LIMIT 1",
        "Answer": "San Jose"
    },
    {
        "Question": "In which year did the doctoral advisor of the discoverer of the electron die?",
        "SPARQL": "SELECT ?year WHERE { wd:Q22654 wdt:P61 ?discoverer . ?discoverer wdt:P184 ?advisor . ?advisor wdt:P570 ?death . BIND(YEAR(?death) AS ?year) SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "1919"
    },
    {
        "Question": "Who succeeded the first female Prime Minister of the United Kingdom as Prime Minister?",
        "SPARQL": "SELECT ?successor ?successorLabel WHERE {\n  {\n    SELECT ?pm WHERE {\n      ?pm p:P39 ?st .\n      ?st ps:P39 wd:Q14211 .\n      ?pm wdt:P21 wd:Q6581072 .\n      ?st pq:P580 ?start .\n    }\n    ORDER BY ?start\n    LIMIT 1\n  }\n  {\n    SELECT ?successor WHERE {\n      ?pm p:P39 ?st2 .\n      ?st2 ps:P39 wd:Q14211 .\n      ?st2 pq:P582 ?end .\n      ?st2 pq:P1366 ?successor .\n    }\n    ORDER BY DESC(?end)\n    LIMIT 1\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "John Major"
    },
    {
        "Question": "Who was the doctoral advisor of the doctoral advisor of Alan Turing?",
        "SPARQL": "SELECT ?grandAdvisor ?grandAdvisorLabel WHERE { wd:Q7259 wdt:P184 ?advisor . ?advisor wdt:P184 ?grandAdvisor . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Oswald Veblen"
    },
    {
        "Question": "What is the country of birth of the doctoral advisor of the first woman to win a Nobel Prize?",
        "SPARQL": "SELECT DISTINCT ?countryLabel WHERE {\n  wd:Q7186 wdt:P184 ?advisor .\n  ?advisor wdt:P19 ?birthplace .\n  ?birthplace (wdt:P131*)/wdt:P17 ?country .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Luxembourg"
    },
    {
        "Question": "What is the native language of the composer of the national anthem of the country that hosted the 2016 Summer Olympics?",
        "SPARQL": "SELECT DISTINCT ?language ?languageLabel WHERE {\n  {\n    wd:Q8614 wdt:P276 ?place .\n    ?place wdt:P17 ?country .\n  }\n  UNION\n  { wd:Q8614 wdt:P17 ?country . }\n  ?country wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  ?composer wdt:P103 ?language .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Portuguese"
    },
    {
        "Question": "On what date did both U.S. Presidents who signed the United States Declaration of Independence die?",
        "SPARQL": "SELECT ?date WHERE { { SELECT ?date (COUNT(?pres) AS ?c) WHERE { wd:Q1841 wdt:P1891 ?pres . ?pres wdt:P39 wd:Q11696 ; wdt:P570 ?date . } GROUP BY ?date HAVING (?c = 2) } }",
        "Answer": "July 4, 1826"
    },
    {
        "Question": "Which female Nobel Prize in Physics laureate had a daughter who married a Nobel Prize in Chemistry laureate?",
        "SPARQL": "SELECT DISTINCT ?physicist ?physicistLabel WHERE {\n  ?physicist wdt:P166 wd:Q38104 ;  # Nobel Prize in Physics\n             wdt:P21 wd:Q6581072 .  # female\n  ?daughter wdt:P21 wd:Q6581072 ;    # daughter (female)\n            (wdt:P22|wdt:P25) ?physicist ;  # child of the physicist (father or mother)\n            wdt:P26 ?spouse .        # married to\n  ?spouse wdt:P166 wd:Q44585 .       # spouse received Nobel Prize in Chemistry\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Marie Curie"
    },
    {
        "Question": "Which monarch was head of state of the country of Andrew Wiles’s birthplace on the date of his birth?",
        "SPARQL": "SELECT ?monarch ?monarchLabel WHERE {\n  wd:Q46373 wdt:P569 ?dob ;\n            wdt:P19 ?pob .\n  ?pob wdt:P17 ?country .\n  ?country p:P35 ?hosStatement .\n  ?hosStatement ps:P35 ?monarch ;\n                pq:P580 ?start .\n  OPTIONAL { ?hosStatement pq:P582 ?end. }\n  FILTER ( ?start <= ?dob && ( !BOUND(?end) || ?dob < ?end ) )\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Elizabeth II"
    },
    {
        "Question": "Who is the maternal grandfather of the founder of SpaceX?",
        "SPARQL": "SELECT DISTINCT ?grandfather ?grandfatherLabel WHERE {\n  wd:Q193701 wdt:P112 ?founder .          # SpaceX -> founder\n  ?founder wdt:P25 ?mother .               # founder -> mother\n  ?mother wdt:P22 ?grandfather .           # mother -> father (maternal grandfather)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Joshua Haldeman"
    },
    {
        "Question": "In which city was Stephen Hawking's doctoral advisor born?",
        "SPARQL": "SELECT ?birthPlace ?birthPlaceLabel WHERE {\n  wd:Q896 wdt:P184 ?advisor .\n  ?advisor wdt:P19 ?birthPlace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Manchester"
    },
    {
        "Question": "What is the birthplace of the person who succeeded Ban Ki-moon as Secretary-General of the United Nations?",
        "SPARQL": "SELECT ?birthPlace ?birthPlaceLabel WHERE {\n  wd:Q36599 p:P39 ?bnStatement .\n  ?bnStatement ps:P39 wd:Q4830453 .\n  ?bnStatement pq:P1366 ?successor .\n  ?successor wdt:P19 ?birthPlace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Lisbon"
    },
    {
        "Question": "What is the capital of the country whose prime minister succeeded Theresa May?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q197342 p:P39 ?mayPM .\n  ?mayPM ps:P39 wd:Q14211 ;\n         pq:P1366 ?successor .\n  wd:Q14211 wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "London"
    },
    {
        "Question": "What is the capital of the country of the organization that presents the Nobel Peace Prize awarded to the person who is the 44th President of the United States?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q76 wdt:P166 wd:Q35637 .\n  wd:Q35637 wdt:P1027 ?org .\n  ?org wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Oslo"
    },
    {
        "Question": "What is the family name of the author of the novel on which the film that won the Academy Award for Best Picture and was directed by Frances McDormand’s spouse is based?",
        "SPARQL": "SELECT DISTINCT ?familyNameLabel WHERE {\n  wd:Q312962 wdt:P26 ?director .\n  ?film wdt:P57 ?director ;\n        wdt:P166 wd:Q103360 ;\n        wdt:P144 ?novel .\n  ?novel wdt:P31 wd:Q8261 ;\n         wdt:P50 ?author .\n  ?author wdt:P734 ?familyName .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "McCarthy"
    },
    {
        "Question": "What is the country of citizenship of the spouse of the 1954 Nobel Prize in Literature laureate?",
        "SPARQL": "SELECT DISTINCT ?country ?countryLabel WHERE {\n  ?laureate p:P166 ?awardStmt .\n  ?awardStmt ps:P166 wd:Q37922 ;\n             pq:P585 ?awardDate .\n  FILTER(YEAR(?awardDate) = 1954)\n  ?laureate wdt:P26 ?spouse .\n  ?spouse wdt:P27 ?country .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "United States of America"
    },
    {
        "Question": "What is the currency of the country whose monarch succeeded Juan Carlos I?",
        "SPARQL": "SELECT ?currency ?currencyLabel WHERE {\n  # Find the successor to Juan Carlos I as monarch of Spain via P39 qualifiers\n  wd:Q2933 p:P39 ?stmt .\n  ?stmt ps:P39 wd:Q43287 ;        # monarch of Spain\n        pq:P1366 ?successor .     # replaced by (successor)\n  \n  # Country of the office 'monarch of Spain'\n  wd:Q43287 wdt:P17 ?country .    # country = Spain\n  \n  # Currency of that country\n  ?country wdt:P38 ?currency .\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "euro"
    },
    {
        "Question": "Which discoverer of the chemical element named after the country whose capital is Warsaw has won two Nobel Prizes?",
        "SPARQL": "SELECT ?discovererLabel WHERE {\n  wd:Q270 ^wdt:P36 ?country .\n  ?element wdt:P31 wd:Q11344 ;\n           wdt:P138 ?country ;\n           wdt:P61 ?discoverer .\n  ?discoverer wdt:P166 ?nobelAward .\n  ?nobelAward wdt:P361 wd:Q7191 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?discoverer ?discovererLabel\nHAVING (COUNT(DISTINCT ?nobelAward) >= 2)",
        "Answer": "Marie Curie"
    },
    {
        "Question": "Which city was the birthplace of the female Nobel laureate in Physics who discovered polonium and whose spouse was also a Nobel laureate in Physics?",
        "SPARQL": "SELECT DISTINCT ?cityLabel WHERE {\n  wd:Q15779 wdt:P61 ?person .                # polonium discovered by ?person\n  ?person wdt:P166 wd:Q38104 ;               # person received Nobel Prize in Physics\n          wdt:P21 wd:Q6581072 ;              # person is female\n          wdt:P19 ?city ;                    # birthplace\n          wdt:P26 ?spouse .                  # spouse\n  ?spouse wdt:P166 wd:Q38104 .               # spouse also received Nobel Prize in Physics\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Warsaw"
    },
    {
        "Question": "What is the capital of the country that contains the birthplace of the spouse of the author of The Lord of the Rings?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  ?work rdfs:label \"The Lord of the Rings\"@en .\n  ?work wdt:P50 ?author .\n  ?author wdt:P26 ?spouse .\n  ?spouse wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "London"
    },
    {
        "Question": "What is the capital of the country of citizenship of the spouse of the predecessor of Barack Obama as President of the United States?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE {\n  wd:Q76 p:P39 ?st .\n  ?st ps:P39 wd:Q11696 ;\n      pq:P1365 ?predecessor .\n  ?predecessor wdt:P26 ?spouse .\n  ?spouse wdt:P27 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Washington, D.C."
    },
    {
        "Question": "What is the currency of the country where the university at which Alan Turing earned his PhD is located?",
        "SPARQL": "SELECT ?currency ?currencyLabel WHERE { wd:Q7251 p:P69 ?eduStmt . ?eduStmt ps:P69 ?univ . ?eduStmt pq:P512 wd:Q752297 . ?univ wdt:P17 ?country . ?country wdt:P38 ?currency . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "United States dollar"
    },
    {
        "Question": "Which of Maryam Mirzakhani's doctoral advisors is a recipient of the Fields Medal?",
        "SPARQL": "SELECT DISTINCT ?advisor ?advisorLabel WHERE { ?person rdfs:label \"Maryam Mirzakhani\"@en . ?person wdt:P184 ?advisor . ?advisor wdt:P166 wd:Q7186 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Curtis T. McMullen"
    },
    {
        "Question": "What is the capital of the country that contains the birthplace of the first Tour de France winner?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  ?tour rdfs:label \"Tour de France\"@en.\n  ?edition wdt:P361 ?tour ;\n           wdt:P393 1 ;            # edition number = 1 (first edition)\n           wdt:P1346 ?winner .      # winner of that edition\n  ?winner wdt:P19 ?birthplace .     # birthplace of the winner\n  ?birthplace wdt:P17 ?country .    # country of that place\n  ?country wdt:P36 ?capital .       # capital of that country\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Rome"
    },
    {
        "Question": "What is the place of birth of the successor of the first female Prime Minister of the United Kingdom?",
        "SPARQL": "SELECT ?birthPlace ?birthPlaceLabel WHERE {\n  {\n    SELECT ?firstFemalePM WHERE {\n      ?firstFemalePM wdt:P21 wd:Q6581072 .\n      ?firstFemalePM p:P39 ?st .\n      ?st ps:P39 wd:Q14211 ;\n          pq:P580 ?start .\n    }\n    ORDER BY ?start\n    LIMIT 1\n  }\n  ?succ p:P39 ?succSt .\n  ?succSt ps:P39 wd:Q14211 .\n  ?succSt pq:P1365 ?firstFemalePM .\n  ?succ wdt:P19 ?birthPlace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Carshalton"
    },
    {
        "Question": "What currency is used in the country where the birthplace of the director of the film 'Inception' is located?",
        "SPARQL": "SELECT DISTINCT ?currency ?currencyLabel WHERE {\n  wd:Q43312 wdt:P57 ?director .\n  ?director wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Pound sterling"
    },
    {
        "Question": "What is the currency of the country where CERN's headquarters municipality is located?",
        "SPARQL": "SELECT DISTINCT ?currencyLabel WHERE {\n  wd:Q12482 wdt:P159 ?hq .\n  ?hq wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Swiss franc"
    },
    {
        "Question": "Who was the firstborn child of the only British Prime Minister to have won the Nobel Prize in Literature?",
        "SPARQL": "SELECT ?child ?childLabel ?birthDate WHERE { ?pm wdt:P39 wd:Q14211; wdt:P166 wd:Q37922; wdt:P40 ?child. ?child wdt:P569 ?birthDate. SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }} ORDER BY ASC(?birthDate) LIMIT 1",
        "Answer": "Diana Churchill"
    },
    {
        "Question": "Which female scientist had both a spouse and a child who each won a Nobel Prize?",
        "SPARQL": "SELECT DISTINCT ?person ?personLabel WHERE { ?person wdt:P21 wd:Q6581072 . ?person wdt:P106 ?occ . ?occ wdt:P279* wd:Q901 . ?person wdt:P26 ?spouse . ?spouse wdt:P166 ?sAward . ?sAward wdt:P361 wd:Q7191 . ?person wdt:P40 ?child . ?child wdt:P166 ?cAward . ?cAward wdt:P361 wd:Q7191 . FILTER(?spouse != ?child && ?child != ?person && ?spouse != ?person) SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Marie Curie"
    },
    {
        "Question": "From which university did the doctoral advisor of the American doctoral advisor of Alan Turing receive his PhD?",
        "SPARQL": "SELECT ?univ ?univLabel WHERE {\n  wd:Q7251 wdt:P184 ?usAdvisor .\n  ?usAdvisor wdt:P27 wd:Q30 .\n  ?usAdvisor wdt:P184 ?theirAdvisor .\n  ?theirAdvisor p:P69 ?eduStmt .\n  ?eduStmt ps:P69 ?univ .\n  ?eduStmt pq:P512 wd:Q752297 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "University of Chicago"
    },
    {
        "Question": "What is the capital of the country where Joseph Haydn, who taught Ludwig van Beethoven, was born?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE { ?beethoven rdfs:label \"Ludwig van Beethoven\"@en. ?beethoven wdt:P1066 ?teacher. ?teacher rdfs:label \"Joseph Haydn\"@en. ?teacher wdt:P19 ?birthplace. ?birthplace wdt:P17 ?country. ?country wdt:P36 ?capital. SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } }",
        "Answer": "Vienna"
    },
    {
        "Question": "Which U.S. President has a grandson who also became U.S. President?",
        "SPARQL": "SELECT DISTINCT ?presidentLabel WHERE {\n  ?president wdt:P39 wd:Q11696 .\n  ?president wdt:P40/wdt:P40 ?grandchild .\n  ?grandchild wdt:P39 wd:Q11696 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "William Henry Harrison"
    },
    {
        "Question": "In which city was the Nobel Prize in Physics laureate who served as the doctoral advisor to the discoverer of the positron born?",
        "SPARQL": "SELECT DISTINCT ?birthPlace ?birthPlaceLabel WHERE {\n  wd:Q44448 wdt:P184 ?advisor .\n  ?advisor wdt:P166 wd:Q38104 .\n  ?advisor wdt:P19 ?birthPlace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Morrison"
    },
    {
        "Question": "What is the capital of the country where the inventor of the World Wide Web studied at the University of Oxford?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  wd:Q466 wdt:P61 ?inventor .\n  ?inventor wdt:P69 wd:Q34433 .\n  wd:Q34433 wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "London"
    },
    {
        "Question": "In which U.S. state is the birthplace of the spouse of the U.S. president who succeeded John F. Kennedy?",
        "SPARQL": "SELECT ?stateLabel WHERE {\n  wd:Q9696 p:P39 ?st .\n  ?st ps:P39 wd:Q11696 ;\n      pq:P1366 ?successor .\n  ?successor wdt:P26 ?spouse .\n  ?spouse wdt:P19 ?birthplace .\n  ?birthplace wdt:P131+ ?state .\n  ?state wdt:P31/wdt:P279* wd:Q35657 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Texas"
    },
    {
        "Question": "Which currency is used in the country whose capital is the birthplace of the spouse of Marie Curie?",
        "SPARQL": "SELECT ?currency ?currencyLabel WHERE {\n  wd:Q7186 wdt:P26 ?spouse .\n  ?spouse wdt:P19 ?birthplace .\n  ?country wdt:P36 ?birthplace .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "euro"
    },
    {
        "Question": "What is the capital of the country where Malala Yousafzai was born?",
        "SPARQL": "SELECT ?capitalLabel WHERE { wd:Q34027 wdt:P19/wdt:P17/wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Islamabad"
    },
    {
        "Question": "What is the legislative body of the capital of the country that contains the city where Apple Inc.'s headquarters are located?",
        "SPARQL": "SELECT DISTINCT ?legislature ?legislatureLabel WHERE { wd:Q312 wdt:P159 ?hq . ?hq wdt:P17 ?country . ?country wdt:P36 ?capital . ?capital wdt:P194 ?legislature . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Council of the District of Columbia"
    },
    {
        "Question": "Who succeeded the U.S. president whose mother was born in Scotland?",
        "SPARQL": "SELECT DISTINCT ?successor ?successorLabel WHERE {\n  ?president wdt:P39 wd:Q11696;  # position held: President of the United States\n             wdt:P25 ?mother.    # mother\n  ?mother wdt:P19 ?motherBirthPlace.\n  ?motherBirthPlace (wdt:P131*) wd:Q22.  # birthplace located in Scotland\n  ?president p:P39 ?statement.\n  ?statement ps:P39 wd:Q11696.\n  ?statement pq:P1366 ?successor.  # replaced by (successor)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Joe Biden"
    },
    {
        "Question": "What is the birthplace of the predecessor of António Guterres as Secretary-General of the United Nations?",
        "SPARQL": "SELECT ?birthplace ?birthplaceLabel WHERE {\n  wd:Q311196 p:P39 ?st.\n  ?st ps:P39 wd:Q483636;\n      pq:P1365 ?pred.\n  ?pred wdt:P19 ?birthplace.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Eumseong County"
    },
    {
        "Question": "Which country hosted the Summer Olympics in the year Justin Trudeau’s maternal grandfather was born?",
        "SPARQL": "SELECT ?country ?countryLabel WHERE {\n  wd:Q43499 wdt:P25 ?mother .\n  ?mother wdt:P22 ?maternalGrandfather .\n  ?maternalGrandfather wdt:P569 ?bdate .\n  BIND(YEAR(?bdate) AS ?birthYear) .\n  ?olympic wdt:P31 wd:Q159821 .\n  OPTIONAL { ?olympic wdt:P580 ?start . }\n  OPTIONAL { ?olympic wdt:P585 ?point . }\n  OPTIONAL { ?olympic wdt:P571 ?inception . }\n  BIND(COALESCE(?start, ?point, ?inception) AS ?olympicDate) .\n  FILTER(YEAR(?olympicDate) = ?birthYear) .\n  OPTIONAL { ?olympic wdt:P4743 ?hostCity . }\n  OPTIONAL { ?olympic wdt:P276 ?location . }\n  BIND(COALESCE(?hostCity, ?location) AS ?place) .\n  ?place wdt:P17 ?country .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "United Kingdom"
    },
    {
        "Question": "What is the place of birth of the successor to the monarch who was the father of Queen Elizabeth II?",
        "SPARQL": "SELECT ?birthplaceLabel WHERE {\n  wd:Q9682 wdt:P22 ?father .\n  ?father (wdt:P1366|wdt:P156) ?successor .\n  ?successor wdt:P19 ?birthplace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Mayfair"
    },
    {
        "Question": "What is the family name of the composer of the national anthem of the country whose capital is Islamabad?",
        "SPARQL": "SELECT ?familyNameLabel WHERE {\n  ?country wdt:P31 wd:Q6256 ;\n           wdt:P36 wd:Q1362 ;\n           wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  ?composer wdt:P734 ?familyName .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Chagla"
    },
    {
        "Question": "Which city was the birthplace of the author of the novel that the 1982 film Blade Runner is based on?",
        "SPARQL": "SELECT ?birthPlace ?birthPlaceLabel WHERE { wd:Q184843 wdt:P144 wd:Q1067150 . wd:Q1067150 wdt:P50 ?author . ?author wdt:P19 ?birthPlace . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Chicago"
    },
    {
        "Question": "Who wrote the novel that the Stanley Kubrick-directed film starring Malcolm McDowell was based on?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?authorLabel WHERE {\n  ?film wdt:P57 ?director ;       # director\n        wdt:P161 ?actor ;          # cast member\n        wdt:P144 ?work .           # based on\n  ?work wdt:P50 ?author .          # author of the work\n  ?director rdfs:label \"Stanley Kubrick\"@en .\n  ?actor rdfs:label \"Malcolm McDowell\"@en .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Anthony Burgess"
    },
    {
        "Question": "In which town was the first woman to serve as Prime Minister of the United Kingdom born?",
        "SPARQL": "SELECT ?birthPlace ?birthPlaceLabel WHERE { ?pm p:P39 ?st . ?st ps:P39 wd:Q14211 . ?st pq:P580 ?start . ?pm wdt:P21 wd:Q6581072 ; wdt:P19 ?birthPlace . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. } } ORDER BY ?start LIMIT 1",
        "Answer": "Grantham"
    },
    {
        "Question": "Which Academy Award for Best Director winner directed a film that features both Tom Hanks and Matt Damon?",
        "SPARQL": "SELECT DISTINCT ?directorLabel WHERE {\n  ?film wdt:P31 wd:Q11424 ;\n        wdt:P161 wd:Q2263 ;   # Tom Hanks\n        wdt:P161 wd:Q312 ;    # Matt Damon\n        wdt:P57 ?director .   # director\n  ?director wdt:P166 wd:Q103360 . # Academy Award for Best Director\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Steven Spielberg"
    },
    {
        "Question": "Which currency is used in the country where the mathematician who proved Fermat's Last Theorem earned his PhD?",
        "SPARQL": "SELECT DISTINCT ?currency ?currencyLabel WHERE { wd:Q46857 p:P69 ?eduStmt . ?eduStmt pq:P512 wd:Q752297 ; ps:P69 ?inst . ?inst wdt:P17 ?country . ?country wdt:P38 ?currency . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "pound sterling"
    },
    {
        "Question": "Which U.S. state is home to the university attended by the author of the book that inspired the film 'Blade Runner'?",
        "SPARQL": "SELECT DISTINCT ?state ?stateLabel WHERE {\n  wd:Q184843 wdt:P144 ?work .\n  ?work wdt:P50 ?author .\n  ?author wdt:P69 ?univ .\n  ?univ (wdt:P131|wdt:P159|wdt:P276)+ ?loc .\n  ?loc wdt:P131* ?state .\n  ?state wdt:P31 wd:Q35657 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "California"
    },
    {
        "Question": "What writing system is used by the official language of the country where Albert Einstein was born?",
        "SPARQL": "SELECT ?script ?scriptLabel WHERE {\n  wd:Q937 wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P37 ?officialLanguage .\n  ?officialLanguage wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-2 code of the country for which Michelle Obama's spouse has served as head of state?",
        "SPARQL": "SELECT ?code WHERE { wd:Q13133 wdt:P26 ?spouse . ?country wdt:P35 ?spouse ; wdt:P297 ?code . }",
        "Answer": "US"
    },
    {
        "Question": "Which political party did the predecessor of Barack Obama as President of the United States belong to?",
        "SPARQL": "SELECT ?party ?partyLabel WHERE {\n  wd:Q76 p:P39 ?posSt .\n  ?posSt ps:P39 wd:Q11696 ;\n          pq:P1365 ?prev .\n  ?prev wdt:P102 ?party .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Republican Party (United States)"
    },
    {
        "Question": "What is the capital city of the country where the composer of the national anthem of the country that hosted the 2016 Summer Olympics was born?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q861528 wdt:P17 ?hostCountry .\n  ?hostCountry wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  ?composer wdt:P19 ?birthPlace .\n  ?birthPlace wdt:P17 ?birthCountry .\n  ?birthCountry wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Brasília"
    },
    {
        "Question": "What is the capital of the country where Marie Curie's husband died?",
        "SPARQL": "SELECT DISTINCT ?capital ?capitalLabel WHERE {\n  wd:Q7186 wdt:P26 ?spouse .         # Marie Curie -> spouse\n  ?spouse wdt:P20 ?placeOfDeath .     # spouse -> place of death\n  ?placeOfDeath wdt:P17 ?country .    # place -> country\n  ?country wdt:P36 ?capital .         # country -> capital\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Paris"
    },
    {
        "Question": "Which noble family does the mother of the current head of state of the Netherlands belong to?",
        "SPARQL": "SELECT ?nobleFamilyLabel WHERE {\n  wd:Q55 p:P35 ?statement .\n  ?statement ps:P35 ?headOfState .\n  FILTER NOT EXISTS { ?statement pq:P582 ?end }  # ensure current head of state (no end time)\n  ?headOfState wdt:P25 ?mother .\n  ?mother wdt:P53 ?nobleFamily .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "House of Orange-Nassau"
    },
    {
        "Question": "Which city is the capital of the country that lies in both Europe and Asia and has coastlines on both the Mediterranean Sea and the Black Sea?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  ?country wdt:P31 wd:Q6256 ;\n           wdt:P30 wd:Q46 ;\n           wdt:P30 wd:Q48 ;\n           wdt:P206 wd:Q4918 ;\n           wdt:P206 wd:Q165 ;\n           wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Ankara"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-2 code of the country where the father of the founder of SpaceX was born?",
        "SPARQL": "SELECT ?code WHERE {\n  wd:Q193701 wdt:P112 ?founder .\n  ?founder wdt:P22 ?father .\n  ?father wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P297 ?code .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "ZA"
    },
    {
        "Question": "What is the official language of the country where Franz Kafka was born?",
        "SPARQL": "SELECT ?language ?languageLabel WHERE { wd:Q732 wdt:P19 ?birthplace . ?birthplace wdt:P17 ?country . ?country wdt:P37 ?language . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Czech"
    },
    {
        "Question": "What is the currency of the country where the headquarters of the United Nations is located?",
        "SPARQL": "SELECT ?currency ?currencyLabel WHERE {\n  wd:Q1065 wdt:P159 ?hqCity .\n  ?hqCity wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "United States dollar"
    },
    {
        "Question": "What is the capital of the U.S. state where Mark Zuckerberg was born?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  wd:Q36215 wdt:P19 ?birthplace .\n  ?birthplace wdt:P131* ?state .\n  ?state wdt:P31/wdt:P279* wd:Q35657 .\n  ?state wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Albany"
    },
    {
        "Question": "What is the capital city of the country in which Ludwig van Beethoven's birthplace is located?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE {\n  wd:Q255 wdt:P19 ?birthplace .\n  ?birthplace p:P17 ?countryStatement .\n  ?countryStatement ps:P17 ?country .\n  FILTER NOT EXISTS { ?countryStatement pq:P582 ?end. }\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Berlin"
    },
    {
        "Question": "Which monarch succeeded the father-in-law of Mary, Queen of Scots through her marriage to Francis II of France?",
        "SPARQL": "SELECT ?successor ?successorLabel WHERE {\n  wd:Q756 wdt:P26 wd:Q151046 .\n  wd:Q151046 wdt:P22 ?fatherInLaw .\n  ?fatherInLaw wdt:P1366 ?successor .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Francis II of France"
    },
    {
        "Question": "In which city was the successor of Ban Ki-moon as Secretary-General of the United Nations born?",
        "SPARQL": "SELECT ?birthPlaceLabel WHERE {\n  wd:Q38165 p:P39 ?posStatement .\n  ?posStatement ps:P39 wd:Q87167 ;\n               pq:P1366 ?successor .\n  ?successor wdt:P19 ?birthPlace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Lisbon"
    },
    {
        "Question": "Among countries that share a land border with Germany, who was the first woman to hold that country's head-of-government office?",
        "SPARQL": "SELECT ?personLabel WHERE {\n  wd:Q183 wdt:P47 ?country .\n  ?country wdt:P1313 ?office .\n  ?person wdt:P31 wd:Q5 ;\n          wdt:P21 wd:Q6581072 .\n  ?person p:P39 ?posStm .\n  ?posStm ps:P39 ?office ;\n          pq:P580 ?start .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?start\nLIMIT 1",
        "Answer": "Elisabeth Kopp"
    },
    {
        "Question": "Which political party does the successor of the Mayor of London who was in office during the 2012 Summer Olympics belong to?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX p: <http://www.wikidata.org/prop/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX pq: <http://www.wikidata.org/prop/qualifier/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT ?party ?partyLabel WHERE {\n  wd:Q8577 wdt:P580 ?olStart ; wdt:P582 ?olEnd .\n  ?prev p:P39 ?prevStatement .\n  ?prevStatement ps:P39 wd:Q192064 .\n  OPTIONAL { ?prevStatement pq:P580 ?start . }\n  OPTIONAL { ?prevStatement pq:P582 ?end . }\n  FILTER((!BOUND(?start) || ?start <= ?olEnd) && (!BOUND(?end) || ?end >= ?olStart))\n  ?next p:P39 ?nextStatement .\n  ?nextStatement ps:P39 wd:Q192064 ;\n                 pq:P1365 ?prev .\n  ?next wdt:P102 ?party .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Labour Party"
    },
    {
        "Question": "What is the capital of the country where the headquarters of the organization that conferred Marie Curie's second Nobel Prize are located?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  {\n    SELECT ?award WHERE {\n      wd:Q7186 p:P166 ?stmt .\n      ?stmt ps:P166 ?award .\n      ?award wdt:P31/wdt:P279* wd:Q7191 .\n      ?stmt pq:P585 ?date .\n    }\n    ORDER BY ?date\n    LIMIT 1 OFFSET 1\n  }\n  ?award wdt:P1027 ?org .\n  ?org wdt:P159 ?hq .\n  ?hq wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Stockholm"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-2 code of the country whose capital is the birthplace of Tim Berners-Lee?",
        "SPARQL": "SELECT ?code ?countryLabel WHERE {\n  wd:Q80 wdt:P19 ?birthPlace .\n  ?country wdt:P36 ?birthPlace ;\n           wdt:P297 ?code ;\n           wdt:P31/wdt:P279* wd:Q3624078 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "GB"
    },
    {
        "Question": "In which city was the spouse of Marie Curie's younger daughter born?",
        "SPARQL": "SELECT ?birthPlaceLabel WHERE {   {     SELECT ?child WHERE {       wd:Q7186 wdt:P40 ?child .       ?child wdt:P569 ?dob .     }     ORDER BY DESC(?dob)     LIMIT 1   }   ?child wdt:P26 ?spouse .   ?spouse wdt:P19 ?birthPlace .   SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. } }",
        "Answer": "New Orleans"
    },
    {
        "Question": "What is the capital of the country where the author of 'Pride and Prejudice' died?",
        "SPARQL": "SELECT ?capital ?capitalLabel WHERE { wd:Q181792 wdt:P50 ?author . ?author wdt:P20 ?deathPlace . ?deathPlace wdt:P17 ?country . ?country wdt:P36 ?capital . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "London"
    },
    {
        "Question": "Which Nobel Prize in Physics laureate is the father of the Nobel Prize in Physics laureate who was born in Copenhagen?",
        "SPARQL": "SELECT DISTINCT ?fatherLabel WHERE {\n  ?father wdt:P166 wd:Q38104 ;  # father is a Nobel Prize in Physics laureate\n          wdt:P40 ?child .      # father of the child\n  ?child wdt:P166 wd:Q38104 ;   # child is also a Nobel Prize in Physics laureate\n         wdt:P19 wd:Q1748 .     # child was born in Copenhagen\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Niels Bohr"
    },
    {
        "Question": "Which country has as its capital the city where the inventor of dynamite was born?",
        "SPARQL": "SELECT DISTINCT ?country ?countryLabel WHERE { wd:Q7196 wdt:P19 ?birthplace . ?country wdt:P36 ?birthplace . ?country wdt:P31/wdt:P279* wd:Q3624078 . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Sweden"
    },
    {
        "Question": "Who succeeded the only female Prime Minister of Israel?",
        "SPARQL": "SELECT DISTINCT ?successor ?successorLabel WHERE { ?person wdt:P21 wd:Q6581072 . ?person p:P39 ?st . ?st ps:P39 wd:Q725650 ; pq:P1366 ?successor . SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}",
        "Answer": "Yitzhak Rabin"
    },
    {
        "Question": "Which university awarded the Doctor of Philosophy (PhD) degree to Alan Turing's doctoral advisor?",
        "SPARQL": "SELECT DISTINCT ?university ?universityLabel WHERE {\n  wd:Q7251 wdt:P184 ?advisor .\n  ?advisor p:P69 ?statement .\n  ?statement ps:P69 ?university .\n  ?statement pq:P512 wd:Q752297 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Princeton University"
    },
    {
        "Question": "What is the official language of the country where the author of 'One Hundred Years of Solitude' died?",
        "SPARQL": "SELECT ?language ?languageLabel WHERE {\n  wd:Q199906 wdt:P50 ?author .\n  ?author wdt:P20 ?deathPlace .\n  ?deathPlace wdt:P17 ?country .\n  ?country wdt:P37 ?language .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }\n}",
        "Answer": "Spanish"
    },
    {
        "Question": "Into which sea does the river that the capital city of Serbia is situated on ultimately empty?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  wd:Q403 wdt:P36 ?capital.          # Serbia -> capital\n  ?capital wdt:P706 ?river.           # capital located on a terrain feature (river)\n  ?river wdt:P31/wdt:P279* wd:Q4022.  # ensure the feature is a river\n  ?river (wdt:P974*)/wdt:P403 ?sea.   # follow tributary chain to the river's mouth body of water\n  ?sea wdt:P31/wdt:P279* wd:Q23397.   # ensure it is a sea (or subclass)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Black Sea"
    },
    {
        "Question": "Which city is the birthplace of the author whose novel served as the basis for Erich Wolfgang Korngold’s opera \"Die tote Stadt\"?",
        "SPARQL": "SELECT ?birthplaceLabel WHERE {\n  ?opera wdt:P31 wd:Q1344;                # instance of: opera\n         rdfs:label \"Die tote Stadt\"@en;  # the opera title\n         wdt:P86 ?composer;                # composer\n         wdt:P144 ?sourceWork.             # based on\n  ?composer rdfs:label \"Erich Wolfgang Korngold\"@en.\n  ?sourceWork wdt:P50 ?author.             # author of the source work\n  ?author wdt:P19 ?birthplace.             # birthplace of that author\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Tournai"
    },
    {
        "Question": "Into which sea does the river flow that runs through the city where the manufacturer of the Antonov An-225 Mriya has its headquarters?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  ?model rdfs:label \"Antonov An-225 Mriya\"@en.\n  ?model wdt:P176 ?manufacturer.\n  ?manufacturer wdt:P159 ?hqCity.\n  ?hqCity wdt:P206 ?river.\n  ?river wdt:P31/wdt:P279* wd:Q4022.\n  ?river wdt:P403 ?mouth.\n  ?mouth wdt:P361+ ?sea.\n  ?sea wdt:P31/wdt:P279* wd:Q165.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Black Sea"
    },
    {
        "Question": "Which mountain range contains the highest point of the sovereign state that borders both the Black Sea and the Caspian Sea?",
        "SPARQL": "SELECT DISTINCT ?rangeLabel WHERE {\n  ?country wdt:P31/wdt:P279* wd:Q6256;\n           wdt:P206 wd:Q165, wd:Q5487;\n           wdt:P610 ?peak.\n  ?peak wdt:P4552 ?range.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Caucasus Mountains"
    },
    {
        "Question": "What is the ISO 4217 currency code of the country of the university where Norwegian mathematician Viggo Brun studied?",
        "SPARQL": "SELECT DISTINCT ?code WHERE {\n  ?person rdfs:label \"Viggo Brun\"@en ;\n          wdt:P31 wd:Q5 ;\n          wdt:P69 ?uni .\n  ?uni wdt:P17 wd:Q20 .    # University located in Norway\n  wd:Q20 wdt:P38 ?currency .\n  ?currency wdt:P498 ?code .\n}",
        "Answer": "NOK"
    },
    {
        "Question": "What is the IATA code of the airport named after the composer of the opera Káťa Kabanová?",
        "SPARQL": "SELECT DISTINCT ?iata WHERE {\n  ?work wdt:P31 wd:Q1344;            # instance of opera\n        rdfs:label \"Káťa Kabanová\"@en;\n        wdt:P86 ?composer.            # composer of the opera\n  ?airport wdt:P31/wdt:P279* wd:Q1248784;  # instance of (or subclass of) airport\n           wdt:P138 ?composer;        # named after that composer\n           wdt:P238 ?iata.            # IATA code\n}",
        "Answer": "OSR"
    },
    {
        "Question": "Which writing system is used by the original language of the work on which a film that won the Golden Bear in 1983 was based?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX p: <http://www.wikidata.org/prop/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX pq: <http://www.wikidata.org/prop/qualifier/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?scriptLabel WHERE {\n  ?film wdt:P31 wd:Q11424 ;           # film\n        wdt:P144 ?work .              # based on\n  \n  # Film received Golden Bear in 1983\n  ?film p:P166 ?awardStmt .\n  ?awardStmt ps:P166 ?award ;\n            pq:P585 ?awardDate .\n  ?award rdfs:label \"Golden Bear\"@en .\n  FILTER(YEAR(?awardDate) = 1983)\n  \n  # Work's original language and its writing system\n  ?work wdt:P364 ?lang .              # original language of work\n  ?lang wdt:P282 ?script .            # writing system\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which country is home to the university where the author of the novel 'The Vegetarian' studied?",
        "SPARQL": "SELECT DISTINCT ?countryLabel WHERE {\n  ?work rdfs:label \"The Vegetarian\"@en;\n        wdt:P50 ?author.\n  ?author wdt:P69 ?university.\n  ?university wdt:P17 ?country.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "South Korea"
    },
    {
        "Question": "What is the capital city of the country of citizenship of the author of the play that Bohuslav Martinů's opera 'Julietta' is based on?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  VALUES ?opera { wd:Q190249 }\n  ?opera wdt:P86 wd:Q54604.\n  ?opera wdt:P144 ?sourceWork.\n  ?sourceWork wdt:P50 ?author.\n  ?author wdt:P27 ?country.\n  ?country wdt:P36 ?capital.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Paris"
    },
    {
        "Question": "Which airline alliance is the flag carrier of the country of citizenship of the discoverer of Prontosil a member of?",
        "SPARQL": "SELECT DISTINCT ?allianceLabel WHERE {\n  ?drug rdfs:label \"Prontosil\"@en.\n  ?drug wdt:P61 ?discoverer.\n  ?discoverer wdt:P27 ?country.\n  ?airline wdt:P31 wd:Q192576;  # instance of flag carrier\n           wdt:P17 ?country;    # country of the airline\n           wdt:P463 ?alliance.  # member of (alliance)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Star Alliance"
    },
    {
        "Question": "Which writing system is used by the official language of the country of citizenship of the architect of Metropol Parasol?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\n\nSELECT DISTINCT ?Answer WHERE {\n  ?building rdfs:label \"Metropol Parasol\"@en.\n  ?building wdt:P84 ?architect.\n  ?architect wdt:P27 ?country.\n  ?country wdt:P37 ?language.\n  ?language wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n  BIND(?scriptLabel AS ?Answer)\n}",
        "Answer": "Latin alphabet"
    },
    {
        "Question": "What writing system is used by the official language of the country where Doi Inthanon is located?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  VALUES ?peak { wd:Q192497 }  # Doi Inthanon\n  ?peak (wdt:P17|wdt:P131*/wdt:P17) ?country .\n  ?country wdt:P37 ?language .\n  ?language wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Thai script"
    },
    {
        "Question": "Which city is the capital of the country that contains the birthplace of the composer of Botswana's national anthem?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  wd:Q963 wdt:P85 ?anthem .            # Botswana -> anthem\n  ?anthem wdt:P86 ?composer .           # anthem -> composer\n  ?composer wdt:P19 ?birthplace .       # composer -> place of birth\n  ?birthplace wdt:P17 ?country .        # birthplace -> country\n  ?country wdt:P36 ?capital .           # country -> capital\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Gaborone"
    },
    {
        "Question": "Which currency is used by the country where the headquarters of the manufacturer of the de Havilland Comet—the first commercial jet airliner—were located?",
        "SPARQL": "SELECT DISTINCT ?currencyLabel WHERE {\n  ?aircraft rdfs:label \"de Havilland Comet\"@en .\n  ?aircraft wdt:P176 ?manufacturer .\n  ?manufacturer wdt:P159 ?hq .\n  ?hq wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Pound sterling"
    },
    {
        "Question": "Which official language is used in the country of citizenship of the author of the novel on which the 1974 Japanese film 'The Castle of Sand' is based?",
        "SPARQL": "SELECT DISTINCT ?languageLabel WHERE {\n  ?film wdt:P31 wd:Q11424 ;               # film\n        rdfs:label \"The Castle of Sand\"@en ;\n        wdt:P495 wd:Q17 ;                  # country of origin: Japan (to disambiguate)\n        wdt:P144 ?novel .                  # based on\n  ?novel wdt:P50 ?author .                 # author of the novel\n  ?author wdt:P27 ?country .               # country of citizenship\n  ?country wdt:P37 ?language .             # official language of that country\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Japanese"
    },
    {
        "Question": "What is the native language of the author of the lyrics of the national anthem of the country whose capital is Ljubljana?",
        "SPARQL": "SELECT DISTINCT ?languageLabel WHERE {\n  ?country wdt:P36 wd:Q437;  # capital is Ljubljana\n           wdt:P31/wdt:P279* wd:Q3624078;  # is a sovereign state\n           wdt:P85 ?anthem.                # has anthem\n  ?anthem wdt:P676 ?author.                # lyrics by\n  ?author wdt:P103 ?language.              # native language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Slovene"
    },
    {
        "Question": "Which sea does the river ultimately flow into that runs through the capital of the region containing the birthplace of composer Leoš Janáček?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  wd:Q5879 wdt:P19 ?birthPlace .\n  ?birthPlace wdt:P131* ?region .\n  ?region wdt:P31/wdt:P279* wd:Q2001676 .  # region of the Czech Republic\n  ?region wdt:P36 ?capital .\n  ?capital wdt:P206 ?river .               # capital located on a river\n  ?river wdt:P31/wdt:P279* wd:Q4022 .      # ensure it is a river\n  ?river wdt:P403+ ?sea .                  # follow mouth-of chain to terminal body of water\n  ?sea wdt:P31/wdt:P279* wd:Q165 .         # restrict to a sea\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Baltic Sea"
    },
    {
        "Question": "Which plant family does the tree depicted on the coat of arms of the city where the Spanish folk metal band Mägo de Oz was formed belong to?",
        "SPARQL": "SELECT DISTINCT ?familyLabel WHERE {\n  wd:Q240918 wdt:P740 ?city .\n  ?coat wdt:P31/wdt:P279* wd:Q14659 ;\n        wdt:P1001 ?city ;\n        wdt:P180 ?depicted .\n  ?depicted wdt:P31 wd:Q16521 .\n  ?depicted wdt:P171* ?family .\n  ?family wdt:P105 wd:Q35409 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Ericaceae"
    },
    {
        "Question": "What is the IATA code of the airport named after the author of the novel that the film 'Zorba the Greek' is based on?",
        "SPARQL": "SELECT DISTINCT ?Answer WHERE {\n  ?film wdt:P31 wd:Q11424;                 # film\n        rdfs:label \"Zorba the Greek\"@en;  # specific film by English label\n        wdt:P577 ?pubdate;                 # release date\n        wdt:P144 ?novel.                   # based on -> novel\n  FILTER(YEAR(?pubdate) = 1964)            # the 1964 film\n  ?novel wdt:P50 ?author.                  # novel's author\n  ?airport wdt:P31 wd:Q1248784;            # airport\n           wdt:P138 ?author;               # named after the same author\n           wdt:P238 ?Answer.               # IATA code\n}",
        "Answer": "HER"
    },
    {
        "Question": "Into which sea does the river that flows through the capital of the country where the painter Niko Pirosmani died empty?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  wd:Q172088 wdt:P20 ?deathPlace.          # Niko Pirosmani -> place of death\n  ?deathPlace wdt:P17 ?country.             # place of death -> country\n  ?country wdt:P36 ?capital.                # country -> capital\n  ?capital wdt:P206 ?river.                 # capital located in/next to body of water\n  ?river wdt:P31 wd:Q4022.                  # that body of water is a river\n  ?river wdt:P403 ?sea.                     # river -> mouth of the watercourse (sea)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Caspian Sea"
    },
    {
        "Question": "Which writing system is used by the official language of the country that contains the place where composer George Enescu was born?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?person wdt:P31 wd:Q5 ;\n          rdfs:label \"George Enescu\"@en ;\n          wdt:P19 ?birthPlace .\n  ?birthPlace wdt:P17 ?country .\n  ?country wdt:P37 ?language .\n  ?language wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which sea does the river on which the capital of the country of origin of the poem 'The Knight in the Panther's Skin' ultimately empty into?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?finalLabel WHERE {\n  ?work rdfs:label \"The Knight in the Panther's Skin\"@en.\n  ?work wdt:P495 ?country.\n  ?country wdt:P36 ?capital.\n  ?capital wdt:P206 ?river.\n  ?river wdt:P31 wd:Q4022.\n  ?river wdt:P403+ ?final.\n  ?final wdt:P31 ?finalClass.\n  VALUES ?finalClass { wd:Q165 wd:Q23397 wd:Q9430 }.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Caspian Sea"
    },
    {
        "Question": "Into which body of water does the river that flows through the capital of the only sovereign state whose official language is Georgian empty?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?AnswerLabel WHERE {\n  # Find the sovereign state with Georgian as an official language (Georgia) and its capital (Tbilisi)\n  ?country wdt:P31 wd:Q3624078;      # sovereign state\n           wdt:P37 wd:Q8108;         # official language: Georgian\n           wdt:P36 ?capital.         # capital\n  \n  # The capital is located on a river\n  ?capital wdt:P706 ?river.\n  ?river wdt:P31/wdt:P279* wd:Q4022. # river\n  \n  # Get the mouth (where the river empties) and ensure it's not another river\n  ?river wdt:P403 ?Answer.\n  FILTER NOT EXISTS { ?Answer wdt:P31/wdt:P279* wd:Q4022 } # exclude rivers as mouths\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Caspian Sea"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the headquarters of the company that originally developed MySQL are located?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q504705 wdt:P159 ?hq .            # MySQL AB (original MySQL developer) -> headquarters location\n  ?hq wdt:P17 ?country .               # HQ city -> country\n  ?country wdt:P37 ?lang .             # country -> official language\n  ?lang wdt:P282 ?script .             # language -> writing system\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which Portuguese architect designed a building that won the EU Prize for Contemporary Architecture (Mies van der Rohe Award)?",
        "SPARQL": "SELECT DISTINCT ?architectLabel WHERE {\n  ?work wdt:P166 wd:Q1139617.\n  ?work wdt:P84 ?architect.\n  ?architect wdt:P27 wd:Q45.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nLIMIT 1",
        "Answer": "Álvaro Siza Vieira"
    },
    {
        "Question": "What is the ISO 4217 currency code of the country where the headquarters of the manufacturer of the Tatra 815 are located?",
        "SPARQL": "SELECT DISTINCT ?code WHERE {\n  wd:Q1700982 wdt:P176 ?manufacturer .\n  ?manufacturer wdt:P159 ?hq .\n  ?hq wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  ?currency wdt:P498 ?code .\n}",
        "Answer": "CZK"
    },
    {
        "Question": "Which mountain range contains the highest point of the autonomous community where the painter Joaquín Sorolla was born?",
        "SPARQL": "SELECT DISTINCT ?rangeLabel WHERE {\n  BIND(wd:Q151532 AS ?painter)  # Joaquín Sorolla\n  ?painter wdt:P19 ?birthplace.\n  ?birthplace wdt:P131* ?region.\n  ?region wdt:P31/wdt:P279* wd:Q13220204.  # autonomous community of Spain\n  ?region wdt:P610 ?peak.                 # highest point of the region\n  ?peak (wdt:P4552|wdt:P706|wdt:P361)+ ?range.  # mountain range / located on terrain feature / part of\n  ?range wdt:P31/wdt:P279* wd:Q46831.     # instance of mountain range\n  FILTER NOT EXISTS {\n    ?range wdt:P361 ?super.\n    ?super wdt:P31/wdt:P279* wd:Q46831.   # exclude subranges; keep top-level range\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Iberian System"
    },
    {
        "Question": "In which city is the theatre located where the world premiere of the opera \"Jenůfa\" took place?",
        "SPARQL": "SELECT DISTINCT ?cityLabel WHERE {\n  ?work rdfs:label \"Jenůfa\"@en ;\n        wdt:P31/wdt:P279* wd:Q1344 ;            # the work is an opera\n        wdt:P4647 ?place .                      # location of first performance\n  ?place (wdt:P131|wdt:P159)* ?city .           # climb to a city via located in/admin HQ\n  ?city wdt:P31/wdt:P279* wd:Q515 .             # ensure it is a city\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} LIMIT 1",
        "Answer": "Brno"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the author of 'The Master and Margarita' died?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q7342 wdt:P50 ?author .\n  ?author wdt:P20 ?deathPlace .\n  ?deathPlace wdt:P17 ?country .\n  ?country wdt:P37 ?officialLang .\n  ?officialLang wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Cyrillic script"
    },
    {
        "Question": "What is the capital city of the country where the author who won the 1994 Booker Prize was born?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  ?person p:P166 ?awardStmt.\n  ?awardStmt ps:P166 wd:Q160082;  # Booker Prize\n             pq:P585 ?date.\n  FILTER(YEAR(?date) = 1994)\n  ?person wdt:P19 ?birthplace.\n  ?birthplace wdt:P17 ?country.\n  ?country wdt:P36 ?capital.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Edinburgh"
    },
    {
        "Question": "What city was the architect born in who designed a museum in Bern that is named after a person who worked at the Bauhaus?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?birthPlaceLabel WHERE {\n  ?museum wdt:P31/wdt:P279* wd:Q33506;      # museum (or subclass)\n          wdt:P131* wd:Q70;                  # located in Bern\n          wdt:P84 ?architect;                # architect of the museum\n          wdt:P138 ?namesake.                # named after\n  \n  ?namesake wdt:P108 wd:Q166301.             # namesake employed by the Bauhaus\n  \n  ?architect wdt:P19 ?birthPlace.            # architect's place of birth\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Genoa"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the National Museum of Ethiopia, which houses the hominin fossil 'Lucy', is located?",
        "SPARQL": "SELECT DISTINCT ?answerLabel WHERE {\n  ?artifact rdfs:label \"Lucy\"@en ;\n            wdt:P276 ?museum .\n  ?museum rdfs:label \"National Museum of Ethiopia\"@en ;\n          wdt:P17 ?country .\n  ?country wdt:P37 ?officialLang .\n  ?officialLang wdt:P282 ?answer .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Ge'ez script"
    },
    {
        "Question": "What is the capital city of the country where the composer of the national anthem \"Namibia, Land of the Brave\" was born?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  wd:Q958005 wdt:P86 ?composer .\n  ?composer wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Windhoek"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-2 code of the country where the headquarters of the airline with IATA code BT are located?",
        "SPARQL": "SELECT DISTINCT ?code WHERE {\n  ?airline wdt:P229 \"BT\".\n  ?airline wdt:P159 ?hq.\n  ?hq wdt:P17 ?country.\n  ?country wdt:P297 ?code.\n}",
        "Answer": "LV"
    },
    {
        "Question": "What is the ISO 4217 currency code of the country where the headquarters of the Green Climate Fund are located?",
        "SPARQL": "SELECT ?code WHERE {\n  ?org rdfs:label \"Green Climate Fund\"@en.\n  ?org wdt:P159 ?hq.\n  ?hq (wdt:P131*)/wdt:P17 ?country.\n  ?country wdt:P38 ?currency.\n  ?currency wdt:P498 ?code.\n}",
        "Answer": "KRW"
    },
    {
        "Question": "Which sea does the river that Latvia's capital city (Riga) is located on ultimately flow into?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  wd:Q211 wdt:P36 ?capital .            # Latvia -> capital (Riga)\n  ?capital wdt:P206 ?river .            # Riga -> located on body of water (a river)\n  ?river wdt:P31/wdt:P279* wd:Q4022 ;   # ensure it's a river\n         wdt:P403 ?mouth .              # river -> mouth of the watercourse\n  ?mouth wdt:P361* ?sea .               # mouth is part of a larger sea system\n  ?sea wdt:P31 wd:Q165 .                # sea (instance of sea)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Baltic Sea"
    },
    {
        "Question": "Which municipality contains the village after which the chemical element terbium is named?",
        "SPARQL": "SELECT ?AnswerLabel WHERE {\n  wd:Q183473 wdt:P138 ?eponym .            # Terbium named after -> eponym (Ytterby)\n  ?eponym wdt:P131 ?Answer .               # eponym located in -> municipality\n  ?Answer wdt:P31 wd:Q15284 .              # ensure it's a municipality of Sweden\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Vaxholm Municipality"
    },
    {
        "Question": "What writing system is used by the official language of the country where the painter Martiros Saryan died?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?writingSystemLabel WHERE {\n  ?person rdfs:label \"Martiros Saryan\"@en.\n  ?person wdt:P20 ?placeOfDeath.\n  ?placeOfDeath wdt:P17 ?country.\n  ?country wdt:P37 ?officialLanguage.\n  ?officialLanguage wdt:P282 ?writingSystem.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Armenian alphabet"
    },
    {
        "Question": "What is the capital city of the country in which the club that won the 2010 Copa Sudamericana is based?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  ?season rdfs:label \"2010 Copa Sudamericana\"@en.\n  ?season wdt:P1346 ?club.\n  ?club (wdt:P17|wdt:P131/wdt:P17) ?country.\n  ?country wdt:P36 ?capital.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}",
        "Answer": "Buenos Aires"
    },
    {
        "Question": "What writing system is used by the official language of the country of citizenship of the composer of Bhutan's national anthem?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q917 wdt:P85 ?anthem .        # Bhutan -> anthem\n  ?anthem wdt:P86 ?composer .       # anthem -> composer\n  ?composer wdt:P27 ?country .      # composer -> country of citizenship\n  ?country wdt:P37 ?language .      # country -> official language\n  ?language wdt:P282 ?script .      # language -> writing system used\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Tibetan script"
    },
    {
        "Question": "What is the capital city of the country where the person after whom the Sorolla Museum is named was born?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT ?capitalLabel WHERE {\n  VALUES ?name { \"Sorolla Museum\"@en \"Museo Sorolla\"@es }\n  ?museum rdfs:label ?name ;\n          wdt:P31/wdt:P279* wd:Q33506 ;\n          wdt:P138 ?person .\n  ?person wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Madrid"
    },
    {
        "Question": "Which ocean does the body of water next to the capital of the country that hosts the headquarters of the International Council for the Exploration of the Sea (ICES) ultimately belong to?",
        "SPARQL": "SELECT DISTINCT ?oceanLabel WHERE {\n  wd:Q151297 wdt:P159 ?hq .\n  ?hq wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  ?capital wdt:P206 ?water .\n  ?water (wdt:P361)+ ?ocean .\n  ?ocean wdt:P31/wdt:P279* wd:Q9430 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Atlantic Ocean"
    },
    {
        "Question": "What mountain range contains the highest point of the European Union member state whose capital is Ljubljana?",
        "SPARQL": "SELECT DISTINCT ?rangeLabel WHERE { ?country wdt:P36 wd:Q437; wdt:P463 wd:Q458; wdt:P610 ?peak. ?peak wdt:P4552 ?range. ?range wdt:P31/wdt:P279* wd:Q46831. SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } }",
        "Answer": "Julian Alps"
    },
    {
        "Question": "What is the capital city of the Italian region whose highest point is a volcano?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  ?region wdt:P31 wd:Q16110;           # region of Italy\n          wdt:P610 ?peak;               # highest point\n          wdt:P36 ?capital.             # capital\n  ?peak wdt:P31/wdt:P279* wd:Q8072.     # peak is (a subclass of) volcano\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Palermo"
    },
    {
        "Question": "Which writing system is used by the official language of the country that contains the highest-elevation volcano in Central America?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  {\n    SELECT ?country WHERE {\n      VALUES ?country { wd:Q242 wd:Q800 wd:Q792 wd:Q774 wd:Q783 wd:Q811 wd:Q804 }\n      ?volcano wdt:P31/wdt:P279* wd:Q8072;\n               wdt:P17 ?country;\n               wdt:P2044 ?elev.\n    }\n    ORDER BY DESC(?elev)\n    LIMIT 1\n  }\n  ?country wdt:P37 ?language.\n  ?language wdt:P282 ?script.\n  ?script wdt:P279* wd:Q9779.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin alphabet"
    },
    {
        "Question": "Which city is the headquarters location of the organization that presents the Right Livelihood Award received by physician Monika Hauser?",
        "SPARQL": "SELECT ?AnswerLabel WHERE {\n  ?person rdfs:label \"Monika Hauser\"@en.\n  ?person wdt:P166 ?award.\n  ?award rdfs:label \"Right Livelihood Award\"@en.\n  ?award wdt:P1027 ?org.\n  ?org wdt:P159 ?Answer.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Stockholm"
    },
    {
        "Question": "What writing system is used for the official language of the country where the discoverer of the chemical element terbium died?",
        "SPARQL": "SELECT DISTINCT ?Answer WHERE {\n  wd:Q111 wdt:P61 ?discoverer .\n  ?discoverer wdt:P20 ?deathPlace .\n  ?deathPlace wdt:P17 ?country .\n  ?country wdt:P37 ?language .\n  ?language wdt:P282 ?writingSystem .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n  BIND(?writingSystemLabel AS ?Answer)\n}",
        "Answer": "Latin alphabet"
    },
    {
        "Question": "Which mountain range contains the highest point of the country where the composer of the national anthem of Tanzania was born?",
        "SPARQL": "SELECT DISTINCT ?mountainRangeLabel WHERE {\n  wd:Q924 wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  ?composer wdt:P19 ?birthplace .\n  {\n    ?birthplace wdt:P17 ?birthCountry .\n  } UNION {\n    ?birthplace wdt:P131* ?admin .\n    ?admin wdt:P17 ?birthCountry .\n  }\n  ?birthCountry wdt:P610 ?highestPoint .\n  ?highestPoint wdt:P4552 ?mountainRange .\n  ?mountainRange wdt:P31/wdt:P279* wd:Q46831 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Drakensberg"
    },
    {
        "Question": "Which currency is used by the country whose capital city is located on the island of Guadalcanal?",
        "SPARQL": "SELECT DISTINCT ?currencyLabel WHERE {\n  ?island wdt:P31/wdt:P279* wd:Q23442;  \n          rdfs:label \"Guadalcanal\"@en.\n  ?country wdt:P31 wd:Q6256;           \n           wdt:P36 ?capital;           \n           wdt:P38 ?currency.          \n  ?capital wdt:P706 ?island.           \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Solomon Islands dollar"
    },
    {
        "Question": "What writing system is used by the official language of the country where the Bank of Albania is headquartered?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?org rdfs:label \"Bank of Albania\"@en.\n  ?org wdt:P159 ?hq .              # headquarters location (city)\n  ?hq wdt:P17 ?country .            # country of that city\n  ?country wdt:P37 ?lang .          # official language of the country\n  ?lang wdt:P282 ?script .          # writing system of that language\n  ?script wdt:P279* wd:Q8229 .      # restrict to Latin script or its subclasses\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What writing system is used by the official language of Bhutan that is also a language of the Constitution of Bhutan?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?scriptLabel WHERE {\n  BIND(wd:Q917 AS ?country)\n  ?constitution wdt:P1001 ?country;\n                rdfs:label ?label;\n                wdt:P407 ?lang.\n  FILTER(LANG(?label) = \"en\" && CONTAINS(LCASE(STR(?label)), \"constitution\"))\n  ?country wdt:P37 ?lang.\n  ?lang wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Tibetan script"
    },
    {
        "Question": "What is the native language of the author of the novel that the Romanian film based on 'Baltagul' is adapted from?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT ?languageLabel WHERE {\n  ?novel wdt:P31 wd:Q8261;               # instance of novel\n         rdfs:label \"Baltagul\"@ro;      # the novel 'Baltagul'\n         wdt:P50 ?author.                # author of the novel\n  ?film wdt:P31 wd:Q11424;               # instance of film\n        wdt:P144 ?novel;                 # based on the novel\n        wdt:P495 wd:Q218.                # country of origin Romania\n  ?author wdt:P103 ?language.            # author's native language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Romanian"
    },
    {
        "Question": "What is the IATA code of the airport named after the lyricist of the national anthem of Colombia?",
        "SPARQL": "SELECT DISTINCT ?iata WHERE {\n  wd:Q739 wdt:P85 ?anthem .\n  ?anthem wdt:P676 ?lyricist .\n  ?airport wdt:P138 ?lyricist ;\n           wdt:P238 ?iata .\n}",
        "Answer": "CTG"
    },
    {
        "Question": "Which sea does the river ultimately flow into that the city hosting the university named after the poet Taras Shevchenko is located next to?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?seaLabel WHERE {\n  # University named after the poet Taras Shevchenko, located in Kyiv\n  ?univ wdt:P31/wdt:P279* wd:Q3918 ;\n        wdt:P138 wd:Q46940 ;\n        wdt:P131 wd:Q1899 .\n\n  # City (Kyiv) located next to a river\n  wd:Q1899 wdt:P206 ?river .\n  ?river wdt:P31/wdt:P279* wd:Q4022 .\n\n  # From the river, traverse to its mouth and up the part-of chain to a sea\n  ?river wdt:P403 ?mouth .\n  ?mouth (wdt:P361*) ?sea .\n  ?sea wdt:P31/wdt:P279* wd:Q165 .\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Black Sea"
    },
    {
        "Question": "Which city was the composer of Estonia’s national anthem born in?",
        "SPARQL": "SELECT DISTINCT ?answerLabel WHERE {\n  wd:Q191 wdt:P85 ?anthem .        # Estonia -> anthem\n  ?anthem wdt:P86 ?composer .       # anthem -> composer\n  ?composer wdt:P19 ?answer .       # composer -> place of birth (city)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Hamburg"
    },
    {
        "Question": "Which body of water does the river ultimately drain into that flows through the capital of Armenia?",
        "SPARQL": "SELECT DISTINCT ?terminalLabel WHERE {\n  ?country wdt:P31 wd:Q6256;\n           rdfs:label \"Armenia\"@en;\n           wdt:P36 ?capital.\n  ?capital wdt:P206 ?river.\n  ?river wdt:P31/wdt:P279* wd:Q4022.\n  ?river wdt:P403+ ?terminal.\n  FILTER NOT EXISTS { ?terminal wdt:P403 ?another. }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Caspian Sea"
    },
    {
        "Question": "Which script is used by the official language of the country whose top-level Internet domain is \".am\"?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX p: <http://www.wikidata.org/prop/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\n\nSELECT ?scriptLabel WHERE {\n  ?country wdt:P78 \".am\".\n  ?country wdt:P37 ?language.\n  ?language p:P282 ?st.\n  ?st wikibase:rank wikibase:PreferredRank.\n  ?st ps:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Armenian alphabet"
    },
    {
        "Question": "Which writing system is used by the official language of the country of citizenship of the architect of Hallgrímskirkja?",
        "SPARQL": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?scriptLabel WHERE {\n  ?building rdfs:label \"Hallgrímskirkja\"@en.\n  ?building wdt:P84 ?architect.\n  ?architect wdt:P27 ?country.\n  ?country wdt:P37 ?language.\n  ?language wdt:P282 ?script.\n  FILTER NOT EXISTS { ?script (wdt:P279|wdt:P31)/wdt:P279* wd:Q49660. }  # exclude Braille variants\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which official language is spoken in the country where the composer of the opera \"Abesalom and Eteri\" was born?",
        "SPARQL": "SELECT DISTINCT ?languageLabel WHERE {\n  wd:Q332330 wdt:P86 ?composer .\n  ?composer wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P37 ?language .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Georgian"
    },
    {
        "Question": "What country is the composer of the film adaptation of the novel 'The Dark Is Rising' a citizen of?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?countryLabel WHERE {\n  ?novel wdt:P31 wd:Q8261 ;\n         rdfs:label \"The Dark Is Rising\"@en .\n  ?film wdt:P144 ?novel ;\n        wdt:P31/wdt:P279* wd:Q11424 ;\n        wdt:P86 ?composer .\n  ?composer wdt:P27 ?country .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Canada"
    },
    {
        "Question": "What is the capital city of the country where the composer of Namibia's national anthem was born?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  wd:Q1030 wdt:P85 ?anthem.                # Namibia -> anthem\n  ?anthem wdt:P86 ?composer.               # anthem -> composer\n  ?composer wdt:P19 ?birthplace.           # composer -> birthplace\n  ?birthplace wdt:P17 ?birth_country.      # birthplace -> country\n  ?birth_country wdt:P36 ?capital.         # country -> capital\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Windhoek"
    },
    {
        "Question": "Which writing system is used by the official language(s) of the country whose highest point is Galdhøpiggen?",
        "SPARQL": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?scriptLabel WHERE {\n  ?mountain rdfs:label \"Galdhøpiggen\"@en.\n  ?country wdt:P610 ?mountain.\n  ?country wdt:P37 ?language.\n  ?language wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin alphabet"
    },
    {
        "Question": "What is the IUCN conservation status of the type species of the plant genus named after the founder of Singapore?",
        "SPARQL": "SELECT DISTINCT ?statusLabel WHERE {\n  wd:Q334 wdt:P112 ?founder .            # Singapore -> founded by -> person (Stamford Raffles)\n  ?genus wdt:P31 wd:Q16521 ;              # genus is a taxon\n         wdt:P105 wd:Q34740 ;             # taxon rank = genus\n         wdt:P138 ?founder ;              # named after that founder\n         wdt:P427 ?typeSpecies .          # type species of the genus\n  ?typeSpecies wdt:P141 ?status .         # IUCN conservation status of the type species\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "Answer": "endangered species"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the São Paulo Museum of Art (designed by Lina Bo Bardi) is located?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  VALUES ?museum { wd:Q200053 }  # São Paulo Museum of Art\n  ?museum wdt:P84 wd:Q311751;     # architect Lina Bo Bardi\n          wdt:P17 ?country.       # country of the museum\n  ?country wdt:P37 ?lang.         # official language of that country\n  ?lang wdt:P282 ?script.         # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which mountain range contains the highest peak of the country where the 2009 Nobel Prize in Literature laureate was born?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX p: <http://www.wikidata.org/prop/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX pq: <http://www.wikidata.org/prop/qualifier/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?rangeLabel WHERE {\n  # Find the 2009 Nobel Prize in Literature laureate\n  ?laureate p:P166 ?awardStmt.\n  ?awardStmt ps:P166 wd:Q37922 ;\n             pq:P585 ?date.\n  FILTER(YEAR(?date) = 2009)\n\n  # Country where the laureate was born\n  ?laureate wdt:P19 ?birthplace.\n  ?birthplace (wdt:P17|wdt:P131*) ?country.\n  ?country wdt:P31 wd:Q6256.\n\n  # Country's highest point and its mountain range\n  ?country wdt:P610 ?peak.\n  ?peak wdt:P4552 ?range.\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Făgăraș Mountains"
    },
    {
        "Question": "Which country is the birthplace of the architect who designed the parliament building located in Helsinki for the country whose national anthem was composed by the composer of the opera 'Kung Karls jakt'?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?AnswerLabel WHERE {\n  VALUES ?opera { wd:Q1776337 }  # \"Kung Karls jakt\"\n  ?opera wdt:P86 ?composer.\n  ?country wdt:P85 ?anthem.\n  ?anthem wdt:P86 ?composer.\n\n  ?country wdt:P194 ?legislature.\n  ?building wdt:P466 ?legislature.\n  ?building wdt:P131 wd:Q1757.        # located in Helsinki\n\n  ?building wdt:P84 ?architect.\n  ?architect wdt:P19 ?birthplace.\n  ?birthplace wdt:P17 ?Answer.\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Finland"
    },
    {
        "Question": "Which Nobel Prize in Physiology or Medicine laureate studied under a Nobel Prize in Chemistry laureate who worked at ETH Zurich?",
        "SPARQL": "SELECT DISTINCT ?studentLabel WHERE {\n  ?student wdt:P166 wd:Q80061 .            # Nobel Prize in Physiology or Medicine\n  ?student wdt:P1066 ?teacher .            # student of\n  ?teacher wdt:P166 wd:Q44585 .            # Nobel Prize in Chemistry\n  ?teacher wdt:P108 wd:Q153978 .           # employer: ETH Zurich\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Har Gobind Khorana"
    },
    {
        "Question": "Which physician is the eponym of the genus that includes the causative agents of leishmaniasis, a neglected tropical disease?",
        "SPARQL": "SELECT DISTINCT ?personLabel WHERE {\n  wd:Q370551 wdt:P361 wd:Q35805.            # leishmaniasis is part of neglected tropical diseases\n  wd:Q370551 wdt:P828 ?agent.               # causative agent of leishmaniasis\n  ?agent wdt:P171* ?genus.                  # climb taxonomic tree to its genus\n  ?genus wdt:P105 wd:Q34740.                # taxon rank = genus\n  ?genus wdt:P138 ?person.                  # genus named after person\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "Answer": "William Boog Leishman"
    },
    {
        "Question": "Which writing system is used by the original language of the novel that the 2019 film \"The Painted Bird\" is based on?",
        "SPARQL": "SELECT ?scriptLabel WHERE {\n  ?film wdt:P31 wd:Q11424;                # film\n        rdfs:label \"The Painted Bird\"@en; # 2019 film title\n        wdt:P144 ?novel.                  # based on -> novel\n  ?novel wdt:P407 ?lang.                  # original language of work\n  ?lang  wdt:P282 ?script.                # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the native language of the lyricist of the national anthem of Botswana?",
        "SPARQL": "SELECT DISTINCT ?languageLabel WHERE {\n  wd:Q963 wdt:P85 ?anthem .\n  ?anthem wdt:P676 ?lyricist .\n  ?lyricist wdt:P103 ?language .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Tswana"
    },
    {
        "Question": "Which writing system is used by the official language of the capital city of the country of citizenship of the director of the film 'Tropical Malady'?",
        "SPARQL": "SELECT DISTINCT ?writingSystemLabel WHERE {\n  wd:Q933652 wdt:P57 ?director.\n  ?director wdt:P27 ?country.\n  ?country wdt:P36 ?capital.\n  ?capital wdt:P37 ?language.\n  ?language wdt:P282 ?writingSystem.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Thai script"
    },
    {
        "Question": "What is the currency of the country that contains the birthplace of the 2022 Pritzker Architecture Prize laureate?",
        "SPARQL": "SELECT DISTINCT ?AnswerLabel WHERE {\n  {\n    wd:Q139167 p:P1346 ?winStmt .\n    ?winStmt ps:P1346 ?laureate ;\n             pq:P585 ?date .\n    FILTER(YEAR(?date) = 2022)\n  }\n  UNION\n  {\n    ?laureate p:P166 ?awardStmt .\n    ?awardStmt ps:P166 wd:Q139167 ;\n               pq:P585 ?date .\n    FILTER(YEAR(?date) = 2022)\n  }\n  ?laureate wdt:P19 ?birthplace .\n  ?birthplace (wdt:P17|wdt:P131*/wdt:P17) ?country .\n  ?country wdt:P38 ?Answer .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "West African CFA franc"
    },
    {
        "Question": "Which sea does the river ultimately flow into that runs through the capital of the country where the composer of Serbia’s national anthem was born?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?seaLabel WHERE {\n  # Start from Serbia and its anthem\n  wd:Q403 wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  \n  # Composer's birthplace -> its country -> that country's capital\n  ?composer wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?birthCountry .\n  ?birthCountry wdt:P36 ?capital .\n\n  # Capital is located next to a body of water (e.g., river)\n  ?capital wdt:P206 ?river .\n\n  # Follow the river's mouth-of chain to the terminal body of water\n  ?river wdt:P403+ ?sea .\n  FILTER NOT EXISTS { ?sea wdt:P403 ?_next }  # terminal body (no further mouth)\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Black Sea"
    },
    {
        "Question": "What writing system is used by the official language of the country where the first female recipient of the Nobel Prize in Literature was born?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX p: <http://www.wikidata.org/prop/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX pq: <http://www.wikidata.org/prop/qualifier/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?scriptLabel WHERE {\n  ?person wdt:P21 wd:Q6581072.                         # female\n  ?person p:P166 ?awardStmt.\n  ?awardStmt ps:P166 wd:Q37922.                         # Nobel Prize in Literature\n  ?awardStmt pq:P585 ?date.                             # award date\n  ?person wdt:P19 ?birthPlace.                          # place of birth\n  ?birthPlace wdt:P131* ?country.\n  ?country wdt:P31/wdt:P279* wd:Q6256.                  # country\n  ?country wdt:P37 ?lang.                               # official language\n  ?lang wdt:P282 ?script.                               # writing system used\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?date\nLIMIT 1",
        "Answer": "Latin script"
    },
    {
        "Question": "Which mountain range contains the highest point of the country whose national legislature occupies a building designed by Imre Steindl?",
        "SPARQL": "SELECT DISTINCT ?rangeLabel WHERE {\n  # Find a building designed by Imre Steindl\n  ?building wdt:P84 wd:Q71959 .\n  # That building is occupied by a legislature\n  ?building wdt:P466 ?legislature .\n  ?legislature wdt:P31/wdt:P279* wd:Q11204 .  # instance/subclass of legislature\n  # Country of that legislature\n  ?legislature wdt:P17 ?country .\n  # Highest point of that country\n  ?country wdt:P610 ?highest .\n  # Mountain range of that highest point\n  ?highest wdt:P4552 ?range .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Mátra"
    },
    {
        "Question": "Which mountain is the highest point of the country of citizenship of the author whose novel the 2009 Argentine film 'The Secret in Their Eyes' is based on?",
        "SPARQL": "SELECT DISTINCT ?highestPointLabel WHERE {\n  ?film wdt:P31 wd:Q11424 ;\n        rdfs:label \"The Secret in Their Eyes\"@en ;\n        wdt:P495 wd:Q414 ;\n        wdt:P144 ?work .\n  ?work wdt:P50 ?author .\n  ?author wdt:P27 ?country .\n  ?country wdt:P610 ?highestPoint .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Aconcagua"
    },
    {
        "Question": "What is the ISO 639-1 code of the official language of the country of citizenship of the director of the film 'Uncle Boonmee Who Can Recall His Past Lives'?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?code WHERE {\n  ?film rdfs:label \"Uncle Boonmee Who Can Recall His Past Lives\"@en .\n  ?film wdt:P57 ?director .\n  ?director wdt:P27 ?country .\n  ?country wdt:P37 ?language .\n  ?language wdt:P218 ?code .\n}",
        "Answer": "th"
    },
    {
        "Question": "Which country is home to the university where the author of 'The Invention of Morel' studied?",
        "SPARQL": "SELECT DISTINCT ?countryLabel WHERE {\n  ?work rdfs:label \"The Invention of Morel\"@en ;\n        wdt:P31/wdt:P279* wd:Q8261 ;  # instance of/subclass of novel\n        wdt:P50 ?author .\n  ?author wdt:P69 ?university .        # educated at\n  ?university wdt:P17 ?country .       # country of the university\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Argentina"
    },
    {
        "Question": "Which Frankfurt School philosopher studied under a composer who was a student of the teacher of the inventor of the prepared piano?",
        "SPARQL": "SELECT DISTINCT ?philosopherLabel WHERE {\n  wd:Q237864 wdt:P61 ?inventor.             # prepared piano -> inventor (John Cage)\n  ?inventor wdt:P1066 ?teacher.              # inventor's teacher (e.g., Arnold Schoenberg)\n  ?composer wdt:P106 wd:Q36834;              # a composer\n            wdt:P1066 ?teacher.              # ...who was a student of that teacher\n  ?philosopher wdt:P135 wd:Q160003;          # Frankfurt School philosopher\n               wdt:P1066 ?composer.          # ...who studied under that composer\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Theodor W. Adorno"
    },
    {
        "Question": "Which university located in the capital of the Italian region where architect Carlo Scarpa was born employed him?",
        "SPARQL": "SELECT DISTINCT ?uniLabel WHERE {\n  VALUES ?person { wd:Q78051 }  # Carlo Scarpa\n  ?person wdt:P19 ?birthPlace.\n  ?birthPlace wdt:P131* ?region.\n  ?region wdt:P31/wdt:P279* wd:Q36784.  # region of Italy\n  ?region wdt:P36 ?capital.             # capital city of the region\n  ?uni wdt:P31/wdt:P279* wd:Q3918.      # university\n  { ?uni wdt:P131* ?capital. } UNION { ?uni wdt:P159 ?capital. }  # located in or HQ in the capital\n  ?person wdt:P108 ?uni.                # employer of Carlo Scarpa\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Iuav University of Venice"
    },
    {
        "Question": "What writing system is used by the official language of the country where a university attended by cytologist Theodor Boveri is located?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?writingSystemLabel WHERE {\n  ?person rdfs:label \"Theodor Boveri\"@en.\n  ?person wdt:P69 ?university.\n  ?university wdt:P17 ?country.\n  ?country wdt:P37 ?language.\n  ?language wdt:P282 ?writingSystem.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the time zone of the capital city of the country of citizenship of the composer of Tanzania's national anthem?",
        "SPARQL": "SELECT DISTINCT ?answerLabel WHERE {\n  wd:Q924 wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  ?composer wdt:P27 ?country .\n  ?country wdt:P36 ?capital .\n  ?capital wdt:P421 ?answer .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "South African Standard Time"
    },
    {
        "Question": "Which taxonomic order does the plant depicted on the flag of the country where the painter and writer Etel Adnan was born belong to?",
        "SPARQL": "SELECT DISTINCT ?orderLabel WHERE {\n  VALUES ?person { wd:Q318780 }  # Etel Adnan\n  ?person wdt:P19 ?birthplace.\n  ?birthplace wdt:P17 ?country.\n\n  # Find a flag that applies to that country\n  ?flag wdt:P31 wd:Q186516.\n  ?flag (wdt:P17|wdt:P1001) ?country.\n\n  # Plant depicted on the flag\n  ?flag wdt:P180 ?plant.\n  ?plant wdt:P31 wd:Q16521.  # instance of taxon\n\n  # Climb taxonomy to the rank 'order'\n  ?plant wdt:P171* ?order.\n  ?order wdt:P105 wd:Q36602.  # taxon rank = order\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Pinales"
    },
    {
        "Question": "Which composer is credited with composing both Tanzania’s and Zambia’s national anthems?",
        "SPARQL": "SELECT DISTINCT ?composerLabel WHERE {\n  wd:Q924 wdt:P85 ?anthemTZ .        # Tanzania -> its anthem\n  wd:Q953 wdt:P85 ?anthemZM .        # Zambia -> its anthem\n  ?anthemTZ wdt:P86 ?composer .      # anthem -> composer\n  ?anthemZM wdt:P86 ?composer .      # same composer for both anthems\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Enoch Sontonga"
    },
    {
        "Question": "Which architectural style characterizes the building that houses the national legislature of the country whose national football team won UEFA Euro 1992?",
        "SPARQL": "SELECT DISTINCT ?styleLabel WHERE {\n  wd:Q184492 wdt:P1346 ?team .              # UEFA Euro 1992 winner -> team\n  ?team wdt:P1532|wdt:P17 ?country .        # team -> country (country for sport or country)\n  ?country wdt:P194 ?legislature .          # country -> its legislative body\n  ?building wdt:P466 ?legislature .         # building occupied by that legislature\n  ?building wdt:P149 ?style .               # building -> architectural style\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Neo-baroque architecture"
    },
    {
        "Question": "Into which sea does the river that the city of Zaragoza is located on empty?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?answerLabel WHERE {\n  ?city rdfs:label \"Zaragoza\"@en ;\n        wdt:P31/wdt:P279* wd:Q515 ;        # instance of (subclass of) city\n        wdt:P206 ?river .                   # located on body of water (river)\n\n  ?river wdt:P31/wdt:P279* wd:Q4022 ;       # river\n         wdt:P403 ?answer .                 # mouth of the watercourse\n\n  ?answer wdt:P31/wdt:P279* wd:Q165 .       # ensure the mouth is a sea\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Mediterranean Sea"
    },
    {
        "Question": "Which mountain range does the highest mountain of the country of citizenship of the author of \"The Summer Book\" belong to?",
        "SPARQL": "SELECT ?rangeLabel WHERE {\n  wd:Q677539 wdt:P50 ?author .\n  ?author wdt:P27 ?country .\n  ?country wdt:P610 ?highestMountain .\n  ?highestMountain wdt:P4552 ?range .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Scandinavian Mountains"
    },
    {
        "Question": "Which mountain range contains the highest point of the country whose citizen authored the novel \"The City & the City\"?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?rangeLabel WHERE {\n  ?novel rdfs:label \"The City & the City\"@en ;\n         wdt:P31 wd:Q8261 ;        # instance of: novel\n         wdt:P50 ?author .         # author\n  ?author wdt:P27 ?country .       # country of citizenship\n  ?country wdt:P610 ?highest .     # highest point of the country\n  ?highest wdt:P4552 ?range .      # mountain range of that highest point\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
        "Answer": "Grampian Mountains"
    },
    {
        "Question": "What writing system is used for the official language of the Swiss canton that contains the burial place of the author of the novel 'The Glass Bead Game'?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?work wdt:P31 wd:Q8261;              # instance of novel\n        rdfs:label \"The Glass Bead Game\"@en;  # the novel\n        wdt:P50 ?author.                # its author\n  ?author wdt:P119 ?cemetery.           # author's place of burial\n  ?cemetery wdt:P131* ?canton.          # within some administrative entity\n  ?canton wdt:P31 wd:Q23058;            # that is a canton of Switzerland\n          wdt:P37 ?language.            # canton’s official language\n  ?language wdt:P282 ?script.           # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the currency of the country where the university attended by Nobel Prize–winning author Svetlana Alexievich is located?",
        "SPARQL": "SELECT DISTINCT ?currencyLabel WHERE {\n  wd:Q68231 wdt:P69 ?uni .\n  ?uni wdt:P31/wdt:P279* wd:Q3918 .\n  ?uni (wdt:P17|wdt:P131/wdt:P17) ?country .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Belarusian ruble"
    },
    {
        "Question": "Which writing system is used by the official language of the country represented by the winner of the 2014 Caribbean Cup?",
        "SPARQL": "SELECT DISTINCT ?answerLabel WHERE {\n  ?event rdfs:label \"2014 Caribbean Cup\"@en.\n  ?event wdt:P1346 ?winner.\n  ?winner (wdt:P1532|wdt:P17) ?country.\n  ?country wdt:P37 ?lang.\n  ?lang wdt:P282 ?answer.\n  # Keep alphabetic scripts (avoid Braille, etc.)\n  ?answer wdt:P279* wd:Q44149.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the currency used by the country where the headquarters of the Mekong River Commission are located?",
        "SPARQL": "SELECT DISTINCT ?currencyLabel WHERE {\n  ?org rdfs:label \"Mekong River Commission\"@en .\n  ?org wdt:P159 ?hq .\n  ?hq wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Lao kip"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the composer of the anthem of Tatarstan was born?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?scriptLabel WHERE {\n  VALUES ?name { \"Tatarstan\"@en \"Republic of Tatarstan\"@en }\n  ?region rdfs:label ?name.\n  ?region wdt:P85 ?anthem.\n  ?anthem wdt:P86 ?composer.\n  ?composer wdt:P19 ?birthplace.\n  ?birthplace wdt:P17 ?country.\n  ?country wdt:P37 ?officialLang.\n  ?officialLang wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nLIMIT 1",
        "Answer": "Cyrillic script"
    },
    {
        "Question": "What is the IATA code of the airport that serves as a hub for the airline headquartered in the capital of the autonomous community where Joaquín Sorolla was born?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT DISTINCT ?Answer WHERE {\n  VALUES ?person { wd:Q313912 }  # Joaquín Sorolla\n  ?person wdt:P19 ?birthplace.\n  ?birthplace wdt:P1376 ?autonomousCommunity.\n  ?autonomousCommunity wdt:P31 wd:Q10864048.\n  ?airline wdt:P31 wd:Q46970;\n           wdt:P159 ?birthplace;\n           wdt:P113 ?hubAirport.\n  ?hubAirport wdt:P31/wdt:P279* wd:Q1248784;\n              wdt:P131* ?autonomousCommunity;\n              wdt:P238 ?Answer.\n}",
        "Answer": "VLC"
    },
    {
        "Question": "What writing system is used by the official language of the country whose national flag depicts an AK-47 assault rifle?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?flag wdt:P180 wd:Q35724 .            # flag depicts AK-47\n  ?country wdt:P41 ?flag .               # country has this flag\n  ?country wdt:P37 ?lang .               # official language of the country\n  ?lang wdt:P282 ?script .               # writing system of that language\n  ?script wdt:P279* wd:Q9779 .           # restrict to alphabets (exclude Braille, etc.)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the native language of the composer of the national anthem of the country whose capital is located on both the Danube and the Sava rivers?",
        "SPARQL": "SELECT DISTINCT ?langLabel WHERE {\n  ?country wdt:P36 ?capital .\n  ?capital wdt:P206 wd:Q1653, wd:Q3711 .\n  ?country wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  ?composer wdt:P103 ?lang .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Slovene"
    },
    {
        "Question": "Which Italian region contains the UNESCO World Heritage Site that includes a chapel housing frescoes painted by Giotto?",
        "SPARQL": "SELECT DISTINCT ?regionLabel WHERE {\n  ?work wdt:P170 wd:Q5599 ;           # work by Giotto\n        wdt:P276 ?chapel .            # located in a chapel\n  ?chapel wdt:P31/wdt:P279* wd:Q108325 ;  # chapel (instance/subclass)\n          wdt:P361 ?whs ;             # chapel is part of a WHS\n          wdt:P131* ?region .         # get its region via administrative chain\n  ?whs wdt:P1435 wd:Q9259 .           # UNESCO World Heritage Site\n  ?region wdt:P31/wdt:P279* wd:Q36784 .   # region of Italy\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Veneto"
    },
    {
        "Question": "What is the original language of the literary work that the opera 'Káťa Kabanová' is based on?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\nSELECT ?languageLabel WHERE {\n  ?opera wdt:P31 wd:Q1344 ;\n         rdfs:label \"Káťa Kabanová\"@en ;\n         wdt:P144 ?work .\n  ?work wdt:P364 ?language .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Russian"
    },
    {
        "Question": "What is the capital city of the country where the architect who designed Sancaklar Mosque was born?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  ?building rdfs:label \"Sancaklar Mosque\"@en.\n  ?building wdt:P84 ?architect.\n  ?architect wdt:P19 ?birthplace.\n  ?birthplace wdt:P17 ?country.\n  ?country wdt:P36 ?capital.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Ankara"
    },
    {
        "Question": "Which writing system is used by the official language of the country where chess grandmaster Levon Aronian was born?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?person rdfs:label \"Levon Aronian\"@en ;\n          wdt:P31 wd:Q5 ;\n          wdt:P19 ?birthPlace .\n  ?birthPlace wdt:P17 ?country .\n  ?country wdt:P37 ?officialLang .\n  ?officialLang wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Armenian alphabet"
    },
    {
        "Question": "Which writing system is used by at least one official language of the country of citizenship of the author of the novel 'The Egyptian'?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?work wdt:P31 wd:Q8261;                 # instance of novel\n        rdfs:label \"The Egyptian\"@en;    # the novel title\n        wdt:P50 ?author.                  # author of the novel\n  ?author wdt:P27 ?country.               # country of citizenship of the author\n  ?country wdt:P37 ?lang.                 # official language(s) of that country\n  ?lang wdt:P282 ?script.                 # writing system of the language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-2 country code of the country where the university attended by the inventor of Velcro is located?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT DISTINCT ?code WHERE {\n  wd:Q173472 wdt:P61 ?inventor .\n  ?inventor wdt:P69 ?uni .\n  ?uni wdt:P17 ?country .\n  ?country wdt:P297 ?code .\n}",
        "Answer": "CH"
    },
    {
        "Question": "Which city is the headquarters of the publisher that published 'Kristin Lavransdatter', the novel by the 1928 Nobel Prize in Literature laureate?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX p: <http://www.wikidata.org/prop/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX pq: <http://www.wikidata.org/prop/qualifier/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?cityLabel WHERE {\n  ?work wdt:P31 wd:Q8261;                     # instance of novel\n        rdfs:label \"Kristin Lavransdatter\"@en;\n        wdt:P50 ?author;                      # author\n        wdt:P123 ?publisher.                  # publisher\n  ?author p:P166 ?awardStmt.                  # award received (statement node)\n  ?awardStmt ps:P166 wd:Q37922;               # Nobel Prize in Literature\n             pq:P585 ?awardDate.              # point in time (year of award)\n  FILTER(YEAR(?awardDate) = 1928)\n  ?publisher wdt:P17 wd:Q20;                  # publisher in Norway\n             wdt:P159 ?city.                  # headquarters location\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Oslo"
    },
    {
        "Question": "What is the IATA airport code of the airport that serves the capital city of the country whose currency has ISO 4217 code \"GEL\"?",
        "SPARQL": "SELECT DISTINCT ?iata WHERE {\n  ?country wdt:P38 ?currency .\n  ?currency wdt:P498 \"GEL\" .\n  ?country wdt:P36 ?capital .\n  ?airport wdt:P931 ?capital .\n  ?airport wdt:P238 ?iata .\n}",
        "Answer": "TBS"
    },
    {
        "Question": "What is the country of citizenship of the author whose literary work the Palme d'Or-winning film 'The Ballad of Narayama' was based on?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?countryLabel WHERE {\n  ?film wdt:P166 wd:Q131072;        # film that received the Palme d'Or\n        wdt:P144 ?work.             # based on a work\n  ?film rdfs:label ?filmLabel.\n  FILTER(LANG(?filmLabel) = \"en\").\n  FILTER(CONTAINS(LCASE(STR(?filmLabel)), \"the ballad of narayama\")).\n  ?work wdt:P50 ?author.            # author of the work\n  ?author wdt:P27 ?country.         # author's country of citizenship\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Japan"
    },
    {
        "Question": "What is the IATA code of the airport that is named after the poet who wrote the lyrics of the national anthem of the country whose capital it serves?",
        "SPARQL": "SELECT DISTINCT ?iata WHERE {\n  ?airport wdt:P31 wd:Q62447;\n           wdt:P138 ?person;\n           wdt:P931 ?city;\n           wdt:P238 ?iata.\n  ?country wdt:P36 ?city;\n           wdt:P85 ?anthem.\n  ?anthem wdt:P676 ?person.\n  ?person wdt:P106 wd:Q49757.\n}",
        "Answer": "DKR"
    },
    {
        "Question": "What is the capital city of the country where the university is located that was attended by the author of the novel on which the 2018 film \"Annihilation\" is based?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?capitalLabel WHERE {\n  ?film wdt:P31 wd:Q11424 ;\n        rdfs:label \"Annihilation\"@en ;\n        wdt:P577 ?date ;\n        wdt:P144 ?work .\n  FILTER (YEAR(?date) = 2018)\n  ?work wdt:P50 ?author .\n  ?author wdt:P69 ?university .\n  ?university wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Washington, D.C."
    },
    {
        "Question": "Which river flows through the capital of the country where architect Eduardo Souto de Moura was born?",
        "SPARQL": "SELECT ?riverLabel WHERE {\n  wd:Q312716 wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  ?capital wdt:P206 ?river .\n  ?river wdt:P31/wdt:P279* wd:Q4022 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Tagus"
    },
    {
        "Question": "Which family does the plant genus named after the explorer who discovered Przewalski's horse belong to?",
        "SPARQL": "SELECT DISTINCT ?familyLabel WHERE {\n  ?horse rdfs:label \"Przewalski's horse\"@en.\n  ?horse wdt:P61 ?explorer.\n  ?genus wdt:P138 ?explorer ;\n         wdt:P105 wd:Q34740 ;       # taxon rank = genus\n         wdt:P171+ ?family .        # ascend taxonomy to find family\n  ?family wdt:P105 wd:Q35409 .      # taxon rank = family\n  # Ensure we're dealing with a plant genus (under kingdom Plantae)\n  ?genus wdt:P171+ wd:Q756 .        # Plantae\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "Answer": "Solanaceae"
    },
    {
        "Question": "What writing system is used by the official language of the country where Grigor Dimitrov was born?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?person rdfs:label \"Grigor Dimitrov\"@en;\n          wdt:P106 wd:Q10833314;      # occupation: tennis player\n          wdt:P19 ?birthplace.         # place of birth\n  ?birthplace wdt:P17 ?country.         # country of that birthplace\n  ?country wdt:P37 ?language.           # official language of the country\n  ?language wdt:P282 ?script.           # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Cyrillic script"
    },
    {
        "Question": "Which mountain range contains the highest point of the province that includes the birthplace of the Spanish philosopher María Zambrano?",
        "SPARQL": "SELECT DISTINCT ?rangeLabel WHERE {\n  ?person rdfs:label \"María Zambrano\"@en.\n  ?person wdt:P19 ?birthPlace.\n  ?birthPlace wdt:P131* ?province.\n  ?province wdt:P31/wdt:P279* wd:Q13220204.  # second-level administrative country subdivision\n  ?province wdt:P17 wd:Q29.                 # Spain\n  ?province wdt:P610 ?highest.              # highest point of the province\n  ?highest wdt:P4552 ?range.                # mountain range of that highest point\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Sierra de Tejeda"
    },
    {
        "Question": "What is the capital city of the country that contains the home stadium of the club that won the 2017–18 Eredivisie?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  ?season rdfs:label \"2017–18 Eredivisie\"@en.\n  ?season wdt:P1346 ?club.\n  ?club wdt:P115 ?stadium.\n  ?stadium wdt:P17 ?country.\n  ?country wdt:P36 ?capital.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n} LIMIT 1",
        "Answer": "Amsterdam"
    },
    {
        "Question": "Which country is the birthplace of the composer of the national anthem of Estonia?",
        "SPARQL": "SELECT DISTINCT ?countryLabel WHERE {\n  wd:Q191 wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  ?composer wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Germany"
    },
    {
        "Question": "Which architects designed UNESCO World Heritage buildings that are located in the city which hosted the 1992 Summer Olympics?",
        "SPARQL": "SELECT (GROUP_CONCAT(DISTINCT ?architectLabel; separator=\", \") AS ?Answer) WHERE {\n  wd:Q8478 wdt:P276 ?hostCity .\n  ?building wdt:P1435 wd:Q9259 ;\n            wdt:P131 ?hostCity ;\n            wdt:P84 ?architect .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Antoni Gaudí, Lluís Domènech i Montaner"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the headquarters of the International Seabed Authority are located?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?org rdfs:label \"International Seabed Authority\"@en.\n  ?org wdt:P159 ?hqCity.\n  ?hqCity wdt:P17 ?country.\n  ?country wdt:P37 ?lang.\n  ?lang wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the ISO 4217 currency code of the currency used in the country where the inventor of the modern three-point seat belt, Nils Bohlin, was born?",
        "SPARQL": "SELECT ?iso WHERE {\n  wd:Q134112 wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  ?currency wdt:P498 ?iso .\n}",
        "Answer": "SEK"
    },
    {
        "Question": "Which sea does the river empty into that runs through the capital of a region containing the birthplace of the composer Pauline Viardot?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?seaLabel WHERE {\n  ?composer rdfs:label \"Pauline Viardot\"@en.\n  ?composer wdt:P19 ?birthplace.\n  ?birthplace wdt:P131* ?region.\n  ?region wdt:P36 ?capital.\n  {\n    ?capital wdt:P206 ?river.\n  } UNION {\n    ?capital wdt:P706 ?river.\n  }\n  ?river wdt:P31/wdt:P279* wd:Q4022.\n  ?river wdt:P403/(wdt:P361*) ?sea.\n  ?sea wdt:P31/wdt:P279* wd:Q165.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "English Channel"
    },
    {
        "Question": "Which mountain range contains the highest point of the country whose capital is Vaduz?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT ?rangeLabel WHERE {\n  ?country wdt:P31 wd:Q6256 ;\n           wdt:P36 ?capital ;\n           wdt:P610 ?peak .\n  ?capital rdfs:label \"Vaduz\"@en .\n  ?peak wdt:P4552 ?range .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Rätikon"
    },
    {
        "Question": "What is the capital of the country of citizenship of the author whose novel was the basis for the film \"The Leopard\"?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  ?film wdt:P31 wd:Q11424;\n        rdfs:label \"The Leopard\"@en;\n        wdt:P144 ?work.\n  ?work wdt:P31 wd:Q8261;\n        wdt:P50 ?author.\n  ?author wdt:P27 ?country.\n  ?country wdt:P36 ?capital.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Rome"
    },
    {
        "Question": "What writing system is used by the official language of the country that contains the city where film director Otar Iosseliani was born?",
        "SPARQL": "SELECT ?scriptLabel WHERE {\n  wd:Q330549 wdt:P19 ?birthplace.\n  ?birthplace wdt:P17 ?country.\n  ?country wdt:P37 ?language.\n  ?language wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "Answer": "Georgian scripts"
    },
    {
        "Question": "Which writing system is used by the official language of the country where World Athletics is headquartered?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?org rdfs:label \"World Athletics\"@en ;\n       wdt:P31/wdt:P279* wd:Q4438121 ;  # sports governing body\n       wdt:P159 ?hq .                    # headquarters location\n  ?hq wdt:P17 ?country .                 # country of the HQ\n  ?country wdt:P37 ?lang .               # official language of that country\n  ?lang wdt:P282 ?script .               # writing system of that language\n  ?script wdt:P31/wdt:P279* wd:Q9779 .   # restrict to alphabets (filters out Braille, etc.)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the birth city of the author whose book the 2008 Palme d'Or-winning film was based on?",
        "SPARQL": "SELECT ?cityLabel WHERE {\n  wd:Q103360 p:P1346 ?stmt .\n  ?stmt ps:P1346 ?film ;\n        pq:P585 ?date .\n  FILTER(YEAR(?date) = 2008)\n  ?film wdt:P144 ?work .\n  ?work wdt:P50 ?author .\n  ?author wdt:P19 ?city .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Luçon"
    },
    {
        "Question": "What is the capital city of the country of citizenship of the author whose novel the 2023 Golden Lion-winning film is based on?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  # Find the film that received the Golden Lion with a 2023 date qualifier\n  ?film p:P166 ?awardStmt .\n  ?awardStmt ps:P166 wd:Q41490 ;\n             pq:P585 ?date .\n  FILTER(YEAR(?date) = 2023)\n  \n  # The film is based on a written work; get its author\n  ?film wdt:P144 ?work .\n  ?work wdt:P50 ?author .\n  \n  # Get the author's country of citizenship and that country's capital\n  ?author wdt:P27 ?country .\n  ?country wdt:P36 ?capital .\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "London"
    },
    {
        "Question": "What is the capital city of the country of the club that won the 2010 Copa Libertadores?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?capitalLabel WHERE {\n  ?event rdfs:label \"2010 Copa Libertadores\"@en .\n  ?event wdt:P1346 ?team .            # winner\n  ?team wdt:P17 ?country .            # team's country\n  ?country wdt:P36 ?capital .         # country's capital\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nLIMIT 1",
        "Answer": "Brasília"
    },
    {
        "Question": "What is the currency of the country that contains the birthplace of the composer of the opera 'Jenůfa'?",
        "SPARQL": "SELECT DISTINCT ?currencyLabel WHERE {\n  wd:Q1292038 wdt:P86 ?composer .\n  ?composer wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Czech koruna"
    },
    {
        "Question": "What is the official language of the country whose highest point is located within Teide National Park?",
        "SPARQL": "SELECT DISTINCT ?Answer WHERE {\n  ?peak wdt:P3018 wd:Q236451 .            # a peak located in Teide National Park\n  ?country wdt:P610 ?peak .                # that peak is the highest point of some country\n  ?country wdt:P37 ?lang .                 # the country's official language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n  BIND(?langLabel AS ?Answer)\n}",
        "Answer": "Spanish"
    },
    {
        "Question": "What writing system is used by the original language of the book on which the film that won the Golden Bear at the Berlin International Film Festival in 2008 is based?",
        "SPARQL": "SELECT ?scriptLabel WHERE {\n  wd:Q103360 p:P1346 ?winStmt.\n  ?winStmt ps:P1346 ?film;\n           pq:P585 ?date.\n  FILTER(YEAR(?date) = 2008)\n  ?film wdt:P31/wdt:P279* wd:Q11424;\n        wdt:P144 ?book.\n  ?book wdt:P364 ?lang.\n  ?lang wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which sea does the river that flows through the city where the company that developed the ARM11 microarchitecture is headquartered ultimately drain into?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  wd:Q1067224 wdt:P178 ?company .              # ARM11 microarchitecture -> developer (ARM Holdings)\n  ?company wdt:P159 ?city .                     # company -> headquarters location (Cambridge)\n  ?city wdt:P206 ?river .                       # city -> located in/next to body of water (River Cam)\n  ?river wdt:P31/wdt:P279* wd:Q4022 .           # ensure it's a river\n  ?river wdt:P403+ ?waterbody .                 # follow river's mouth-of chain (to Great Ouse, The Wash, ...)\n  ?waterbody (wdt:P361)* ?sea .                 # follow part-of chain to a sea\n  ?sea wdt:P31/wdt:P279* wd:Q165 .              # restrict to items that are seas\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "North Sea"
    },
    {
        "Question": "Which mountain range contains the highest point of the country whose currency has ISO 4217 code \"GEL\"?",
        "SPARQL": "SELECT DISTINCT ?rangeLabel WHERE {\n  ?country wdt:P38 ?currency .\n  ?currency wdt:P498 \"GEL\" .\n  ?country wdt:P610 ?hp .\n  ?hp wdt:P4552 ?range .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Greater Caucasus"
    },
    {
        "Question": "What is the capital city of the country where the airline with IATA code \"QR\" is based?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  ?airline wdt:P31 wd:Q46970;      # instance of airline\n           wdt:P229 \"QR\";         # IATA airline designator\n           wdt:P17 ?country.       # country of the airline\n  ?country wdt:P36 ?capital.        # capital of that country\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Doha"
    },
    {
        "Question": "Who composed the national anthem of the country whose capital city is the city where the university attended by Ettore Majorana is located?",
        "SPARQL": "SELECT DISTINCT ?composerLabel WHERE {\n  VALUES ?person { wd:Q133266 }  # Ettore Majorana\n  ?person wdt:P69 ?university.\n  ?university wdt:P131* ?city.\n  ?city wdt:P17 ?country.\n  ?country wdt:P36 ?city.\n  ?country wdt:P85 ?anthem.\n  ?anthem wdt:P86 ?composer.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Michele Novaro"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the highest point of the region that contains the city of Nuoro is located?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?city rdfs:label \"Nuoro\"@en ;\n        wdt:P31/wdt:P279* wd:Q515 ;\n        wdt:P131+ ?region .\n  ?region wdt:P610 ?hp .\n  ?hp wdt:P17 ?country .\n  ?country wdt:P37 ?language .\n  ?language wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which continent contains the country where the university that educated the architect of the Nakagin Capsule Tower is located?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?AnswerLabel WHERE {\n  ?building rdfs:label \"Nakagin Capsule Tower\"@en.\n  ?building wdt:P84 ?architect.\n  ?architect wdt:P69 ?university.\n  ?university wdt:P17 ?country.\n  ?country wdt:P30 ?Answer.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Asia"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the author of the epic poem \"The Knight in the Panther's Skin\" was born?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q1220287 wdt:P50 ?author.\n  ?author wdt:P19 ?birthplace.\n  ?birthplace wdt:P17 ?country.\n  ?country wdt:P37 ?lang.\n  ?lang wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Georgian scripts"
    },
    {
        "Question": "Which architectural style characterizes the building that serves as the headquarters of the national legislature of the country where poet Philippe Jaccottet was born?",
        "SPARQL": "SELECT DISTINCT ?styleLabel WHERE {\n  ?poet rdfs:label \"Philippe Jaccottet\"@en.\n  ?poet wdt:P19 ?birthplace.\n  ?birthplace wdt:P17 ?country.\n  ?country wdt:P194 ?legislature.\n  ?legislature wdt:P159 ?building.\n  ?building wdt:P149 ?style.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Neo-Renaissance architecture"
    },
    {
        "Question": "What is the currency of the country whose capital city hosted Expo 2017?",
        "SPARQL": "SELECT DISTINCT ?Answer WHERE {\n  ?expo rdfs:label \"Expo 2017\"@en ;\n        wdt:P276 ?city .\n  ?country wdt:P36 ?city ;\n           wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n  BIND(?currencyLabel AS ?Answer)\n}",
        "Answer": "Kazakhstani tenge"
    },
    {
        "Question": "What is the ISO 15924 code of the writing system used by the official language of the country where the author of the novel 'The Mystery of the Yellow Room' died?",
        "SPARQL": "SELECT DISTINCT ?code WHERE {\n  ?work rdfs:label \"The Mystery of the Yellow Room\"@en;\n        wdt:P31 wd:Q8261;            # instance of novel\n        wdt:P50 ?author.             # author\n  ?author wdt:P20 ?deathPlace.        # place of death\n  ?deathPlace wdt:P17 ?country.       # country of that place\n  ?country wdt:P37 ?lang.             # official language of that country\n  ?lang wdt:P282 ?script.             # writing system of the language\n  ?script wdt:P2620 ?code.            # ISO 15924 code of the script\n}",
        "Answer": "Latn"
    },
    {
        "Question": "Which writing system is used by the official language of the country where Sadegh Hedayat died?",
        "SPARQL": "SELECT DISTINCT ?writingSystemLabel WHERE {\n  ?person rdfs:label \"Sadegh Hedayat\"@en ;\n          wdt:P31 wd:Q5 ;\n          wdt:P20 ?placeOfDeath .\n  ?placeOfDeath wdt:P17 ?country .\n  ?country wdt:P37 ?officialLanguage .\n  ?officialLanguage wdt:P282 ?writingSystem .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the IATA code of the airport that serves the capital city of the country where the playwright of 'The Weir' was born?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT DISTINCT ?iata WHERE {\n  wd:Q774214 wdt:P50 ?author .             # The Weir -> author (Conor McPherson)\n  ?author wdt:P19 ?birthplace .             # author -> place of birth (Dublin)\n  ?birthplace wdt:P17 ?country .             # birthplace -> country (Ireland)\n  ?country wdt:P36 ?capital .                # country -> capital (Dublin)\n  ?airport wdt:P931 ?capital .               # airport serves the capital\n  ?airport wdt:P31/wdt:P279* wd:Q124878 .    # airport (or subclass, e.g., international airport)\n  ?airport wdt:P238 ?iata .                  # IATA code\n}",
        "Answer": "DUB"
    },
    {
        "Question": "What is the capital of the country with the smallest land area among those whose official language belongs to the Baltic languages family?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  ?family rdfs:label \"Baltic languages\"@en.\n  ?family wdt:P527 ?lang.\n  ?country wdt:P31 wd:Q6256;\n           wdt:P37 ?lang;\n           wdt:P2046 ?area;\n           wdt:P36 ?capital.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?area\nLIMIT 1",
        "Answer": "Riga"
    },
    {
        "Question": "What currency is used in the country whose national anthem was composed by Philip Gbeho?",
        "SPARQL": "SELECT DISTINCT ?currencyLabel WHERE {\n  ?person rdfs:label \"Philip Gbeho\"@en .\n  ?anthem wdt:P86 ?person .\n  ?country wdt:P85 ?anthem ;\n           wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Ghanaian cedi"
    },
    {
        "Question": "What is the capital city of the country that contains the birthplace of the author whose novel was the basis for the film 'Picnic at Hanging Rock'?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  wd:Q178073 wdt:P144 ?work .\n  ?work wdt:P31 wd:Q8261 ;\n        wdt:P50 ?author .\n  ?author wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Canberra"
    },
    {
        "Question": "Which sea does the river that flows through the capital of the country where the composer and painter Mikalojus Konstantinas Čiurlionis was born ultimately empty into?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  VALUES ?personLabel { \"Mikalojus Konstantinas Čiurlionis\"@en }\n  ?person rdfs:label ?personLabel.\n  ?person wdt:P19 ?birthplace.\n  ?birthplace wdt:P17 ?country.\n  ?country wdt:P36 ?capital.\n  ?capital wdt:P206 ?water.\n  ?water wdt:P31/wdt:P279* wd:Q4022.\n  ?water (wdt:P403|wdt:P177|wdt:P361)+ ?sea.\n  ?sea wdt:P31 wd:Q165.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Baltic Sea"
    },
    {
        "Question": "What writing system is used by the official language of the country where the film director Khyentse Norbu was born?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?person rdfs:label \"Khyentse Norbu\"@en.\n  ?person wdt:P19 ?birthPlace.\n  ?birthPlace (wdt:P17|wdt:P131*) ?country.\n  ?country wdt:P31/wdt:P279* wd:Q6256.\n  ?country wdt:P37 ?lang.\n  ?lang wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Tibetan script"
    },
    {
        "Question": "Which writing system is used by the official language of the Indian state where the Konark Sun Temple—depicted on an Indian banknote—is located?",
        "SPARQL": "PREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX p: <http://www.wikidata.org/prop/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\n\nSELECT DISTINCT ?scriptLabel WHERE {\n  # any banknote that depicts Konark Sun Temple\n  ?note wdt:P31/wdt:P279* wd:Q1064482;  # banknote\n        wdt:P180 wd:Q470807.            # depicts Konark Sun Temple\n  \n  # find the Indian state containing the temple\n  wd:Q470807 wdt:P131* ?state.\n  ?state wdt:P31 wd:Q1192722.           # state of India\n  \n  # preferred official language(s) of that state\n  ?state p:P37 ?langStmt.\n  ?langStmt wikibase:rank wikibase:PreferredRank;\n            ps:P37 ?lang.\n  \n  # writing system of that language\n  ?lang wdt:P282 ?script.\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Odia script"
    },
    {
        "Question": "Which composer wrote the national anthem of the country whose capital city lies on the Danube River and whose official language is Serbian?",
        "SPARQL": "SELECT DISTINCT ?composerLabel WHERE {\n  ?country wdt:P31 wd:Q6256 ;          # country\n           wdt:P37 wd:Q9299 ;          # official language: Serbian\n           wdt:P36 ?capital ;          # capital\n           wdt:P85 ?anthem .           # anthem\n  FILTER NOT EXISTS { ?country wdt:P576 ?end }  # exclude dissolved countries\n  ?capital wdt:P206 wd:Q165 .          # capital located next to Danube\n  ?anthem wdt:P86 ?composer .          # composer of the anthem\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Davorin Jenko"
    },
    {
        "Question": "Which currency is used in the country where the headquarters of the manufacturer of the aircraft PZL M-18 Dromader are located?",
        "SPARQL": "SELECT DISTINCT ?currencyLabel WHERE {\n  ?aircraft rdfs:label \"PZL M-18 Dromader\"@en ;\n            wdt:P176 ?manufacturer ;\n            wdt:P31/wdt:P279* wd:Q11436 .\n  ?manufacturer wdt:P159 ?hq .\n  ?hq wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Polish złoty"
    },
    {
        "Question": "What is the capital city of the country whose central bank is headquartered in the city where the composer of the national anthem of the United Arab Emirates was born?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  wd:Q878 wdt:P85 ?anthem .               # UAE -> its anthem\n  ?anthem wdt:P86 ?composer .              # anthem -> composer\n  ?composer wdt:P19 ?birthplace .          # composer -> place of birth (city)\n  ?country wdt:P1304 ?bank .               # country -> its central bank\n  ?bank wdt:P159 ?birthplace .             # central bank HQ located in that birthplace city\n  ?country wdt:P36 ?capital .              # country -> capital\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Cairo"
    },
    {
        "Question": "Which national park contains the highest mountain of the island where the botanist José de Viera y Clavijo was born?",
        "SPARQL": "SELECT DISTINCT ?parkLabel WHERE {\n  VALUES ?person { wd:Q908584 } .\n  ?person wdt:P19 ?birthplace .\n  ?birthplace wdt:P131* ?island .\n  ?island wdt:P31/wdt:P279* wd:Q23442 .  # island\n  ?island wdt:P610 ?highest .            # highest point of the island\n  ?highest wdt:P3018 ?park .             # mountain located in protected area\n  ?park wdt:P31/wdt:P279* wd:Q46169 .    # national park\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Teide National Park"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the headquarters of Transparency International are located?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?org rdfs:label \"Transparency International\"@en .\n  ?org wdt:P159 ?hq .\n  ?hq wdt:P17 ?country .\n  ?country wdt:P37 ?lang .\n  ?lang wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which mountain range contains the highest peak of the autonomous community in which the painter Remedios Varo was born?",
        "SPARQL": "SELECT DISTINCT ?rangeLabel WHERE {\n  ?person rdfs:label \"Remedios Varo\"@en.\n  ?person wdt:P19 ?birthplace.\n  ?birthplace wdt:P131* ?region.\n  ?region wdt:P31 wd:Q1193977.\n  ?region wdt:P610 ?peak.\n  ?peak wdt:P4552 ?range.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Pyrenees"
    },
    {
        "Question": "Who was the architect of the stadium that is the home venue of the football club that won the first edition of the UEFA Cup Winners' Cup?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?architectLabel WHERE {\n  {\n    SELECT ?winner WHERE {\n      ?comp rdfs:label \"UEFA Cup Winners' Cup\"@en.\n      { ?season wdt:P3450 ?comp. } UNION { ?season wdt:P361 ?comp. }\n      OPTIONAL { ?season wdt:P580 ?start. }\n      OPTIONAL { ?season wdt:P585 ?point. }\n      BIND(COALESCE(?start, ?point) AS ?date)\n      ?season wdt:P1346 ?winner.\n    }\n    ORDER BY ASC(?date)\n    LIMIT 1\n  }\n  ?winner wdt:P115 ?stadium.\n  ?stadium wdt:P84 ?architect.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Pier Luigi Nervi"
    },
    {
        "Question": "Who composed the national anthem of the country whose capital city is the birthplace of the author of the novel 'A Hero of Our Time'?",
        "SPARQL": "SELECT ?composer ?composerLabel WHERE {\n  wd:Q205810 wdt:P50 ?author .\n  ?author wdt:P19 ?birthplace .\n  ?country wdt:P36 ?birthplace .\n  ?country wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Alexander Vasilyevich Alexandrov"
    },
    {
        "Question": "What is the IATA code of the airport named after the director of the film \"La Dolce Vita\"?",
        "SPARQL": "SELECT ?iata WHERE {\n  ?film wdt:P31 wd:Q11424 ;\n        rdfs:label \"La Dolce Vita\"@en ;\n        wdt:P57 ?director .\n  ?airport wdt:P31/wdt:P279* wd:Q1248784 ;\n           wdt:P138 ?director ;\n           wdt:P238 ?iata .\n}",
        "Answer": "RMI"
    },
    {
        "Question": "What is the capital of the autonomous community where SD Eibar's home stadium is located?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  ?team rdfs:label \"SD Eibar\"@en.\n  ?team wdt:P115 ?stadium.\n  ?stadium wdt:P131* ?autonomousCommunity.\n  ?autonomousCommunity wdt:P31 wd:Q56061.\n  ?autonomousCommunity wdt:P36 ?capital.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Vitoria-Gasteiz"
    },
    {
        "Question": "Which metro line serves a metro station that is named after a Nobel Prize in Physiology or Medicine laureate who held Spanish citizenship?",
        "SPARQL": "SELECT DISTINCT ?lineLabel WHERE {\n  ?station wdt:P31 wd:Q928830;        # instance of metro station\n           wdt:P138 ?person;           # named after\n           wdt:P81 ?line.              # connecting line (served by)\n  ?person wdt:P166 wd:Q80061;          # award received: Nobel Prize in Physiology or Medicine\n          wdt:P27 wd:Q29.              # country of citizenship: Spain\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Line 12 (Madrid Metro)"
    },
    {
        "Question": "What writing system is used by the official language of the country where musician and writer Francis Bebey was born?",
        "SPARQL": "SELECT DISTINCT ?Answer WHERE {\n  ?person rdfs:label \"Francis Bebey\"@en;\n          wdt:P31 wd:Q5;\n          wdt:P19 ?birthPlace.\n  ?birthPlace wdt:P17 ?country.\n  ?country wdt:P37 ?officialLang.\n  ?officialLang wdt:P282 ?writingSystem.\n  ?writingSystem rdfs:label ?Answer.\n  FILTER(LANG(?Answer) = \"en\")\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Into which sea does the river that flows through the birthplace of poet Paul Celan ultimately empty?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  wd:Q57702 wdt:P19 ?birthplace .\n  ?birthplace wdt:P206 ?river .\n  ?river wdt:P31/wdt:P279* wd:Q4022 .\n  ?river (wdt:P403+/wdt:P361*) ?sea .\n  ?sea wdt:P31/wdt:P279* wd:Q165 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Black Sea"
    },
    {
        "Question": "What writing system is used by the official language of the country where the architect of the Salk Institute for Biological Studies was born?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q267128 wdt:P84 ?architect .            # Salk Institute -> architect\n  ?architect wdt:P19 ?birthplace .           # architect -> place of birth\n  ?birthplace wdt:P17 ?country .             # birthplace -> country\n  ?country wdt:P37 ?language .               # country -> official language\n  ?language wdt:P282 ?script .               # language -> writing system\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the ISO 639-1 code for the original language of the short story 'In a Grove', written by the author after whom a crater on Mercury is named?",
        "SPARQL": "SELECT DISTINCT ?code WHERE {\n  ?work rdfs:label \"In a Grove\"@en ;\n        wdt:P31 wd:Q49084 ;\n        wdt:P50 ?author ;\n        wdt:P364 ?lang .\n  ?lang wdt:P218 ?code .\n  ?crater wdt:P138 ?author ;\n          wdt:P31 wd:Q3863 ;\n          wdt:P376 wd:Q308 .\n}",
        "Answer": "ja"
    },
    {
        "Question": "What is the ISO 639-1 two-letter code for the official language of the country where the film school Abderrahmane Sissako attended is located?",
        "SPARQL": "SELECT DISTINCT ?code WHERE {\n  wd:Q316818 wdt:P69 ?school .\n  ?school wdt:P17 ?country .\n  ?country wdt:P37 ?lang .\n  ?lang wdt:P218 ?code .\n}",
        "Answer": "ru"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the headquarters of the International Olive Council is located?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q1941931 wdt:P159 ?hq .            # International Olive Council -> headquarters location\n  ?hq wdt:P17 ?country .                # HQ city -> country\n  ?country wdt:P37 ?language .          # country -> official language\n  ?language wdt:P282 ?script .          # language -> writing system\n  ?script (wdt:P31/wdt:P279*) wd:Q9779 .# restrict to instances/subclasses of alphabet to avoid Braille variants\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin alphabet"
    },
    {
        "Question": "What is the capital city of the country where a Zurich-based university attended by a creator of the programming language Oberon is located?",
        "SPARQL": "SELECT DISTINCT ?Answer WHERE {\n  wd:Q131013 (wdt:P170|wdt:P178) ?creator.\n  ?creator wdt:P69 ?univ.\n  ?univ wdt:P131 wd:Q72;\n        wdt:P17 ?country.\n  ?country wdt:P36 ?capital.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n  BIND(?capitalLabel AS ?Answer)\n}",
        "Answer": "Bern"
    },
    {
        "Question": "Which philosophical movement did the teacher of the author of the Enneads belong to?",
        "SPARQL": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\n\nSELECT DISTINCT ?movementLabel WHERE {\n  ?work wdt:P50 ?author ;\n        rdfs:label ?label .\n  FILTER(LANG(?label) = \"en\" && CONTAINS(LCASE(?label), \"enneads\"))\n  ?author wdt:P1066 ?teacher .        # author was a student of ?teacher\n  ?teacher wdt:P2578 ?movement .      # teacher's philosophical school or tradition\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Neoplatonism"
    },
    {
        "Question": "What is the official language of the country that contains the UNESCO World Heritage Site designed by Carlos Raúl Villanueva?",
        "SPARQL": "SELECT DISTINCT ?languageLabel WHERE {\n  ?architect rdfs:label \"Carlos Raúl Villanueva\"@en .\n  ?site wdt:P1435 wd:Q9259 ;       # UNESCO World Heritage Site\n        wdt:P84 ?architect ;        # architect\n        wdt:P17 ?country .          # country containing the site\n  ?country wdt:P37 ?language .       # official language of that country\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Spanish"
    },
    {
        "Question": "What is the writing system used by the official language of the country whose national airline has a hub at a capital-city airport named after a poet?",
        "SPARQL": "SELECT DISTINCT ?writingSystemLabel WHERE {\n  ?airline wdt:P31 wd:Q46970;           # airline\n           wdt:P113 ?airport;            # hub airport\n           wdt:P17 ?country.             # airline's country\n  ?airport wdt:P31 wd:Q1248784;          # instance of airport\n           wdt:P138 ?namesake;           # named after\n           wdt:P131 ?capital.            # located in\n  ?namesake wdt:P106 wd:Q49757.          # namesake is a poet\n  ?country wdt:P36 ?capital;             # that city is the country's capital\n           wdt:P37 ?language.            # official language of the country\n  ?language wdt:P282 ?writingSystem.     # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Georgian scripts"
    },
    {
        "Question": "In which constellation is the host star of the exoplanet HAT-P-26b located?",
        "SPARQL": "SELECT ?constellationLabel WHERE {\n  ?planet rdfs:label \"HAT-P-26b\"@en ;\n          wdt:P31 wd:Q44559 ;       # instance of exoplanet\n          wdt:P397 ?star .          # parent astronomical body (host star)\n  ?star wdt:P59 ?constellation .    # constellation of the star\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Virgo"
    },
    {
        "Question": "Which writing system is used by the official language(s) of the autonomous community where the painter Isidre Nonell died?",
        "SPARQL": "SELECT DISTINCT ?writingSystemLabel WHERE {\n  ?person rdfs:label \"Isidre Nonell\"@en.\n  ?person wdt:P20 ?deathPlace.\n  ?deathPlace wdt:P131* ?admin.\n  ?admin wdt:P31/wdt:P279* wd:Q1191410.  # autonomous community of Spain\n  ?admin wdt:P37 ?lang.\n  ?lang wdt:P282 ?writingSystem.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What track gauge is used by the metro system in the city where the author of the novel \"The Good Soldier Švejk\" was born?",
        "SPARQL": "SELECT DISTINCT ?gaugeLabel WHERE {\n  ?work rdfs:label \"The Good Soldier Švejk\"@en ;\n        wdt:P31 wd:Q8261 ;            # instance of: novel\n        wdt:P50 ?author .              # author of the work\n  ?author wdt:P19 ?birthplace .         # author's place of birth (city)\n  ?metro wdt:P31/wdt:P279* wd:Q5503 ;   # metro system (instance/subclass of rapid transit system)\n         wdt:P159 ?birthplace ;         # headquarters location = that city\n         wdt:P2853 ?gauge .             # track gauge\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "standard gauge"
    },
    {
        "Question": "What is the highest natural point of the country where Dada artist Hannah Höch was born?",
        "SPARQL": "SELECT DISTINCT ?peakLabel WHERE {\n  ?person rdfs:label \"Hannah Höch\"@en .\n  ?person wdt:P19/wdt:P17 ?country .\n  ?country wdt:P610 ?peak .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Zugspitze"
    },
    {
        "Question": "Into which sea does the river that flows through the capital city of the country of which Budapest is the capital empty?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  wd:Q1781 wdt:P1376 ?country .            # Budapest is the capital of ?country\n  ?country wdt:P36 ?capital .               # get the capital city of that country (Budapest)\n  ?capital wdt:P706 ?river .                # physical feature the capital is located on (the river)\n  ?river wdt:P403 ?sea .                    # the river's mouth (which sea it empties into)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Black Sea"
    },
    {
        "Question": "Which American composer wrote, before 1980, an opera that is based on a novel by a Nobel Prize in Literature laureate?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT DISTINCT ?composerLabel WHERE {\n  ?opera wdt:P31/wdt:P279* wd:Q1344 ;       # opera\n         wdt:P86 ?composer ;                 # composer\n         wdt:P144 ?work ;                    # based on\n         wdt:P571 ?inception .               # inception (creation/premiere year)\n  ?composer wdt:P27 wd:Q30 .                 # country of citizenship: United States\n  ?work wdt:P50 ?author .                    # author of the source work\n  ?author wdt:P166 wd:Q37922 .               # Nobel Prize in Literature laureate\n  FILTER(?inception < \"1980-01-01T00:00:00Z\"^^xsd:dateTime)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Carlisle Floyd"
    },
    {
        "Question": "Which currency is used by the country where the native language of the author of the novel \"Independent People\" is an official language?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?Answer WHERE {\n  ?work wdt:P31 wd:Q8261;            # instance of novel\n        rdfs:label \"Independent People\"@en;\n        wdt:P50 ?author.             # author\n  ?author wdt:P103 ?lang.            # native language of the author\n  ?country wdt:P31 wd:Q6256;         # country\n           wdt:P37 ?lang;            # official language is that native language\n           wdt:P38 ?currency.        # currency of that country\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n  BIND(?currencyLabel AS ?Answer)\n}",
        "Answer": "Icelandic króna"
    },
    {
        "Question": "Which league does a team compete in whose home venue is a stadium in Hyderabad that is named after a person who served as Prime Minister of India?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?Answer WHERE {\n  # Stadium in Hyderabad named after a person who held the office of Prime Minister of India\n  ?stadium wdt:P138 ?person ;\n           wdt:P131* wd:Q15394 .  # Hyderabad\n  ?person wdt:P39 wd:Q14211 .     # Prime Minister of India\n\n  # A team that uses that stadium as home venue, and its league\n  ?team wdt:P115 ?stadium ;        # home venue\n        wdt:P118 ?league .         # league\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . \n                           ?league rdfs:label ?Answer }\n}",
        "Answer": "Indian Premier League"
    },
    {
        "Question": "What writing system is used by the native language of the person after whom the lunar crater 'Ibn Firnas' is named?",
        "SPARQL": "SELECT DISTINCT ?writingSystemLabel WHERE {\n  ?crater wdt:P31 wd:Q55488;  # instance of lunar crater\n          rdfs:label \"Ibn Firnas (crater)\"@en;\n          wdt:P138 ?person.   # named after\n  { ?person wdt:P103 ?language. } UNION { ?person wdt:P1412 ?language. }  # native or working language\n  ?language wdt:P282 ?writingSystem.  # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Arabic script"
    },
    {
        "Question": "Into which sea does the river that flows through the city where Egon Schiele died empty?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  ?person rdfs:label \"Egon Schiele\"@en.\n  ?person wdt:P20 ?deathPlace.\n  ?deathPlace wdt:P206 ?river.\n  ?river wdt:P31/wdt:P279* wd:Q4022.\n  ?river wdt:P403 ?sea.\n  ?sea wdt:P31/wdt:P279* wd:Q165.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Black Sea"
    },
    {
        "Question": "Which sea does the river that flows through the capital city of the country where bacteriologist Waldemar Haffkine was born empty into?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?seaLabel WHERE {\n  ?person rdfs:label \"Waldemar Haffkine\"@en .\n  ?person wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  ?capital wdt:P206 ?river .\n  ?river wdt:P31/wdt:P279* wd:Q4022 .       # ensure it's a river\n  ?river wdt:P403+ ?mouthBody .              # follow river mouths downstream\n  ?mouthBody wdt:P361* ?sea .                # mouth or its container is part of a sea\n  ?sea wdt:P31/wdt:P279* wd:Q165 .           # sea\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Black Sea"
    },
    {
        "Question": "What mountain range does the highest mountain belong to in the country whose capital hosts the National and University Library designed by Jože Plečnik?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?rangeLabel WHERE {\n  BIND(wd:Q1139021 AS ?building)  # National and University Library of Slovenia\n  ?building wdt:P84 wd:Q32021.    # architect Jože Plečnik\n  ?building wdt:P131 ?city.       # located in Ljubljana\n  ?city wdt:P1376 ?country.       # city is capital of country\n  ?country wdt:P610 ?highest.     # country's highest point (mountain)\n  ?highest wdt:P4552 ?range.      # mountain's mountain range\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Julian Alps"
    },
    {
        "Question": "What is the capital city of the country where the winner of the 2011 Pritzker Architecture Prize was born?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  ?prize wdt:P31 wd:Q618779; rdfs:label \"Pritzker Architecture Prize\"@en.\n  ?edition wdt:P361 ?prize; wdt:P585 ?date; wdt:P1346 ?laureate.\n  FILTER(YEAR(?date)=2011)\n  ?laureate wdt:P19 ?birthplace.\n  ?birthplace wdt:P17 ?country.\n  ?country wdt:P36 ?capital.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Lisbon"
    },
    {
        "Question": "What is the capital of the country where the headquarters of the developer of the video game 'Control' are located?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  ?game wdt:P31 wd:Q7889 ;\n        rdfs:label \"Control\"@en ;\n        wdt:P178 ?dev .\n  ?dev wdt:P159 ?hqCity .\n  ?hqCity wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Helsinki"
    },
    {
        "Question": "What is the official language of the country where a museum named after Mikalojus Konstantinas Čiurlionis is located?",
        "SPARQL": "SELECT DISTINCT ?answerLabel WHERE {\n  ?museum wdt:P31/wdt:P279* wd:Q33506 ;\n          wdt:P138 wd:Q76757 ;\n          wdt:P17 ?country .\n  ?country wdt:P37 ?answer .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Lithuanian"
    },
    {
        "Question": "Which city is home to the museum that houses Artemisia Gentileschi’s painting “Judith Slaying Holofernes” (specifically the version in the Uffizi collection)?",
        "SPARQL": "SELECT DISTINCT ?cityLabel WHERE {\n  ?painting wdt:P31 wd:Q3305213;            # instance of painting\n            wdt:P170 wd:Q5582;               # creator Artemisia Gentileschi\n            wdt:P195 ?museum;                 # in the collection of some museum\n            wdt:P1476 ?title.                 # title (monolingual text)\n  FILTER(CONTAINS(LCASE(STR(?title)), \"judith\") && CONTAINS(LCASE(STR(?title)), \"holofernes\"))\n  ?museum rdfs:label ?museumLabel.\n  FILTER(LANG(?museumLabel) = \"en\" && CONTAINS(LCASE(?museumLabel), \"uffizi\"))\n  ?museum wdt:P131 ?city.                     # museum located in administrative territorial entity (city)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Florence"
    },
    {
        "Question": "Which mountain range contains the highest point of the country where the painter of 'The Floor Scrapers' died?",
        "SPARQL": "SELECT DISTINCT ?rangeLabel WHERE {\n  ?painting wdt:P31 wd:Q3305213;               # instance of painting\n            rdfs:label \"The Floor Scrapers\"@en; # the painting\n            wdt:P170 ?painter.                  # painter of the work\n  ?painter wdt:P20 ?deathPlace.                 # place of death of the painter\n  ?deathPlace wdt:P17 ?country.                 # country of that place\n  ?country wdt:P610 ?highestPoint.              # country's highest point\n  ?highestPoint wdt:P4552 ?range.               # mountain range of that highest point\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Graian Alps"
    },
    {
        "Question": "What is the highest point of the island where the German painter Karl Wilhelm Diefenbach died?",
        "SPARQL": "SELECT DISTINCT ?Answer WHERE {\n  ?person rdfs:label \"Karl Wilhelm Diefenbach\"@en .\n  ?person wdt:P20 ?deathPlace .\n  ?deathPlace (wdt:P131|wdt:P706)* ?island .\n  ?island wdt:P31/wdt:P279* wd:Q23442 .\n  ?island wdt:P610 ?highestPoint .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". ?highestPoint rdfs:label ?Answer. }\n}",
        "Answer": "Monte Solaro"
    },
    {
        "Question": "What time zone is observed in the capital city of the country where Gelati Monastery is located?",
        "SPARQL": "SELECT DISTINCT ?tzLabel WHERE {\n  ?site rdfs:label \"Gelati Monastery\"@en.\n  ?site wdt:P17 ?country.\n  ?country wdt:P36 ?capital.\n  ?capital wdt:P421 ?tz.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "UTC+04:00"
    },
    {
        "Question": "Which city is the capital of the Spanish province that contains the municipality where the Battle of Teba took place?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  wd:Q808097 wdt:P276 ?place .\n  ?place wdt:P131 ?admin .\n  ?admin wdt:P31 wd:Q1641975 ;  # province of Spain\n         wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Málaga"
    },
    {
        "Question": "Which female computer scientist designed a programming language that influenced Python and was developed at an organization headquartered in Palo Alto?",
        "SPARQL": "SELECT DISTINCT ?designerLabel WHERE {\n  wd:Q28865 wdt:P737 ?lang .            # Python influenced by ?lang\n  ?lang wdt:P178 ?org .                 # language developed by an organization\n  ?org wdt:P159 wd:Q486593 .            # org HQ in Palo Alto\n  ?lang wdt:P287 ?designer .            # language designed by designer\n  ?designer wdt:P21 wd:Q6581072 ;       # designer is female\n            wdt:P106 wd:Q82594 .        # designer is a computer scientist\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Adele Goldberg"
    },
    {
        "Question": "Which writing systems are used by the official language of the country that contains the birthplace of the author of the novel 'Dictionary of the Khazars'?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q1217427 wdt:P50 ?author .\n  ?author wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P37 ?lang .\n  ?lang wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Serbian Cyrillic alphabet; Gaj's Latin alphabet"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-3 code of the country whose capital city contains the headquarters of the International Atomic Energy Agency?",
        "SPARQL": "SELECT DISTINCT ?iso3 WHERE {\n  ?org rdfs:label \"International Atomic Energy Agency\"@en.\n  ?org wdt:P159 ?hq.\n  ?country wdt:P36 ?cap.\n  ?hq wdt:P131* ?cap.\n  ?country wdt:P298 ?iso3.\n}",
        "Answer": "AUT"
    },
    {
        "Question": "What is the capital of the Polish voivodeship that contains the city where the university attended by chemist Clara Immerwahr is located?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  wd:Q105157 wdt:P69 ?uni .\n  ?uni wdt:P31/wdt:P279* wd:Q3918 .\n  ?uni wdt:P17 wd:Q36 .  # ensure the university is in Poland\n  ?uni (wdt:P131|wdt:P276) ?city .\n  ?city wdt:P131 ?region .\n  ?region wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Wrocław"
    },
    {
        "Question": "What writing system is used by the official language of the country that contains the UNESCO World Heritage Site \"Monasteries of Haghpat and Sanahin\"?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q173538 wdt:P17 ?country .\n  ?country wdt:P37 ?lang .\n  ?lang wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Armenian alphabet"
    },
    {
        "Question": "What writing system is used by the official language of the country that contains the birthplace of Estonian composer Veljo Tormis?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?person rdfs:label \"Veljo Tormis\"@en ;\n          wdt:P31 wd:Q5 ;\n          wdt:P19 ?birthplace .\n  ?birthplace (wdt:P17 | (wdt:P131)+/wdt:P17) ?country .\n  ?country wdt:P37 ?officialLang .\n  ?officialLang wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the official currency of the country where the composer of Tanzania's national anthem was born?",
        "SPARQL": "SELECT DISTINCT ?currencyLabel WHERE {\n  wd:Q924 wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  ?composer wdt:P19/wdt:P17 ?birthCountry .\n  ?birthCountry wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "South African rand"
    },
    {
        "Question": "What writing system is used by the official language of the country that contains the UNESCO World Heritage Site 'Medieval Town of Toruń'?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?site rdfs:label \"Medieval Town of Toruń\"@en.\n  ?site wdt:P1435 wd:Q9259.\n  ?site wdt:P131* ?place.\n  ?place wdt:P17 ?country.\n  ?country wdt:P37 ?language.\n  ?language wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What writing system is used by the official language of the country where the cliffside monastery Paro Taktsang is located?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q169390 wdt:P17/wdt:P37/wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "Answer": "Tibetan script"
    },
    {
        "Question": "What writing system is used by the official language of the country where the inventor of the theremin was born?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?instrument rdfs:label ?lbl.\n  FILTER(LANG(?lbl) = \"en\" && LCASE(STR(?lbl)) = \"theremin\").\n  ?instrument wdt:P61 ?inventor.\n  ?inventor wdt:P19/wdt:P17 ?country.\n  ?country wdt:P37 ?officialLang.\n  ?officialLang wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Cyrillic script"
    },
    {
        "Question": "Into which sea does the river that the capital city of the country whose official language is Latvian is located on empty?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  ?country wdt:P37 wd:Q9072 .\n  ?country wdt:P36 ?capital .\n  ?capital wdt:P206 ?river .\n  ?river wdt:P31 wd:Q4022 .\n  ?river wdt:P403 ?gulf .\n  ?gulf wdt:P361 ?sea .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Baltic Sea"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the Spanish philosopher María Zambrano died?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?scriptLabel WHERE {\n  ?person rdfs:label \"María Zambrano\"@en .\n  ?person wdt:P20 ?deathPlace .\n  # Resolve the country of the death place via country (P17) or via admin unit to country\n  ?deathPlace (wdt:P17|wdt:P131+/wdt:P17) ?country .\n  ?country wdt:P37 ?language .\n  ?language wdt:P282 ?script .\n  # Keep typical alphabetic writing systems (exclude Braille, etc.)\n  ?script (wdt:P31/wdt:P279*) wd:Q9779 .  # alphabet\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin alphabet"
    },
    {
        "Question": "Which writing system is used by the official language of the country whose capital city hosts a university attended by the author of the novel 'The Roots of Heaven'?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?writingSystemLabel WHERE {\n  ?work rdfs:label \"The Roots of Heaven\"@en.\n  ?work wdt:P31/wdt:P279* wd:Q8261;      # instance of (subclass of) novel\n        wdt:P50 ?author.                 # author\n  ?author wdt:P69 ?university.            # educated at\n  ?university (wdt:P131|wdt:P159) ?city.  # located in admin territory or HQ located\n  ?country wdt:P36 ?city;                 # country whose capital is that city\n           wdt:P37 ?language.             # official language of that country\n  ?language wdt:P282 ?writingSystem.      # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-2 code of the country where the inventor of the three-point seat belt was born?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT DISTINCT ?code WHERE {\n  wd:Q1052363 wdt:P61 ?inventor .        # three-point seat belt -> inventor\n  ?inventor wdt:P19 ?birthplace .         # inventor -> place of birth\n  ?birthplace wdt:P17 ?country .          # birthplace -> country\n  ?country wdt:P297 ?code .               # country -> ISO 3166-1 alpha-2 code\n}",
        "Answer": "SE"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-2 code of the country where the headquarters of the organization that awards the Palme d'Or received by the film 'Winter Sleep' are located?",
        "SPARQL": "SELECT ?code WHERE {\n  ?film rdfs:label \"Winter Sleep\"@en ;\n        wdt:P31 wd:Q11424 ;\n        wdt:P166 ?award .\n  ?award rdfs:label \"Palme d'Or\"@en ;\n         wdt:P1027 ?org .\n  ?org wdt:P159 ?hq .\n  ?hq wdt:P17 ?country .\n  ?country wdt:P297 ?code .\n}",
        "Answer": "FR"
    },
    {
        "Question": "Which language is the native language of the person after whom the international airport located in the capital city of the country that uses the Azerbaijani manat as its currency is named?",
        "SPARQL": "SELECT DISTINCT ?languageLabel WHERE {\n  wd:Q193405 ^wdt:P38 ?country.             # Azerbaijani manat -> country using it\n  ?country wdt:P36 ?capital.                # country -> capital city\n  ?airport wdt:P17 ?country;                # airport in that country\n           wdt:P131* ?capital;              # located in (or within) the capital city\n           wdt:P138 ?person;                # airport named after a person\n           wdt:P31/wdt:P279* wd:Q1248784;   # instance of (subclass of) airport\n           wdt:P238 ?iata.                  # has an IATA code (civil/international)\n  ?person wdt:P103 ?language.               # person's native language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Azerbaijani"
    },
    {
        "Question": "What writing system is used by the official language of the country where the headquarters of the manufacturer of the aircraft \"Embraer ERJ 145\" are located?",
        "SPARQL": "SELECT DISTINCT ?writingSystemLabel WHERE {\n  ?aircraft rdfs:label \"Embraer ERJ 145\"@en.\n  ?aircraft wdt:P176 ?manufacturer.\n  ?manufacturer wdt:P159 ?hq.\n  ?hq wdt:P17 ?country.\n  ?country wdt:P37 ?language.\n  ?language wdt:P282 ?writingSystem.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the capital of the country where the original language of the novel 'Independent People' is an official language?",
        "SPARQL": "SELECT ?capitalLabel WHERE {\n  ?work wdt:P31 wd:Q8261 ;\n        rdfs:label \"Independent People\"@en ;\n        wdt:P50 ?author ;\n        wdt:P364 ?lang .\n  ?author rdfs:label \"Halldór Laxness\"@en .\n  ?country wdt:P37 ?lang ;\n           wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Reykjavík"
    },
    {
        "Question": "Which writing system is used for the official language of the country where a publisher of the novel 'The Shadow of the Wind' is headquartered, considering only publishers based in countries whose official language matches the novel’s original language?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?work rdfs:label \"The Shadow of the Wind\"@en .\n  ?work wdt:P31/wdt:P279* wd:Q571 .\n  ?work wdt:P364 ?origLang .\n  ?work wdt:P123 ?publisher .\n  ?publisher wdt:P159 ?hq .\n  ?hq wdt:P17 ?country .\n  ?country wdt:P37 ?lang .\n  FILTER(?lang = ?origLang)\n  ?lang wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Into which sea does the river ultimately flow that runs through the city where the university attended by former Slovenian prime minister Miro Cerar is headquartered?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?seaLabel WHERE {\n  ?person rdfs:label \"Miro Cerar\"@en .\n  ?person wdt:P69 ?uni .\n  ?uni wdt:P159 ?city .\n  ?city wdt:P206 ?river .\n  ?river wdt:P403+ ?sea .\n  ?sea wdt:P31/wdt:P279* wd:Q165 .  # instance of (subclass of) sea\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Black Sea"
    },
    {
        "Question": "Which mountain range contains the highest peak of the country whose internet top-level domain is \".am\"?",
        "SPARQL": "SELECT DISTINCT ?rangeLabel WHERE {\n  ?country wdt:P78 ?tld .\n  ?tld rdfs:label \".am\"@en .\n  ?country wdt:P610 ?peak .\n  ?peak wdt:P4552 ?range .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Armenian Highlands"
    },
    {
        "Question": "What is the birthplace city of the author of the novel on which the 2008 Palme d'Or-winning film 'The Class' is based?",
        "SPARQL": "SELECT ?birthplaceLabel WHERE {\n  wd:Q248005 wdt:P166 wd:Q103360 .\n  wd:Q248005 wdt:P144 ?book .\n  ?book wdt:P50 ?author .\n  ?author wdt:P19 ?birthplace .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "La Roche-sur-Yon"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the composer of Nepal's national anthem died?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q837 wdt:P85 ?anthem .           # Nepal -> anthem\n  ?anthem wdt:P86 ?composer .          # anthem -> composer\n  ?composer wdt:P20 ?deathPlace .      # composer -> place of death\n  ?deathPlace wdt:P17 ?country .       # place of death -> country\n  ?country wdt:P37 ?language .         # country -> official language\n  ?language wdt:P282 ?script .         # language -> writing system\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Devanagari"
    },
    {
        "Question": "Which architect designed the stadium that hosted the 1930 FIFA World Cup Final?",
        "SPARQL": "SELECT DISTINCT ?architectLabel WHERE {\n  ?final rdfs:label \"1930 FIFA World Cup Final\"@en;\n         wdt:P276 ?stadium.\n  ?stadium wdt:P84 ?architect.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Juan Antonio Scasso"
    },
    {
        "Question": "Which Romanian county contains the airport that is named after a composer who played the violin?",
        "SPARQL": "SELECT DISTINCT ?countyLabel WHERE {\n  ?airport wdt:P31/wdt:P279* wd:Q1248784;  # airport\n           wdt:P138 ?person;               # named after\n           wdt:P131 ?place.                # located in (admin entity)\n  \n  ?person wdt:P106 wd:Q36834;              # occupation: composer\n          wdt:P1303 wd:Q83428.             # instrument: violin\n\n  ?place wdt:P131* ?county.                # climb to county\n  ?county wdt:P31 wd:Q1048835.             # county of Romania\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Bacău County"
    },
    {
        "Question": "Considering the country that contains Gyumri and has an official language written in the Armenian alphabet, what is that country's currency?",
        "SPARQL": "SELECT DISTINCT ?currencyLabel WHERE {\n  wd:Q1731 wdt:P17 ?country .            # Gyumri -> country\n  ?country wdt:P37 ?lang .                # country -> official language\n  ?lang wdt:P282 wd:Q49656 .              # language uses Armenian alphabet\n  ?country wdt:P38 ?currency .            # country -> currency\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Armenian dram"
    },
    {
        "Question": "Among lanthanides that are named after a person, what is the country of citizenship of the eponym of the one with the lowest atomic number?",
        "SPARQL": "SELECT ?countryLabel WHERE {\n  ?element wdt:P1086 ?Z.\n  FILTER(?Z >= 57 && ?Z <= 71).\n  ?element wdt:P138 ?eponym.\n  ?eponym wdt:P31 wd:Q5.\n  ?eponym wdt:P27 ?country.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?Z\nLIMIT 1",
        "Answer": "Russian Empire"
    },
    {
        "Question": "Which architectural style characterizes the church in Weimar where a philosopher who studied under Immanuel Kant is buried?",
        "SPARQL": "SELECT DISTINCT ?styleLabel WHERE {\n  ?philosopher wdt:P1066 wd:Q35012;           # student of Immanuel Kant\n               wdt:P106 wd:Q4964182;          # occupation: philosopher\n               wdt:P119 ?church.              # place of burial\n  ?church wdt:P31/wdt:P279* wd:Q16970;        # church building\n          wdt:P131* wd:Q1726;                 # located in Weimar\n          wdt:P149 ?style.                    # architectural style\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Gothic architecture"
    },
    {
        "Question": "Which city in Ukraine has a metro station that is named after a person who was born in that same city?",
        "SPARQL": "SELECT DISTINCT ?cityLabel WHERE {\n  ?station wdt:P31/wdt:P279* wd:Q928830;       # metro station\n           wdt:P138 ?person;                    # named after\n           wdt:P131* ?city.                     # located in (recursively)\n  ?city wdt:P31/wdt:P279* wd:Q515;              # is a city\n        wdt:P17 wd:Q212.                        # in Ukraine\n  ?person wdt:P19 ?city.                         # person was born in that city\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Kharkiv"
    },
    {
        "Question": "Which writing system is used for the official language of the country where architect Lina Bo Bardi died?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?person rdfs:label \"Lina Bo Bardi\"@en.\n  ?person wdt:P20 ?deathPlace.\n  ?deathPlace wdt:P17 ?country.\n  ?country wdt:P37 ?lang.\n  ?lang wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which writing system is used to write the official language of the country where the mountain Doi Inthanon is located?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT ?scriptLabel WHERE {\n  ?mountain rdfs:label \"Doi Inthanon\"@en ;\n            wdt:P31/wdt:P279* wd:Q8502 ;  # instance of/subclass of mountain\n            wdt:P17 ?country .            # country where the mountain is located\n  ?country wdt:P37 ?language .            # official language of that country\n  ?language wdt:P282 ?script .            # writing system used by that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }\n}",
        "Answer": "Thai script"
    },
    {
        "Question": "Which city is the capital of the country that hosts a university named after the author of the novel 'Zakhar Berkut'?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  ?work rdfs:label \"Zakhar Berkut\"@en ;\n        wdt:P31/wdt:P279* wd:Q8261 ;  # instance of / subclass of novel\n        wdt:P50 ?author .            # author of the novel\n  ?university wdt:P138 ?author ;      # named after that author\n             wdt:P31/wdt:P279* wd:Q3918 ;  # is a university\n             wdt:P17 ?country .       # in a country\n  ?country wdt:P36 ?capital .         # country's capital\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Kyiv"
    },
    {
        "Question": "Which writing system is used by the co-official language (other than Spanish) of the autonomous community whose capital is Santiago de Compostela?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q8818 wdt:P1376 ?region .            # Santiago de Compostela is the capital of ?region\n  ?region wdt:P31 wd:Q19978648 .           # region is an autonomous community of Spain\n  ?region wdt:P37 ?lang .                  # official language of the region\n  FILTER(?lang != wd:Q1321)                # exclude Spanish to get the co-official language\n  ?lang wdt:P282 ?script .                 # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Into which river does the longest river that flows through the city served by the airport named after the last President of Czechoslovakia discharge?",
        "SPARQL": "SELECT ?mouthLabel WHERE {\n  # Airport named after Václav Havel (last President of Czechoslovakia)\n  ?airport wdt:P138 wd:Q937 ;\n           wdt:P931 ?city .\n  \n  # Pick the longest river the city is located on\n  {\n    SELECT ?river WHERE {\n      ?city wdt:P206 ?river .\n      ?river wdt:P31/wdt:P279* wd:Q4022 .  # instance of/subclass of river\n      OPTIONAL { ?river wdt:P2043 ?length . }  # length\n    }\n    ORDER BY DESC(?length)\n    LIMIT 1\n  }\n\n  # Mouth of that river\n  ?river wdt:P403 ?mouth .\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Elbe"
    },
    {
        "Question": "Which mountain range contains the highest peak of the country whose vehicle registration code is \"CH\"?",
        "SPARQL": "SELECT DISTINCT ?rangeLabel WHERE {\n  ?country wdt:P31 wd:Q6256;          # country\n           wdt:P395 \"CH\";            # vehicle registration code\n           wdt:P610 ?peak.            # highest point\n  ?peak wdt:P4552 ?range.             # mountain range of that peak\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Pennine Alps"
    },
    {
        "Question": "What is the track gauge of the metro system in the capital city of the country where the Georgian painter Niko Pirosmani was born?",
        "SPARQL": "SELECT DISTINCT ?gLabel WHERE {\n  VALUES ?person { wd:Q311005 }  # Niko Pirosmani\n  ?person wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  ?metro wdt:P131 ?capital ;\n         wdt:P31/wdt:P279* wd:Q252 ;  # rapid transit system / metro system\n         wdt:P238 ?g .               # track gauge\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "1520 mm"
    },
    {
        "Question": "Which writing system is used by the official language of the country that hosted the 1962 African Cup of Nations?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?event rdfs:label \"1962 African Cup of Nations\"@en.\n  {\n    ?event wdt:P17 ?country .\n  } UNION {\n    ?event wdt:P276 ?place .\n    ?place wdt:P17 ?country .\n  }\n  ?country wdt:P37 ?language .\n  ?language wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Geʽez script"
    },
    {
        "Question": "Which river flows through the capital city of a country whose official language belongs to the Uralic language family, where that capital contains a UNESCO World Heritage Site and has a population under 600,000?",
        "SPARQL": "SELECT DISTINCT ?riverLabel WHERE {\n  # Country whose official language is a Uralic language\n  ?country wdt:P37 ?lang .\n  ?lang wdt:P31/wdt:P279* wd:Q33577 .  # Uralic languages\n\n  # Its capital city\n  ?country wdt:P36 ?capital .\n\n  # Capital has population under 600,000\n  ?capital wdt:P1082 ?pop .\n  FILTER(?pop < 600000)\n\n  # Capital contains a UNESCO World Heritage Site\n  ?site wdt:P1435 wd:Q9259 .  # heritage designation: UNESCO World Heritage Site\n  ?site wdt:P131* ?capital .\n\n  # A river the capital is located in or next to\n  ?capital wdt:P206 ?river .\n  ?river wdt:P31/wdt:P279* wd:Q4022 .  # river\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Pirita River"
    },
    {
        "Question": "What writing system is used by the official language of the country where the author of the novel \"The Foundation Pit\" died?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  VALUES ?work { wd:Q1146287 }  # The Foundation Pit\n  ?work wdt:P50 ?author.\n  ?author wdt:P20 ?deathPlace.\n  ?deathPlace wdt:P17 ?country.\n  ?country wdt:P37 ?lang.\n  ?lang wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Cyrillic script"
    },
    {
        "Question": "Which currency is used by the country where the headquarters of the manufacturer of the Saab 37 Viggen are located?",
        "SPARQL": "SELECT DISTINCT ?currencyLabel WHERE {\n  wd:Q153317 wdt:P176/wdt:P159/wdt:P17/wdt:P38 ?currency.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Swedish krona"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the UNESCO World Heritage Site 'Monasteries of Haghpat and Sanahin' is located?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q190200 wdt:P17 ?country .\n  ?country wdt:P37 ?lang .\n  ?lang wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Armenian alphabet"
    },
    {
        "Question": "Which currency is used in the country that contains the birthplace of the director of the film 'A Pigeon Sat on a Branch Reflecting on Existence'?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?currencyLabel WHERE {\n  ?film wdt:P31 wd:Q11424;\n        rdfs:label \"A Pigeon Sat on a Branch Reflecting on Existence\"@en;\n        wdt:P57 ?director.\n  ?director wdt:P19 ?birthplace.\n  ?birthplace wdt:P17 ?country.\n  ?country wdt:P38 ?currency.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Swedish krona"
    },
    {
        "Question": "Which city is the capital of the country where the director of the film that won the Caméra d'Or at the 2006 Cannes Film Festival was born?",
        "SPARQL": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX p: <http://www.wikidata.org/prop/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX pq: <http://www.wikidata.org/prop/qualifier/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?capitalLabel WHERE {\n  ?film p:P166 ?awardStmt .\n  ?awardStmt ps:P166 ?award ;\n             pq:P585 ?date .\n  ?award rdfs:label \"Caméra d'Or\"@en .\n  FILTER(YEAR(?date) = 2006)\n  ?film wdt:P57 ?director .\n  ?director wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Bucharest"
    },
    {
        "Question": "What is the capital city of the country where the person after whom the programming language Erlang is named was born?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT ?capitalLabel WHERE {\n  ?lang wdt:P31 wd:Q9143;               # instance of programming language\n        rdfs:label \"Erlang\"@en;        # the language is Erlang\n        wdt:P138 ?person.               # named after -> person\n  ?person wdt:P19 ?birthplace.          # person's place of birth\n  ?birthplace wdt:P17 ?country.         # country of that birthplace\n  ?country wdt:P36 ?capital.            # capital of that country\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Copenhagen"
    },
    {
        "Question": "Which UNESCO World Heritage Site is located in the capital of the country that hosts the headquarters of the airline with IATA code 'MS'?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?siteLabel WHERE {\n  ?airline wdt:P229 \"MS\".            # airline with IATA code MS\n  ?airline wdt:P159 ?hq.              # headquarters location\n  ?hq wdt:P17 ?country.               # country of that HQ\n  ?country wdt:P36 ?capital.          # capital of that country\n  ?site wdt:P1435 wd:Q9259;           # UNESCO World Heritage Site designation\n        wdt:P131* ?capital.           # located in (or within) the capital\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Historic Cairo"
    },
    {
        "Question": "What is the ISO 4217 currency code of the currency used in the country where Lou Ottens (inventor of the compact cassette) was born?",
        "SPARQL": "SELECT DISTINCT ?code WHERE {\n  wd:Q191922 wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  ?currency wdt:P498 ?code .\n}",
        "Answer": "EUR"
    },
    {
        "Question": "What writing system is used by the official language of the country where the developer of the video game 'Firewatch' is headquartered?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?game wdt:P31 wd:Q7889;            # game is a video game\n        rdfs:label \"Firewatch\"@en;  # the game is Firewatch\n        wdt:P178 ?dev.               # developer of the game\n  ?dev wdt:P159 ?hq.                  # developer's headquarters location\n  ?hq wdt:P17 ?country.               # country of that headquarters\n  ?country wdt:P37 ?lang.             # official language of that country\n  ?lang wdt:P282 ?script.             # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which currency is used in the country that contains the birthplace of the founder of the manufacturer of the engine used by the aircraft that won the MacRobertson Air Race?",
        "SPARQL": "SELECT DISTINCT ?currencyLabel WHERE {\n  wd:Q1163893 wdt:P1346 ?winner .\n  ?winner wdt:P31 ?model .\n  ?model wdt:P279* wd:Q11436 .\n  ?model wdt:P516 ?engine .\n  ?engine wdt:P176 ?manufacturer .\n  ?manufacturer wdt:P112 ?founder .\n  ?founder wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P38 ?currency .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "pound sterling"
    },
    {
        "Question": "What writing system is used by the official language of the country where Jaan Kross died?",
        "SPARQL": "SELECT ?writingSystemLabel WHERE {\n  ?person rdfs:label \"Jaan Kross\"@en.\n  ?person wdt:P20 ?deathPlace.\n  ?deathPlace wdt:P17 ?country.\n  ?country wdt:P37 ?language.\n  ?language wdt:P282 ?writingSystem.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the currency used in the country of citizenship of the director of the film adaptation of the novel \"Annihilation\" by Jeff VanderMeer?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?currencyLabel WHERE {\n  # Find the novel \"Annihilation\" by Jeff VanderMeer\n  ?novel wdt:P31 wd:Q8261 ;            # instance of: novel\n         rdfs:label \"Annihilation\"@en ;\n         wdt:P50 ?author .              # author\n  ?author rdfs:label \"Jeff VanderMeer\"@en .\n\n  # Find a film based on that novel and its director\n  ?film wdt:P144 ?novel ;               # based on\n        wdt:P57 ?director .             # director\n\n  # Director's country of citizenship and its currency\n  ?director wdt:P27 ?country .          # country of citizenship\n  ?country wdt:P38 ?currency .          # currency\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Pound sterling"
    },
    {
        "Question": "Which autonomous community is the birth city located in of the person after whom the home stadium of Spanish football club Real Valladolid is named?",
        "SPARQL": "SELECT DISTINCT ?regionLabel WHERE {\n  wd:Q132222 wdt:P115 ?stadium .\n  ?stadium wdt:P138 ?person .\n  ?person wdt:P19 ?birthplace .\n  ?birthplace wdt:P131* ?region .\n  ?region wdt:P31 wd:Q106658 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Castile and León"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the composer of Akira Kurosawa’s film \"Dersu Uzala\" was born?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?film rdfs:label \"Dersu Uzala\"@en ;\n        wdt:P57 wd:Q9029 ;            # directed by Akira Kurosawa\n        wdt:P86 ?composer .            # composer of the film\n  ?composer wdt:P19 ?birthplace .      # composer's birthplace\n  ?birthplace wdt:P17 ?country .       # country of that birthplace\n  ?country wdt:P37 ?officialLanguage . # official language of that country\n  ?officialLanguage wdt:P282 ?script . # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Cyrillic script"
    },
    {
        "Question": "What is the official language of the country where the headquarters of the manufacturer of the ATR 72 are located?",
        "SPARQL": "SELECT DISTINCT ?AnswerLabel WHERE {\n  ?aircraft rdfs:label \"ATR 72\"@en.\n  ?aircraft wdt:P176 ?manufacturer.\n  ?manufacturer wdt:P159 ?hq.\n  ?hq wdt:P17 ?country.\n  ?country wdt:P37 ?Answer.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "French"
    },
    {
        "Question": "What writing system is used by the official language of the country where the UNESCO World Heritage Site \"Monasteries of Haghpat and Sanahin\" is located?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q231372 wdt:P17 ?country .\n  ?country wdt:P37 ?lang .\n  ?lang wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Armenian alphabet"
    },
    {
        "Question": "Which mountain range does the highest point of the country lie in, where the engineer who invented the hovercraft, Christopher Cockerell, died?",
        "SPARQL": "SELECT DISTINCT ?AnswerLabel WHERE {\n  wd:Q333192 wdt:P20 ?deathPlace .\n  ?deathPlace wdt:P17 ?country .\n  ?country wdt:P610 ?highestPoint .\n  ?highestPoint wdt:P4552 ?Answer .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Grampian Mountains"
    },
    {
        "Question": "Which architectural style characterizes the Paris church built of reinforced concrete that was designed by an architect who was a student of Eugène Viollet-le-Duc?",
        "SPARQL": "SELECT DISTINCT ?styleLabel WHERE {\n  ?architect wdt:P1066 wd:Q135660 .\n  ?building wdt:P84 ?architect ;\n            wdt:P31/wdt:P279* wd:Q16970 ;\n            wdt:P186 wd:Q3391743 ;\n            wdt:P131* wd:Q90 ;\n            wdt:P149 ?style .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Art Nouveau"
    },
    {
        "Question": "Which river flows through the capital of the country where the manufacturer of the Talgo 250 is headquartered?",
        "SPARQL": "SELECT ?riverLabel WHERE {\n  ?train rdfs:label \"Talgo 250\"@en.\n  ?train wdt:P176 ?maker.\n  ?maker wdt:P159 ?hq.\n  ?hq wdt:P17 ?country.\n  ?country wdt:P36 ?capital.\n  ?capital wdt:P206 ?river.\n  ?river wdt:P31 wd:Q4022.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Manzanares"
    },
    {
        "Question": "What is the ISO 4217 currency code of the currency used in the country where the Brazilian modernist painter Tarsila do Amaral was born?",
        "SPARQL": "SELECT DISTINCT ?code WHERE {\n  ?person rdfs:label \"Tarsila do Amaral\"@en ;\n          wdt:P31 wd:Q5 ;            # human\n          wdt:P19 ?birthplace .      # place of birth\n  ?birthplace wdt:P17 ?country .     # country of that place\n  ?country wdt:P38 ?currency .       # country's currency\n  ?currency wdt:P498 ?code .         # ISO 4217 code\n}",
        "Answer": "BRL"
    },
    {
        "Question": "Into which sea does the river adjoining the birthplace of the winner of the FIDE World Chess Championship 2005 flow?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?seaLabel WHERE {\n  ?event rdfs:label \"FIDE World Chess Championship 2005\"@en.\n  ?event wdt:P1346 ?winner.\n  ?winner wdt:P19 ?birthplace.\n  ?birthplace wdt:P206 ?river.\n  ?river wdt:P31/wdt:P279* wd:Q4022.\n  ?river wdt:P403 ?sea.\n  ?sea wdt:P31/wdt:P279* wd:Q165.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Black Sea"
    },
    {
        "Question": "Which city is the capital of the country of citizenship of the architect of Metropol Parasol?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  wd:Q2338419 wdt:P84 ?architect .\n  ?architect wdt:P27 ?country .\n  ?country wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Berlin"
    },
    {
        "Question": "What writing system is used by the official language of the country after which the chemical element polonium is named?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?element wdt:P31 wd:Q11344;           # element is a chemical element\n           wdt:P138 wd:Q36.             # named after Poland\n  wd:Q36 wdt:P37 ?lang.                  # Poland's official language(s)\n  ?lang wdt:P282 ?script.                # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which alphabet is used by the official language of the country to which the city served by the airport with IATA code \"TIA\" belongs?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?airport wdt:P238 \"TIA\".              # IATA code for Tirana International Airport\n  ?airport wdt:P931 ?city.                # city served by the airport\n  ?city wdt:P17 ?country.                 # country of that city\n  ?country wdt:P37 ?language.             # official language of the country\n  ?language wdt:P282 ?script.             # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What writing system is used by the official language(s) of the country where the author of the Kalevala is buried?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX bd: <http://www.bigdata.com/rdf#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\n\nSELECT DISTINCT ?answerLabel WHERE {\n  wd:Q323443 wdt:P50 ?author .            # Kalevala -> author\n  ?author wdt:P119 ?burialPlace .         # author -> place of burial\n  ?burialPlace wdt:P17 ?country .         # burial place -> country\n  ?country wdt:P37 ?language .            # country -> official language(s)\n  ?language wdt:P282 ?answer .            # language -> writing system\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "What is the taxonomic family of the bird species depicted on the national flag of Uganda?",
        "SPARQL": "SELECT DISTINCT ?familyLabel WHERE {\n  VALUES ?country { wd:Q1036 }  # Uganda\n  ?country wdt:P163 ?flag .      # flag of the country\n  ?flag wdt:P180 ?taxon .        # thing(s) depicted on the flag\n  ?taxon wdt:P31/wdt:P279* wd:Q16521 .  # ensure it's a taxon\n  ?taxon wdt:P171* ?family .     # climb parent taxon hierarchy\n  ?family wdt:P105 wd:Q35409 .   # taxon rank = family\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Gruidae"
    },
    {
        "Question": "Which mountain range contains the highest point of the country that is the birthplace of the architect who designed the Lotus Temple?",
        "SPARQL": "SELECT ?rangeLabel WHERE {\n  wd:Q171136 wdt:P84 ?architect .\n  ?architect wdt:P19 ?birthplace .\n  ?birthplace wdt:P17 ?country .\n  ?country wdt:P610 ?highest .\n  ?highest wdt:P4552 ?range .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Alborz"
    },
    {
        "Question": "Which chemical element was named after an asteroid discovered by an astronomer who also discovered a periodic comet named after himself?",
        "SPARQL": "SELECT DISTINCT ?elementLabel WHERE {\n  ?element wdt:P31 wd:Q11344;           # chemical element\n           wdt:P138 ?asteroid.          # element named after an asteroid\n  ?asteroid wdt:P31 wd:Q3863;           # asteroid\n            wdt:P61 ?astronomer.        # discovered by an astronomer\n  ?comet wdt:P31 wd:Q130019;            # periodic comet\n         wdt:P61 ?astronomer;           # discovered by the same astronomer\n         wdt:P138 ?astronomer.          # comet is named after that astronomer\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "palladium"
    },
    {
        "Question": "What is the IATA code of the airport named after the composer of the opera 'Jenůfa'?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?Answer WHERE {\n  ?opera wdt:P31 wd:Q134599;           # instance of opera\n         rdfs:label \"Jenůfa\"@en;       # the opera Jenůfa\n         wdt:P86 ?composer.             # composer of the opera\n  ?airport wdt:P31 wd:Q1248784;         # instance of airport\n           wdt:P138 ?composer;          # named after that composer\n           wdt:P238 ?Answer.            # IATA code\n}",
        "Answer": "OSR"
    },
    {
        "Question": "Which writing system is used by the official language of the country that contains the city where the university attended by Estonian novelist Jaan Kross is located?",
        "SPARQL": "SELECT DISTINCT ?answer WHERE {\n  ?person rdfs:label \"Jaan Kross\"@en ;\n          wdt:P31 wd:Q5 ;\n          wdt:P27 wd:Q191 ;\n          wdt:P69 ?univ .\n  ?univ wdt:P131 ?city .\n  ?city wdt:P17 ?country .\n  ?country wdt:P37 ?lang .\n  ?lang wdt:P282 ?writingSystem .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . ?writingSystem rdfs:label ?answer }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which sea does the river that flows through the capital of the country that awards the Magnesia Litera literary prize ultimately empty into?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  ?award rdfs:label \"Magnesia Litera\"@en .\n  { ?award wdt:P17 ?country } UNION { ?award wdt:P495 ?country } .\n  ?country wdt:P36 ?capital .\n  ?capital wdt:P206 ?river .\n  ?river wdt:P31/wdt:P279* wd:Q4022 .\n  ?river wdt:P403+/(wdt:P361*) ?sea .\n  ?sea wdt:P31/wdt:P279* wd:Q165 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "North Sea"
    },
    {
        "Question": "Which architect designed the opera house where the world premiere of George Enescu's opera Oedipe took place?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?architectLabel WHERE {\n  ?work wdt:P31 wd:Q1344;              # instance of opera\n        wdt:P86 wd:Q9056;              # composer George Enescu\n        rdfs:label \"Oedipe\"@en.\n  ?work wdt:P4647 ?venue.              # location of first performance\n  ?venue wdt:P84 ?architect.           # architect of the venue\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Charles Garnier"
    },
    {
        "Question": "Which writing system is used by the official language of the country that contains the city where the UNESCO World Heritage Site 'Würzburg Residence' is located?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?scriptLabel WHERE {\n  ?site rdfs:label \"Würzburg Residence\"@en ;\n        wdt:P1435 wd:Q9259 ;            # heritage designation: UNESCO World Heritage Site\n        wdt:P131* ?city .               # located in (chain) -> city\n  ?city wdt:P31/wdt:P279* wd:Q515 ;     # ensure it's a city\n        wdt:P17 ?country .              # country of the city\n  ?country wdt:P37 ?language .          # official language of the country\n  ?language wdt:P282 ?script .          # writing system of that language\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin alphabet"
    },
    {
        "Question": "What writing system is used by the official language of the country where the author of the novel \"The Fish Can Sing\" died?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?work rdfs:label \"The Fish Can Sing\"@en.\n  ?work wdt:P50 ?author.\n  ?author wdt:P20 ?deathPlace.\n  ?deathPlace wdt:P17 ?country.\n  ?country wdt:P37 ?language.\n  ?language wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin alphabet"
    },
    {
        "Question": "What is the currency of the country where the publisher of the journal 'Journal of Molluscan Studies' is headquartered?",
        "SPARQL": "SELECT ?currencyLabel WHERE {\n  ?journal rdfs:label \"Journal of Molluscan Studies\"@en.\n  ?journal wdt:P123 ?publisher.\n  ?publisher wdt:P159 ?hq.\n  ?hq wdt:P17 ?country.\n  ?country wdt:P38 ?currency.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Pound sterling"
    },
    {
        "Question": "Which writing system is used by the official language of the country where Apichatpong Weerasethakul was born?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?person rdfs:label \"Apichatpong Weerasethakul\"@en.\n  ?person wdt:P19 ?birthPlace.\n  ?birthPlace wdt:P17 ?country.\n  ?country wdt:P37 ?language.\n  ?language wdt:P282 ?script.\n  ?script wdt:P2620 ?iso.\n  FILTER(?iso != \"Brai\")\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Thai script"
    },
    {
        "Question": "Which script is used by all the official languages of the country where Adolphe Quetelet died?",
        "SPARQL": "SELECT ?scriptLabel WHERE {\n  {\n    SELECT ?country ?script (COUNT(DISTINCT ?language) AS ?cntLangUsingScript) WHERE {\n      wd:Q63815 wdt:P20 ?placeOfDeath.\n      ?placeOfDeath wdt:P17 ?country.\n      ?country wdt:P37 ?language.\n      ?language wdt:P282 ?script.\n    }\n    GROUP BY ?country ?script\n  }\n  {\n    SELECT ?country (COUNT(DISTINCT ?language) AS ?totalLangs) WHERE {\n      wd:Q63815 wdt:P20 ?placeOfDeath.\n      ?placeOfDeath wdt:P17 ?country.\n      ?country wdt:P37 ?language.\n    }\n    GROUP BY ?country\n  }\n  FILTER(?cntLangUsingScript = ?totalLangs)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which writing system is used by the original language of the novel that inspired the opera 'Die tote Stadt'?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q117270 wdt:P144 ?source .\n  ?source (wdt:P364|wdt:P407) ?lang .\n  ?lang wdt:P282 ?script .\n  ?script wdt:P31 wd:Q9779 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the author of the play that The Makropulos Affair is based on was born?",
        "SPARQL": "SELECT DISTINCT ?answerLabel WHERE {\n  ?opera rdfs:label \"The Makropulos Affair\"@en .\n  ?opera wdt:P144 ?source .\n  ?source wdt:P50 ?author .\n  ?author wdt:P19 ?birthPlace .\n  ?birthPlace wdt:P17 ?country .\n  ?country wdt:P37 ?language .\n  ?language wdt:P282 ?answer .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which writing system is used for the official language of the country where the philosopher Zera Yacob was born?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q37603 wdt:P19 ?birthPlace .\n  ?birthPlace wdt:P17 ?country .\n  ?country wdt:P37 ?officialLang .\n  ?officialLang wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Geʽez script"
    },
    {
        "Question": "Which artist, who was both a painter and an architect, designed a building located in Glasgow and also has one of their paintings located in Glasgow?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\nPREFIX bd: <http://www.bigdata.com/rdf#>\n\nSELECT DISTINCT ?artistLabel WHERE {\n  # The artist must be both a painter and an architect\n  ?artist wdt:P106 wd:Q1028181 ;   # painter\n          wdt:P106 wd:Q42973 .     # architect\n\n  # The artist designed a building located in Glasgow\n  ?building wdt:P84 ?artist ;      # architect of\n            wdt:P131 wd:Q4093 .    # located in Glasgow\n\n  # The artist has a painting located in Glasgow (directly or via an institution in the city)\n  ?painting wdt:P170 ?artist ;\n            wdt:P31/wdt:P279* wd:Q3305213 ;  # instance of/subclass of painting\n            wdt:P276 ?place .                # location of the painting\n  ?place wdt:P131* wd:Q4093 .                # in Glasgow (or within its admin hierarchy)\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Charles Rennie Mackintosh"
    },
    {
        "Question": "In what language was the original literary work written that served as the basis for Leoš Janáček’s opera The Cunning Little Vixen?",
        "SPARQL": "SELECT ?langLabel WHERE {\n  wd:Q173157 wdt:P144 ?work .\n  ?work wdt:P407 ?lang .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Czech"
    },
    {
        "Question": "What is the country of citizenship of the author of the book that the 2008 Cannes Palme d'Or-winning film is based on?",
        "SPARQL": "SELECT DISTINCT ?countryLabel WHERE {\n  # Film that won the Palme d'Or, with the award dated in 2008\n  ?film p:P166 ?awardStmt.\n  ?awardStmt ps:P166 wd:Q103360; pq:P585 ?awardDate.\n  FILTER(YEAR(?awardDate) = 2008)\n  # The film is based on a written work whose author we trace\n  ?film wdt:P144 ?work.\n  ?work wdt:P50 ?author.\n  ?author wdt:P27 ?country.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "France"
    },
    {
        "Question": "What is the capital city of the country where the composer of Namibia's national anthem was born?",
        "SPARQL": "SELECT DISTINCT ?capitalLabel WHERE {\n  wd:Q1030 wdt:P85 ?anthem .\n  ?anthem wdt:P86 ?composer .\n  ?composer wdt:P19/wdt:P17/wdt:P36 ?capital .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Windhoek"
    },
    {
        "Question": "What is the ISO 3166-1 alpha-2 code of the country whose capital city is the birthplace of the author of the novel 'The Rock of Tanios'?",
        "SPARQL": "PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?code WHERE {\n  ?work rdfs:label \"The Rock of Tanios\"@en ;\n        wdt:P31/wdt:P279* wd:Q8261 ;\n        wdt:P50 ?author .\n  ?author wdt:P19 ?birthplace .\n  ?country wdt:P36 ?birthplace ;\n           wdt:P297 ?code .\n}",
        "Answer": "LB"
    },
    {
        "Question": "Which sea does the river flow into that is crossed by the bridge designed by the Ottoman architect Mimar Hayruddin?",
        "SPARQL": "SELECT DISTINCT ?seaLabel WHERE {\n  ?bridge wdt:P84 wd:Q1643307 .           # architect = Mimar Hayruddin\n  ?bridge wdt:P31/wdt:P279* wd:Q12280 .   # instance of (or subclass of) bridge\n  ?bridge wdt:P177 ?river .               # bridge crosses river\n  ?river wdt:P403 ?sea .                  # river flows into (mouth) = sea\n  ?sea wdt:P31/wdt:P279* wd:Q165 .        # ensure it's a sea\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Adriatic Sea"
    },
    {
        "Question": "Into which ocean does the river flow that runs through the city hosting the headquarters of the European Maritime Safety Agency?",
        "SPARQL": "SELECT DISTINCT ?oceanLabel WHERE {\n  ?org rdfs:label \"European Maritime Safety Agency\"@en.\n  ?org wdt:P159 ?hqCity.\n  ?hqCity wdt:P206 ?water.\n  ?water wdt:P31/wdt:P279* wd:Q4022.\n  ?water wdt:P403 ?mouth.\n  ?mouth wdt:P361* ?ocean.\n  ?ocean wdt:P31 wd:Q9430.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Atlantic Ocean"
    },
    {
        "Question": "Which writing system is used by the official language of the country to which the island hosting the volcano Stromboli belongs?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?volcano wdt:P31 wd:Q8072; rdfs:label \"Stromboli\"@en.\n  ?volcano wdt:P706 ?island.\n  ?island wdt:P17 ?country.\n  ?country wdt:P37 ?language.\n  ?language wdt:P282 ?script.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the composer of Estonia's national anthem was born?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  wd:Q191 wdt:P85 ?anthem .        # Estonia -> anthem\n  ?anthem wdt:P86 ?composer .      # anthem -> composer\n  ?composer wdt:P19 ?birthplace .  # composer -> place of birth\n  ?birthplace wdt:P17 ?birthCountry .  # birthplace -> country\n  ?birthCountry wdt:P37 ?lang .     # country -> official language\n  ?lang wdt:P282 ?script .          # language -> writing system\n  # Keep alphabetic scripts (exclude Braille/tactile systems)\n  ?script wdt:P31/wdt:P279* wd:Q9779 .  # instance of/subclass of alphabet\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which writing system is used by the official language of the country where the author was born, whose novel was adapted into the 2008 film 'Let the Right One In'?",
        "SPARQL": "SELECT DISTINCT ?scriptLabel WHERE {\n  ?film wdt:P31 wd:Q11424 ;\n        rdfs:label \"Let the Right One In\"@en ;\n        wdt:P577 ?date ;\n        wdt:P144 ?work .\n  FILTER(YEAR(?date) = 2008)\n  ?work wdt:P50 ?author .\n  ?author wdt:P19/wdt:P17 ?country .\n  ?country wdt:P37 ?language .\n  ?language wdt:P282 ?script .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Latin script"
    },
    {
        "Question": "Which alphabet is used by the official language of the country where the composer of Bulgaria's national anthem was born?",
        "SPARQL": "SELECT DISTINCT ?alphabetLabel WHERE {\n  wd:Q219 wdt:P85 ?anthem .            # Bulgaria -> its anthem\n  ?anthem wdt:P86 ?composer .          # anthem -> composer\n  ?composer wdt:P19 ?birthplace .      # composer -> birthplace\n  ?birthplace wdt:P17 ?country .       # birthplace -> country\n  ?country wdt:P37 ?language .         # country -> official language\n  ?language wdt:P282 ?alphabet .       # language -> writing system\n  ?alphabet wdt:P31/wdt:P279* wd:Q9779 .  # restrict to alphabets\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Cyrillic script"
    },
    {
        "Question": "Which writing system is used by the language of the original version of the novel that won the International Prize for Arabic Fiction in 2014?",
        "SPARQL": "SELECT ?writingSystemLabel WHERE {\n  # Identify the award series by its English label\n  ?series rdfs:label \"International Prize for Arabic Fiction\"@en.\n  \n  # Find the 2014 edition of the award (some use part of, others part of series)\n  ?edition wdt:P585 ?date.\n  FILTER(YEAR(?date) = 2014)\n  { ?edition wdt:P361 ?series } UNION { ?edition wdt:P179 ?series }.\n  \n  # Get the winner; if the winner is a person, use the 'for work' qualifier to find the winning novel\n  ?edition p:P1346 ?winStmt.\n  ?winStmt ps:P1346 ?winnerEntity.\n  OPTIONAL { ?winStmt pq:P1686 ?work. }\n  BIND(COALESCE(?work, ?winnerEntity) AS ?winningWork)\n  \n  # Original language of the winning work, then its writing system\n  ?winningWork wdt:P364 ?lang.\n  ?lang wdt:P282 ?writingSystem.\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}",
        "Answer": "Arabic script"
    },
    {
        "Question": "Which mountain range contains the highest point of the country where the Romanian poet Ana Blandiana was born?",
        "SPARQL": "SELECT DISTINCT ?Answer WHERE {\n  VALUES ?name { \"Ana Blandiana\"@en }\n  ?person wdt:P31 wd:Q5; rdfs:label ?name; wdt:P19 ?birthplace.\n  ?birthplace (wdt:P131*/wdt:P17) ?country.\n  ?country wdt:P610 ?peak.\n  OPTIONAL { ?peak wdt:P4552 ?range1. }\n  OPTIONAL { ?peak wdt:P706 ?range2. ?range2 wdt:P31/wdt:P279* wd:Q46831. }\n  BIND(COALESCE(?range1, ?range2) AS ?range)\n  FILTER(BOUND(?range))\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". ?range rdfs:label ?Answer. }\n}",
        "Answer": "Făgăraș Mountains"
    }
]